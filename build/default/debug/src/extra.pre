
# 1 "src/extra.c"

# 4 "C:\Program Files (x86)\Microchip\xc8\v1.37\include\__size_t.h"
typedef unsigned size_t;

# 7 "C:\Program Files (x86)\Microchip\xc8\v1.37\include\stdarg.h"
typedef void * va_list[1];

#pragma intrinsic(__va_start)
extern void * __va_start(void);

#pragma intrinsic(__va_arg)
extern void * __va_arg(void *, ...);

# 43 "C:\Program Files (x86)\Microchip\xc8\v1.37\include\stdio.h"
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 29 "C:\Program Files (x86)\Microchip\xc8\v1.37\include\errno.h"
extern int errno;

# 12 "C:\Program Files (x86)\Microchip\xc8\v1.37\include\conio.h"
extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern __bit kbhit(void);

# 23
extern char * cgets(char *);
extern void cputs(const char *);

# 88 "C:\Program Files (x86)\Microchip\xc8\v1.37\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);


# 180
#pragma printf_check(vprintf) const
#pragma printf_check(vsprintf) const

extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 55 "src/../include/defines.h"
const float testSet[30][77-1];
const float means[10][77 - 1];
const float stdevs[10][77 - 1];
unsigned int confusionMatrix[10][10];

# 13 "src/../include/prediction.h"
float calculateProbability(float x, float mean, float stdev);
float calculateClassProbability(int classNumber, float *inputVector);
int predict(float *inputVector);
float getAccuracy();
float getPrecision(int class);
float getRecall(int class);
void calculateMetrics();
void printMetrics();

# 14 "src/../include/util.h"
void printSummaries();
void printTestset();
void printConfusionMatrix();
void printTestSetLine(int line);

# 19 "src/extra.c"
void showOff(int testLine)
{
printf("\n---------------------------Prediction Demonstration----------------------");
printf("\nShowing off the prediction skills in the input vector: \n");
printTestSetLine(testLine);
int prediction = predict(testSet[testLine]);
printf("\nPredicted class %d\n",prediction );
if(prediction==testSet[testLine][77-1])
{
printf("It's a hit :)\n");
}else
{
printf("It's a miss :(\n");
}


}

# 42
float getCrossAccuracy(int fold)
{
int i;
float cumulativeAccuracy = 0;
float currentAccuracy = 0;
for(i = 0; i<fold; i++)
{



currentAccuracy = getAccuracy();
printf("%2.2f\n",currentAccuracy);
cumulativeAccuracy+=currentAccuracy;
}

return cumulativeAccuracy/10;
}

