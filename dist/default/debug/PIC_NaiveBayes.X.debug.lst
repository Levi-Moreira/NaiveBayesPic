

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Sep 02 23:39:43 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           	psect	mediumconst
    58  004186                     __pmediumconst:
    59                           	opt stack 0
    60  004186  00                 	db	0
    61  004187                     _means:
    62                           	opt stack 0
    63  004187  0000               	dw	0
    64  004189  0000               	dw	0
    65  00418B  0000               	dw	0
    66  00418D  0000               	dw	0
    67  00418F  0000               	dw	0
    68  004191  0000               	dw	0
    69  004193  0000               	dw	0
    70  004195  0000               	dw	0
    71  004197  0000               	dw	0
    72  004199  0000               	dw	0
    73  00419B  0000               	dw	0
    74  00419D  0000               	dw	0
    75  00419F  0000               	dw	0
    76  0041A1  0000               	dw	0
    77  0041A3  0000               	dw	0
    78  0041A5  0000               	dw	0
    79  0041A7  0000               	dw	0
    80  0041A9  0000               	dw	0
    81  0041AB  0000               	dw	0
    82  0041AD  0000               	dw	0
    83  0041AF  0000               	dw	0
    84  0041B1  0000               	dw	0
    85  0041B3  0000               	dw	0
    86  0041B5  0000               	dw	0
    87  0041B7  0000               	dw	0
    88  0041B9  0000               	dw	0
    89  0041BB  0000               	dw	0
    90  0041BD  0000               	dw	0
    91  0041BF  0000               	dw	0
    92  0041C1  0000               	dw	0
    93  0041C3  0000               	dw	0
    94  0041C5  0000               	dw	0
    95  0041C7  0000               	dw	0
    96  0041C9  0000               	dw	0
    97  0041CB  0000               	dw	0
    98  0041CD  0000               	dw	0
    99  0041CF  0000               	dw	0
   100  0041D1  0000               	dw	0
   101  0041D3  0000               	dw	0
   102  0041D5  0000               	dw	0
   103  0041D7  0000               	dw	0
   104  0041D9  0000               	dw	0
   105  0041DB  0000               	dw	0
   106  0041DD  0000               	dw	0
   107  0041DF  0000               	dw	0
   108  0041E1  0000               	dw	0
   109  0041E3  0000               	dw	0
   110  0041E5  0000               	dw	0
   111  0041E7  0000               	dw	0
   112  0041E9  0000               	dw	0
   113  0041EB  0000               	dw	0
   114  0041ED  0000               	dw	0
   115  0041EF  0000               	dw	0
   116  0041F1  0000               	dw	0
   117  0041F3  0000               	dw	0
   118  0041F5  0000               	dw	0
   119  0041F7  0000               	dw	0
   120  0041F9  0000               	dw	0
   121  0041FB  0000               	dw	0
   122  0041FD  0000               	dw	0
   123  0041FF  0000               	dw	0
   124  004201  0000               	dw	0
   125  004203  0000               	dw	0
   126  004205  0000               	dw	0
   127  004207  0000               	dw	0
   128  004209  0000               	dw	0
   129  00420B  0000               	dw	0
   130  00420D  0000               	dw	0
   131  00420F  0000               	dw	0
   132  004211  0000               	dw	0
   133  004213  0000               	dw	0
   134  004215  0000               	dw	0
   135  004217  0000               	dw	0
   136  004219  0000               	dw	0
   137  00421B  0000               	dw	0
   138  00421D  0000               	dw	0
   139  00421F  0000               	dw	0
   140  004221  0000               	dw	0
   141  004223  0000               	dw	0
   142  004225  0000               	dw	0
   143  004227  0000               	dw	0
   144  004229  0000               	dw	0
   145  00422B  0000               	dw	0
   146  00422D  0000               	dw	0
   147  00422F  0000               	dw	0
   148  004231  0000               	dw	0
   149  004233  0000               	dw	0
   150  004235  0000               	dw	0
   151  004237  0000               	dw	0
   152  004239  0000               	dw	0
   153  00423B  0000               	dw	0
   154  00423D  0000               	dw	0
   155  00423F  0000               	dw	0
   156  004241  0000               	dw	0
   157  004243  0000               	dw	0
   158  004245  0000               	dw	0
   159  004247  0000               	dw	0
   160  004249  0000               	dw	0
   161  00424B  0000               	dw	0
   162  00424D  0000               	dw	0
   163  00424F  0000               	dw	0
   164  004251  0000               	dw	0
   165  004253  0000               	dw	0
   166  004255  0000               	dw	0
   167  004257  0000               	dw	0
   168  004259  0000               	dw	0
   169  00425B  0000               	dw	0
   170  00425D  0000               	dw	0
   171  00425F  0000               	dw	0
   172  004261  0000               	dw	0
   173  004263  0000               	dw	0
   174  004265  0000               	dw	0
   175  004267  0000               	dw	0
   176  004269  0000               	dw	0
   177  00426B  0000               	dw	0
   178  00426D  0000               	dw	0
   179  00426F  0000               	dw	0
   180  004271  0000               	dw	0
   181  004273  0000               	dw	0
   182  004275  0000               	dw	0
   183  004277  0000               	dw	0
   184  004279  0000               	dw	0
   185  00427B  0000               	dw	0
   186  00427D  0000               	dw	0
   187  00427F  0000               	dw	0
   188  004281  0000               	dw	0
   189  004283  0000               	dw	0
   190  004285  0000               	dw	0
   191  004287  0000               	dw	0
   192  004289  0000               	dw	0
   193  00428B  0000               	dw	0
   194  00428D  0000               	dw	0
   195  00428F  0000               	dw	0
   196  004291  0000               	dw	0
   197  004293  0000               	dw	0
   198  004295  0000               	dw	0
   199  004297  0000               	dw	0
   200  004299  0000               	dw	0
   201  00429B  0000               	dw	0
   202  00429D  0000               	dw	0
   203  00429F  0000               	dw	0
   204  0042A1  0000               	dw	0
   205  0042A3  0000               	dw	0
   206  0042A5  0000               	dw	0
   207  0042A7  0000               	dw	0
   208  0042A9  0000               	dw	0
   209  0042AB  0000               	dw	0
   210  0042AD  0000               	dw	0
   211  0042AF  0000               	dw	0
   212  0042B1  0000               	dw	0
   213  0042B3  0000               	dw	0
   214  0042B5  0000               	dw	0
   215  0042B7  0000               	dw	0
   216  0042B9  0000               	dw	0
   217  0042BB  0000               	dw	0
   218  0042BD  0000               	dw	0
   219  0042BF  0000               	dw	0
   220  0042C1  0000               	dw	0
   221  0042C3  0000               	dw	0
   222  0042C5  0000               	dw	0
   223  0042C7  0000               	dw	0
   224  0042C9  0000               	dw	0
   225  0042CB  0000               	dw	0
   226  0042CD  0000               	dw	0
   227  0042CF  0000               	dw	0
   228  0042D1  0000               	dw	0
   229  0042D3  0000               	dw	0
   230  0042D5  0000               	dw	0
   231  0042D7  0000               	dw	0
   232  0042D9  0000               	dw	0
   233  0042DB  0000               	dw	0
   234  0042DD  0000               	dw	0
   235  0042DF  0000               	dw	0
   236  0042E1  0000               	dw	0
   237  0042E3  0000               	dw	0
   238  0042E5  0000               	dw	0
   239  0042E7  0000               	dw	0
   240  0042E9  0000               	dw	0
   241  0042EB  0000               	dw	0
   242  0042ED  0000               	dw	0
   243  0042EF  0000               	dw	0
   244  0042F1  0000               	dw	0
   245  0042F3  0000               	dw	0
   246  0042F5  0000               	dw	0
   247  0042F7  0000               	dw	0
   248  0042F9  0000               	dw	0
   249  0042FB  0000               	dw	0
   250  0042FD  0000               	dw	0
   251  0042FF  0000               	dw	0
   252  004301  0000               	dw	0
   253  004303  0000               	dw	0
   254  004305  0000               	dw	0
   255  004307  0000               	dw	0
   256  004309  0000               	dw	0
   257  00430B  0000               	dw	0
   258  00430D  0000               	dw	0
   259  00430F  0000               	dw	0
   260  004311  0000               	dw	0
   261  004313  0000               	dw	0
   262  004315  0000               	dw	0
   263  004317  0000               	dw	0
   264  004319  0000               	dw	0
   265  00431B  0000               	dw	0
   266  00431D  0000               	dw	0
   267  00431F  0000               	dw	0
   268  004321  0000               	dw	0
   269  004323  0000               	dw	0
   270  004325  0000               	dw	0
   271  004327  0000               	dw	0
   272  004329  0000               	dw	0
   273  00432B  0000               	dw	0
   274  00432D  0000               	dw	0
   275  00432F  0000               	dw	0
   276  004331  0000               	dw	0
   277  004333  0000               	dw	0
   278  004335  0000               	dw	0
   279  004337  0000               	dw	0
   280  004339  0000               	dw	0
   281  00433B  0000               	dw	0
   282  00433D  0000               	dw	0
   283  00433F  0000               	dw	0
   284  004341  0000               	dw	0
   285  004343  0000               	dw	0
   286  004345  0000               	dw	0
   287  004347  0000               	dw	0
   288  004349  0000               	dw	0
   289  00434B  0000               	dw	0
   290  00434D  0000               	dw	0
   291  00434F  0000               	dw	0
   292  004351  0000               	dw	0
   293  004353  0000               	dw	0
   294  004355  0000               	dw	0
   295  004357  0000               	dw	0
   296  004359  0000               	dw	0
   297  00435B  0000               	dw	0
   298  00435D  0000               	dw	0
   299  00435F  0000               	dw	0
   300  004361  0000               	dw	0
   301  004363  0000               	dw	0
   302  004365  0000               	dw	0
   303  004367  0000               	dw	0
   304  004369  0000               	dw	0
   305  00436B  0000               	dw	0
   306  00436D  0000               	dw	0
   307  00436F  0000               	dw	0
   308  004371  0000               	dw	0
   309  004373  0000               	dw	0
   310  004375  0000               	dw	0
   311  004377  0000               	dw	0
   312  004379  0000               	dw	0
   313  00437B  0000               	dw	0
   314  00437D  0000               	dw	0
   315  00437F  0000               	dw	0
   316  004381  0000               	dw	0
   317  004383  0000               	dw	0
   318  004385  0000               	dw	0
   319  004387  0000               	dw	0
   320  004389  0000               	dw	0
   321  00438B  0000               	dw	0
   322  00438D  0000               	dw	0
   323  00438F  0000               	dw	0
   324  004391  0000               	dw	0
   325  004393  0000               	dw	0
   326  004395  0000               	dw	0
   327  004397  0000               	dw	0
   328  004399  0000               	dw	0
   329  00439B  0000               	dw	0
   330  00439D  0000               	dw	0
   331  00439F  0000               	dw	0
   332  0043A1  0000               	dw	0
   333  0043A3  0000               	dw	0
   334  0043A5  0000               	dw	0
   335  0043A7  0000               	dw	0
   336  0043A9  0000               	dw	0
   337  0043AB  0000               	dw	0
   338  0043AD  0000               	dw	0
   339  0043AF  0000               	dw	0
   340  0043B1  0000               	dw	0
   341  0043B3  0000               	dw	0
   342  0043B5  0000               	dw	0
   343  0043B7  0000               	dw	0
   344  0043B9  0000               	dw	0
   345  0043BB  0000               	dw	0
   346  0043BD  0000               	dw	0
   347  0043BF  0000               	dw	0
   348  0043C1  0000               	dw	0
   349  0043C3  0000               	dw	0
   350  0043C5  0000               	dw	0
   351  0043C7  0000               	dw	0
   352  0043C9  0000               	dw	0
   353  0043CB  0000               	dw	0
   354  0043CD  0000               	dw	0
   355  0043CF  0000               	dw	0
   356  0043D1  0000               	dw	0
   357  0043D3  0000               	dw	0
   358  0043D5  0000               	dw	0
   359  0043D7  0000               	dw	0
   360  0043D9  0000               	dw	0
   361  0043DB  0000               	dw	0
   362  0043DD  0000               	dw	0
   363  0043DF  0000               	dw	0
   364  0043E1  0000               	dw	0
   365  0043E3  0000               	dw	0
   366  0043E5  0000               	dw	0
   367  0043E7  0000               	dw	0
   368  0043E9  0000               	dw	0
   369  0043EB  0000               	dw	0
   370  0043ED  0000               	dw	0
   371  0043EF  0000               	dw	0
   372  0043F1  0000               	dw	0
   373  0043F3  0000               	dw	0
   374  0043F5  0000               	dw	0
   375  0043F7  0000               	dw	0
   376  0043F9  0000               	dw	0
   377  0043FB  0000               	dw	0
   378  0043FD  0000               	dw	0
   379  0043FF  0000               	dw	0
   380  004401  0000               	dw	0
   381  004403  0000               	dw	0
   382  004405  0000               	dw	0
   383  004407  0000               	dw	0
   384  004409  0000               	dw	0
   385  00440B  0000               	dw	0
   386  00440D  0000               	dw	0
   387  00440F  0000               	dw	0
   388  004411  0000               	dw	0
   389  004413  0000               	dw	0
   390  004415  0000               	dw	0
   391  004417  0000               	dw	0
   392  004419  0000               	dw	0
   393  00441B  0000               	dw	0
   394  00441D  0000               	dw	0
   395  00441F  0000               	dw	0
   396  004421  0000               	dw	0
   397  004423  0000               	dw	0
   398  004425  0000               	dw	0
   399  004427  0000               	dw	0
   400  004429  0000               	dw	0
   401  00442B  0000               	dw	0
   402  00442D  0000               	dw	0
   403  00442F  0000               	dw	0
   404  004431  0000               	dw	0
   405  004433  0000               	dw	0
   406  004435  0000               	dw	0
   407  004437  0000               	dw	0
   408  004439  0000               	dw	0
   409  00443B  0000               	dw	0
   410  00443D  0000               	dw	0
   411  00443F  0000               	dw	0
   412  004441  0000               	dw	0
   413  004443  0000               	dw	0
   414  004445  0000               	dw	0
   415  004447  0000               	dw	0
   416  004449  0000               	dw	0
   417  00444B  0000               	dw	0
   418  00444D  0000               	dw	0
   419  00444F  0000               	dw	0
   420  004451  0000               	dw	0
   421  004453  0000               	dw	0
   422  004455  0000               	dw	0
   423  004457  0000               	dw	0
   424  004459  0000               	dw	0
   425  00445B  0000               	dw	0
   426  00445D  0000               	dw	0
   427  00445F  0000               	dw	0
   428  004461  0000               	dw	0
   429  004463  0000               	dw	0
   430  004465  0000               	dw	0
   431  004467  0000               	dw	0
   432  004469  0000               	dw	0
   433  00446B  0000               	dw	0
   434  00446D  0000               	dw	0
   435  00446F  0000               	dw	0
   436  004471  0000               	dw	0
   437  004473  0000               	dw	0
   438  004475  0000               	dw	0
   439  004477  0000               	dw	0
   440  004479  0000               	dw	0
   441  00447B  0000               	dw	0
   442  00447D  0000               	dw	0
   443  00447F  0000               	dw	0
   444  004481  0000               	dw	0
   445  004483  0000               	dw	0
   446  004485  0000               	dw	0
   447  004487  0000               	dw	0
   448  004489  0000               	dw	0
   449  00448B  0000               	dw	0
   450  00448D  0000               	dw	0
   451  00448F  0000               	dw	0
   452  004491  0000               	dw	0
   453  004493  0000               	dw	0
   454  004495  0000               	dw	0
   455  004497  0000               	dw	0
   456  004499  0000               	dw	0
   457  00449B  0000               	dw	0
   458  00449D  0000               	dw	0
   459  00449F  0000               	dw	0
   460  0044A1  0000               	dw	0
   461  0044A3  0000               	dw	0
   462  0044A5  0000               	dw	0
   463  0044A7  0000               	dw	0
   464  0044A9  0000               	dw	0
   465  0044AB  0000               	dw	0
   466  0044AD  0000               	dw	0
   467  0044AF  0000               	dw	0
   468  0044B1  0000               	dw	0
   469  0044B3  0000               	dw	0
   470  0044B5  0000               	dw	0
   471  0044B7  0000               	dw	0
   472  0044B9  0000               	dw	0
   473  0044BB  0000               	dw	0
   474  0044BD  0000               	dw	0
   475  0044BF  0000               	dw	0
   476  0044C1  0000               	dw	0
   477  0044C3  0000               	dw	0
   478  0044C5  0000               	dw	0
   479  0044C7  0000               	dw	0
   480  0044C9  0000               	dw	0
   481  0044CB  0000               	dw	0
   482  0044CD  0000               	dw	0
   483  0044CF  0000               	dw	0
   484  0044D1  0000               	dw	0
   485  0044D3  0000               	dw	0
   486  0044D5  0000               	dw	0
   487  0044D7  0000               	dw	0
   488  0044D9  0000               	dw	0
   489  0044DB  0000               	dw	0
   490  0044DD  0000               	dw	0
   491  0044DF  0000               	dw	0
   492  0044E1  0000               	dw	0
   493  0044E3  0000               	dw	0
   494  0044E5  0000               	dw	0
   495  0044E7  0000               	dw	0
   496  0044E9  0000               	dw	0
   497  0044EB  0000               	dw	0
   498  0044ED  0000               	dw	0
   499  0044EF  0000               	dw	0
   500  0044F1  0000               	dw	0
   501  0044F3  0000               	dw	0
   502  0044F5  0000               	dw	0
   503  0044F7  0000               	dw	0
   504  0044F9  0000               	dw	0
   505  0044FB  0000               	dw	0
   506  0044FD  0000               	dw	0
   507  0044FF  0000               	dw	0
   508  004501  0000               	dw	0
   509  004503  0000               	dw	0
   510  004505  0000               	dw	0
   511  004507  0000               	dw	0
   512  004509  0000               	dw	0
   513  00450B  0000               	dw	0
   514  00450D  0000               	dw	0
   515  00450F  0000               	dw	0
   516  004511  0000               	dw	0
   517  004513  0000               	dw	0
   518  004515  0000               	dw	0
   519  004517  0000               	dw	0
   520  004519  0000               	dw	0
   521  00451B  0000               	dw	0
   522  00451D  0000               	dw	0
   523  00451F  0000               	dw	0
   524  004521  0000               	dw	0
   525  004523  0000               	dw	0
   526  004525  0000               	dw	0
   527  004527  0000               	dw	0
   528  004529  0000               	dw	0
   529  00452B  0000               	dw	0
   530  00452D  0000               	dw	0
   531  00452F  0000               	dw	0
   532  004531  0000               	dw	0
   533  004533  0000               	dw	0
   534  004535  0000               	dw	0
   535  004537  0000               	dw	0
   536  004539  0000               	dw	0
   537  00453B  0000               	dw	0
   538  00453D  0000               	dw	0
   539  00453F  0000               	dw	0
   540  004541  0000               	dw	0
   541  004543  0000               	dw	0
   542  004545  0000               	dw	0
   543  004547  0000               	dw	0
   544  004549  0000               	dw	0
   545  00454B  0000               	dw	0
   546  00454D  0000               	dw	0
   547  00454F  0000               	dw	0
   548  004551  0000               	dw	0
   549  004553  0000               	dw	0
   550  004555  0000               	dw	0
   551  004557  0000               	dw	0
   552  004559  0000               	dw	0
   553  00455B  0000               	dw	0
   554  00455D  0000               	dw	0
   555  00455F  0000               	dw	0
   556  004561  0000               	dw	0
   557  004563  0000               	dw	0
   558  004565  0000               	dw	0
   559  004567  0000               	dw	0
   560  004569  0000               	dw	0
   561  00456B  0000               	dw	0
   562  00456D  0000               	dw	0
   563  00456F  0000               	dw	0
   564  004571  0000               	dw	0
   565  004573  0000               	dw	0
   566  004575  0000               	dw	0
   567  004577  0000               	dw	0
   568  004579  0000               	dw	0
   569  00457B  0000               	dw	0
   570  00457D  0000               	dw	0
   571  00457F  0000               	dw	0
   572  004581  0000               	dw	0
   573  004583  0000               	dw	0
   574  004585  0000               	dw	0
   575  004587  0000               	dw	0
   576  004589  0000               	dw	0
   577  00458B  0000               	dw	0
   578  00458D  0000               	dw	0
   579  00458F  0000               	dw	0
   580  004591  0000               	dw	0
   581  004593  0000               	dw	0
   582  004595  0000               	dw	0
   583  004597  0000               	dw	0
   584  004599  0000               	dw	0
   585  00459B  0000               	dw	0
   586  00459D  0000               	dw	0
   587  00459F  0000               	dw	0
   588  0045A1  0000               	dw	0
   589  0045A3  0000               	dw	0
   590  0045A5  0000               	dw	0
   591  0045A7  0000               	dw	0
   592  0045A9  0000               	dw	0
   593  0045AB  0000               	dw	0
   594  0045AD  0000               	dw	0
   595  0045AF  0000               	dw	0
   596  0045B1  0000               	dw	0
   597  0045B3  0000               	dw	0
   598  0045B5  0000               	dw	0
   599  0045B7  0000               	dw	0
   600  0045B9  0000               	dw	0
   601  0045BB  0000               	dw	0
   602  0045BD  0000               	dw	0
   603  0045BF  0000               	dw	0
   604  0045C1  0000               	dw	0
   605  0045C3  0000               	dw	0
   606  0045C5  0000               	dw	0
   607  0045C7  0000               	dw	0
   608  0045C9  0000               	dw	0
   609  0045CB  0000               	dw	0
   610  0045CD  0000               	dw	0
   611  0045CF  0000               	dw	0
   612  0045D1  0000               	dw	0
   613  0045D3  0000               	dw	0
   614  0045D5  0000               	dw	0
   615  0045D7  0000               	dw	0
   616  0045D9  0000               	dw	0
   617  0045DB  0000               	dw	0
   618  0045DD  0000               	dw	0
   619  0045DF  0000               	dw	0
   620  0045E1  0000               	dw	0
   621  0045E3  0000               	dw	0
   622  0045E5  0000               	dw	0
   623  0045E7  0000               	dw	0
   624  0045E9  0000               	dw	0
   625  0045EB  0000               	dw	0
   626  0045ED  0000               	dw	0
   627  0045EF  0000               	dw	0
   628  0045F1  0000               	dw	0
   629  0045F3  0000               	dw	0
   630  0045F5  0000               	dw	0
   631  0045F7  0000               	dw	0
   632  0045F9  0000               	dw	0
   633  0045FB  0000               	dw	0
   634  0045FD  0000               	dw	0
   635  0045FF  0000               	dw	0
   636  004601  0000               	dw	0
   637  004603  0000               	dw	0
   638  004605  0000               	dw	0
   639  004607  0000               	dw	0
   640  004609  0000               	dw	0
   641  00460B  0000               	dw	0
   642  00460D  0000               	dw	0
   643  00460F  0000               	dw	0
   644  004611  0000               	dw	0
   645  004613  0000               	dw	0
   646  004615  0000               	dw	0
   647  004617  0000               	dw	0
   648  004619  0000               	dw	0
   649  00461B  0000               	dw	0
   650  00461D  0000               	dw	0
   651  00461F  0000               	dw	0
   652  004621  0000               	dw	0
   653  004623  0000               	dw	0
   654  004625  0000               	dw	0
   655  004627  0000               	dw	0
   656  004629  0000               	dw	0
   657  00462B  0000               	dw	0
   658  00462D  0000               	dw	0
   659  00462F  0000               	dw	0
   660  004631  0000               	dw	0
   661  004633  0000               	dw	0
   662  004635  0000               	dw	0
   663  004637  0000               	dw	0
   664  004639  0000               	dw	0
   665  00463B  0000               	dw	0
   666  00463D  0000               	dw	0
   667  00463F  0000               	dw	0
   668  004641  0000               	dw	0
   669  004643  0000               	dw	0
   670  004645  0000               	dw	0
   671  004647  0000               	dw	0
   672  004649  0000               	dw	0
   673  00464B  0000               	dw	0
   674  00464D  0000               	dw	0
   675  00464F  0000               	dw	0
   676  004651  0000               	dw	0
   677  004653  0000               	dw	0
   678  004655  0000               	dw	0
   679  004657  0000               	dw	0
   680  004659  0000               	dw	0
   681  00465B  0000               	dw	0
   682  00465D  0000               	dw	0
   683  00465F  0000               	dw	0
   684  004661  0000               	dw	0
   685  004663  0000               	dw	0
   686  004665  0000               	dw	0
   687  004667  0000               	dw	0
   688  004669  0000               	dw	0
   689  00466B  0000               	dw	0
   690  00466D  0000               	dw	0
   691  00466F  0000               	dw	0
   692  004671  0000               	dw	0
   693  004673  0000               	dw	0
   694  004675  0000               	dw	0
   695  004677  0000               	dw	0
   696  004679  0000               	dw	0
   697  00467B  0000               	dw	0
   698  00467D  0000               	dw	0
   699  00467F  0000               	dw	0
   700  004681  0000               	dw	0
   701  004683  0000               	dw	0
   702  004685  0000               	dw	0
   703  004687  0000               	dw	0
   704  004689  0000               	dw	0
   705  00468B  0000               	dw	0
   706  00468D  0000               	dw	0
   707  00468F  0000               	dw	0
   708  004691  0000               	dw	0
   709  004693  0000               	dw	0
   710  004695  0000               	dw	0
   711  004697  0000               	dw	0
   712  004699  0000               	dw	0
   713  00469B  0000               	dw	0
   714  00469D  0000               	dw	0
   715  00469F  0000               	dw	0
   716  0046A1  0000               	dw	0
   717  0046A3  0000               	dw	0
   718  0046A5  0000               	dw	0
   719  0046A7  0000               	dw	0
   720  0046A9  0000               	dw	0
   721  0046AB  0000               	dw	0
   722  0046AD  0000               	dw	0
   723  0046AF  0000               	dw	0
   724  0046B1  0000               	dw	0
   725  0046B3  0000               	dw	0
   726  0046B5  0000               	dw	0
   727  0046B7  0000               	dw	0
   728  0046B9  0000               	dw	0
   729  0046BB  0000               	dw	0
   730  0046BD  0000               	dw	0
   731  0046BF  0000               	dw	0
   732  0046C1  0000               	dw	0
   733  0046C3  0000               	dw	0
   734  0046C5  0000               	dw	0
   735  0046C7  0000               	dw	0
   736  0046C9  0000               	dw	0
   737  0046CB  0000               	dw	0
   738  0046CD  0000               	dw	0
   739  0046CF  0000               	dw	0
   740  0046D1  0000               	dw	0
   741  0046D3  0000               	dw	0
   742  0046D5  0000               	dw	0
   743  0046D7  0000               	dw	0
   744  0046D9  0000               	dw	0
   745  0046DB  0000               	dw	0
   746  0046DD  0000               	dw	0
   747  0046DF  0000               	dw	0
   748  0046E1  0000               	dw	0
   749  0046E3  0000               	dw	0
   750  0046E5  0000               	dw	0
   751  0046E7  0000               	dw	0
   752  0046E9  0000               	dw	0
   753  0046EB  0000               	dw	0
   754  0046ED  0000               	dw	0
   755  0046EF  0000               	dw	0
   756  0046F1  0000               	dw	0
   757  0046F3  0000               	dw	0
   758  0046F5  0000               	dw	0
   759  0046F7  0000               	dw	0
   760  0046F9  0000               	dw	0
   761  0046FB  0000               	dw	0
   762  0046FD  0000               	dw	0
   763  0046FF  0000               	dw	0
   764  004701  0000               	dw	0
   765  004703  0000               	dw	0
   766  004705  0000               	dw	0
   767  004707  0000               	dw	0
   768  004709  0000               	dw	0
   769  00470B  0000               	dw	0
   770  00470D  0000               	dw	0
   771  00470F  0000               	dw	0
   772  004711  0000               	dw	0
   773  004713  0000               	dw	0
   774  004715  0000               	dw	0
   775  004717  0000               	dw	0
   776  004719  0000               	dw	0
   777  00471B  0000               	dw	0
   778  00471D  0000               	dw	0
   779  00471F  0000               	dw	0
   780  004721  0000               	dw	0
   781  004723  0000               	dw	0
   782  004725  0000               	dw	0
   783  004727  0000               	dw	0
   784  004729  0000               	dw	0
   785  00472B  0000               	dw	0
   786  00472D  0000               	dw	0
   787  00472F  0000               	dw	0
   788  004731  0000               	dw	0
   789  004733  0000               	dw	0
   790  004735  0000               	dw	0
   791  004737  0000               	dw	0
   792  004739  0000               	dw	0
   793  00473B  0000               	dw	0
   794  00473D  0000               	dw	0
   795  00473F  0000               	dw	0
   796  004741  0000               	dw	0
   797  004743  0000               	dw	0
   798  004745  0000               	dw	0
   799  004747  0000               	dw	0
   800  004749  0000               	dw	0
   801  00474B  0000               	dw	0
   802  00474D  0000               	dw	0
   803  00474F  0000               	dw	0
   804  004751  0000               	dw	0
   805  004753  0000               	dw	0
   806  004755  0000               	dw	0
   807  004757  0000               	dw	0
   808  004759  0000               	dw	0
   809  00475B  0000               	dw	0
   810  00475D  0000               	dw	0
   811  00475F  0000               	dw	0
   812  004761  0000               	dw	0
   813  004763  0000               	dw	0
   814  004765  0000               	dw	0
   815  004767  0000               	dw	0
   816  004769  0000               	dw	0
   817  00476B  0000               	dw	0
   818  00476D  0000               	dw	0
   819  00476F  0000               	dw	0
   820  004771  0000               	dw	0
   821  004773  0000               	dw	0
   822  004775  0000               	dw	0
   823  004777  0000               	dw	0
   824  004779  0000               	dw	0
   825  00477B  0000               	dw	0
   826  00477D  0000               	dw	0
   827  00477F  0000               	dw	0
   828  004781  0000               	dw	0
   829  004783  0000               	dw	0
   830  004785  0000               	dw	0
   831  004787  0000               	dw	0
   832  004789  0000               	dw	0
   833  00478B  0000               	dw	0
   834  00478D  0000               	dw	0
   835  00478F  0000               	dw	0
   836  004791  0000               	dw	0
   837  004793  0000               	dw	0
   838  004795  0000               	dw	0
   839  004797  0000               	dw	0
   840  004799  0000               	dw	0
   841  00479B  0000               	dw	0
   842  00479D  0000               	dw	0
   843  00479F  0000               	dw	0
   844  0047A1  0000               	dw	0
   845  0047A3  0000               	dw	0
   846  0047A5  0000               	dw	0
   847  0047A7  0000               	dw	0
   848  0047A9  0000               	dw	0
   849  0047AB  0000               	dw	0
   850  0047AD  0000               	dw	0
   851  0047AF  0000               	dw	0
   852  0047B1  0000               	dw	0
   853  0047B3  0000               	dw	0
   854  0047B5  0000               	dw	0
   855  0047B7  0000               	dw	0
   856  0047B9  0000               	dw	0
   857  0047BB  0000               	dw	0
   858  0047BD  0000               	dw	0
   859  0047BF  0000               	dw	0
   860  0047C1  0000               	dw	0
   861  0047C3  0000               	dw	0
   862  0047C5  0000               	dw	0
   863  0047C7  0000               	dw	0
   864  0047C9  0000               	dw	0
   865  0047CB  0000               	dw	0
   866  0047CD  0000               	dw	0
   867  0047CF  0000               	dw	0
   868  0047D1  0000               	dw	0
   869  0047D3  0000               	dw	0
   870  0047D5  0000               	dw	0
   871  0047D7  0000               	dw	0
   872  0047D9  0000               	dw	0
   873  0047DB  0000               	dw	0
   874  0047DD  0000               	dw	0
   875  0047DF  0000               	dw	0
   876  0047E1  0000               	dw	0
   877  0047E3  0000               	dw	0
   878  0047E5  0000               	dw	0
   879  0047E7  0000               	dw	0
   880  0047E9  0000               	dw	0
   881  0047EB  0000               	dw	0
   882  0047ED  0000               	dw	0
   883  0047EF  0000               	dw	0
   884  0047F1  0000               	dw	0
   885  0047F3  0000               	dw	0
   886  0047F5  0000               	dw	0
   887  0047F7  0000               	dw	0
   888  0047F9  0000               	dw	0
   889  0047FB  0000               	dw	0
   890  0047FD  0000               	dw	0
   891  0047FF  0000               	dw	0
   892  004801  0000               	dw	0
   893  004803  0000               	dw	0
   894  004805  0000               	dw	0
   895  004807  0000               	dw	0
   896  004809  0000               	dw	0
   897  00480B  0000               	dw	0
   898  00480D  0000               	dw	0
   899  00480F  0000               	dw	0
   900  004811  0000               	dw	0
   901  004813  0000               	dw	0
   902  004815  0000               	dw	0
   903  004817  0000               	dw	0
   904  004819  0000               	dw	0
   905  00481B  0000               	dw	0
   906  00481D  0000               	dw	0
   907  00481F  0000               	dw	0
   908  004821  0000               	dw	0
   909  004823  0000               	dw	0
   910  004825  0000               	dw	0
   911  004827  0000               	dw	0
   912  004829  0000               	dw	0
   913  00482B  0000               	dw	0
   914  00482D  0000               	dw	0
   915  00482F  0000               	dw	0
   916  004831  0000               	dw	0
   917  004833  0000               	dw	0
   918  004835  0000               	dw	0
   919  004837  0000               	dw	0
   920  004839  0000               	dw	0
   921  00483B  0000               	dw	0
   922  00483D  0000               	dw	0
   923  00483F  0000               	dw	0
   924  004841  0000               	dw	0
   925  004843  0000               	dw	0
   926  004845  0000               	dw	0
   927  004847  0000               	dw	0
   928  004849  0000               	dw	0
   929  00484B  0000               	dw	0
   930  00484D  0000               	dw	0
   931  00484F  0000               	dw	0
   932  004851  0000               	dw	0
   933  004853  0000               	dw	0
   934  004855  0000               	dw	0
   935  004857  0000               	dw	0
   936  004859  0000               	dw	0
   937  00485B  0000               	dw	0
   938  00485D  0000               	dw	0
   939  00485F  0000               	dw	0
   940  004861  0000               	dw	0
   941  004863  0000               	dw	0
   942  004865  0000               	dw	0
   943  004867  0000               	dw	0
   944  004869  0000               	dw	0
   945  00486B  0000               	dw	0
   946  00486D  0000               	dw	0
   947  00486F  0000               	dw	0
   948  004871  0000               	dw	0
   949  004873  0000               	dw	0
   950  004875  0000               	dw	0
   951  004877  0000               	dw	0
   952  004879  0000               	dw	0
   953  00487B  0000               	dw	0
   954  00487D  0000               	dw	0
   955  00487F  0000               	dw	0
   956  004881  0000               	dw	0
   957  004883  0000               	dw	0
   958  004885  0000               	dw	0
   959  004887  0000               	dw	0
   960  004889  0000               	dw	0
   961  00488B  0000               	dw	0
   962  00488D  0000               	dw	0
   963  00488F  0000               	dw	0
   964  004891  0000               	dw	0
   965  004893  0000               	dw	0
   966  004895  0000               	dw	0
   967  004897  0000               	dw	0
   968  004899  0000               	dw	0
   969  00489B  0000               	dw	0
   970  00489D  0000               	dw	0
   971  00489F  0000               	dw	0
   972  0048A1  0000               	dw	0
   973  0048A3  0000               	dw	0
   974  0048A5  0000               	dw	0
   975  0048A7  0000               	dw	0
   976  0048A9  0000               	dw	0
   977  0048AB  0000               	dw	0
   978  0048AD  0000               	dw	0
   979  0048AF  0000               	dw	0
   980  0048B1  0000               	dw	0
   981  0048B3  0000               	dw	0
   982  0048B5  0000               	dw	0
   983  0048B7  0000               	dw	0
   984  0048B9  0000               	dw	0
   985  0048BB  0000               	dw	0
   986  0048BD  0000               	dw	0
   987  0048BF  0000               	dw	0
   988  0048C1  0000               	dw	0
   989  0048C3  0000               	dw	0
   990  0048C5  0000               	dw	0
   991  0048C7  0000               	dw	0
   992  0048C9  0000               	dw	0
   993  0048CB  0000               	dw	0
   994  0048CD  0000               	dw	0
   995  0048CF  0000               	dw	0
   996  0048D1  0000               	dw	0
   997  0048D3  0000               	dw	0
   998  0048D5  0000               	dw	0
   999  0048D7  0000               	dw	0
  1000  0048D9  0000               	dw	0
  1001  0048DB  0000               	dw	0
  1002  0048DD  0000               	dw	0
  1003  0048DF  0000               	dw	0
  1004  0048E1  0000               	dw	0
  1005  0048E3  0000               	dw	0
  1006  0048E5  0000               	dw	0
  1007  0048E7  0000               	dw	0
  1008  0048E9  0000               	dw	0
  1009  0048EB  0000               	dw	0
  1010  0048ED  0000               	dw	0
  1011  0048EF  0000               	dw	0
  1012  0048F1  0000               	dw	0
  1013  0048F3  0000               	dw	0
  1014  0048F5  0000               	dw	0
  1015  0048F7  0000               	dw	0
  1016  0048F9  0000               	dw	0
  1017  0048FB  0000               	dw	0
  1018  0048FD  0000               	dw	0
  1019  0048FF  0000               	dw	0
  1020  004901  0000               	dw	0
  1021  004903  0000               	dw	0
  1022  004905  0000               	dw	0
  1023  004907  0000               	dw	0
  1024  004909  0000               	dw	0
  1025  00490B  0000               	dw	0
  1026  00490D  0000               	dw	0
  1027  00490F  0000               	dw	0
  1028  004911  0000               	dw	0
  1029  004913  0000               	dw	0
  1030  004915  0000               	dw	0
  1031  004917  0000               	dw	0
  1032  004919  0000               	dw	0
  1033  00491B  0000               	dw	0
  1034  00491D  0000               	dw	0
  1035  00491F  0000               	dw	0
  1036  004921  0000               	dw	0
  1037  004923  0000               	dw	0
  1038  004925  0000               	dw	0
  1039  004927  0000               	dw	0
  1040  004929  0000               	dw	0
  1041  00492B  0000               	dw	0
  1042  00492D  0000               	dw	0
  1043  00492F  0000               	dw	0
  1044  004931  0000               	dw	0
  1045  004933  0000               	dw	0
  1046  004935  0000               	dw	0
  1047  004937  0000               	dw	0
  1048  004939  0000               	dw	0
  1049  00493B  0000               	dw	0
  1050  00493D  0000               	dw	0
  1051  00493F  0000               	dw	0
  1052  004941  0000               	dw	0
  1053  004943  0000               	dw	0
  1054  004945  0000               	dw	0
  1055  004947  0000               	dw	0
  1056  004949  0000               	dw	0
  1057  00494B  0000               	dw	0
  1058  00494D  0000               	dw	0
  1059  00494F  0000               	dw	0
  1060  004951  0000               	dw	0
  1061  004953  0000               	dw	0
  1062  004955  0000               	dw	0
  1063  004957  0000               	dw	0
  1064  004959  0000               	dw	0
  1065  00495B  0000               	dw	0
  1066  00495D  0000               	dw	0
  1067  00495F  0000               	dw	0
  1068  004961  0000               	dw	0
  1069  004963  0000               	dw	0
  1070  004965  0000               	dw	0
  1071  004967  0000               	dw	0
  1072  004969  0000               	dw	0
  1073  00496B  0000               	dw	0
  1074  00496D  0000               	dw	0
  1075  00496F  0000               	dw	0
  1076  004971  0000               	dw	0
  1077  004973  0000               	dw	0
  1078  004975  0000               	dw	0
  1079  004977  0000               	dw	0
  1080  004979  0000               	dw	0
  1081  00497B  0000               	dw	0
  1082  00497D  0000               	dw	0
  1083  00497F  0000               	dw	0
  1084  004981  0000               	dw	0
  1085  004983  0000               	dw	0
  1086  004985  0000               	dw	0
  1087  004987  0000               	dw	0
  1088  004989  0000               	dw	0
  1089  00498B  0000               	dw	0
  1090  00498D  0000               	dw	0
  1091  00498F  0000               	dw	0
  1092  004991  0000               	dw	0
  1093  004993  0000               	dw	0
  1094  004995  0000               	dw	0
  1095  004997  0000               	dw	0
  1096  004999  0000               	dw	0
  1097  00499B  0000               	dw	0
  1098  00499D  0000               	dw	0
  1099  00499F  0000               	dw	0
  1100  0049A1  0000               	dw	0
  1101  0049A3  0000               	dw	0
  1102  0049A5  0000               	dw	0
  1103  0049A7  0000               	dw	0
  1104  0049A9  0000               	dw	0
  1105  0049AB  0000               	dw	0
  1106  0049AD  0000               	dw	0
  1107  0049AF  0000               	dw	0
  1108  0049B1  0000               	dw	0
  1109  0049B3  0000               	dw	0
  1110  0049B5  0000               	dw	0
  1111  0049B7  0000               	dw	0
  1112  0049B9  0000               	dw	0
  1113  0049BB  0000               	dw	0
  1114  0049BD  0000               	dw	0
  1115  0049BF  0000               	dw	0
  1116  0049C1  0000               	dw	0
  1117  0049C3  0000               	dw	0
  1118  0049C5  0000               	dw	0
  1119  0049C7  0000               	dw	0
  1120  0049C9  0000               	dw	0
  1121  0049CB  0000               	dw	0
  1122  0049CD  0000               	dw	0
  1123  0049CF  0000               	dw	0
  1124  0049D1  0000               	dw	0
  1125  0049D3  0000               	dw	0
  1126  0049D5  0000               	dw	0
  1127  0049D7  0000               	dw	0
  1128  0049D9  0000               	dw	0
  1129  0049DB  0000               	dw	0
  1130  0049DD  0000               	dw	0
  1131  0049DF  0000               	dw	0
  1132  0049E1  0000               	dw	0
  1133  0049E3  0000               	dw	0
  1134  0049E5  0000               	dw	0
  1135  0049E7  0000               	dw	0
  1136  0049E9  0000               	dw	0
  1137  0049EB  0000               	dw	0
  1138  0049ED  0000               	dw	0
  1139  0049EF  0000               	dw	0
  1140  0049F1  0000               	dw	0
  1141  0049F3  0000               	dw	0
  1142  0049F5  0000               	dw	0
  1143  0049F7  0000               	dw	0
  1144  0049F9  0000               	dw	0
  1145  0049FB  0000               	dw	0
  1146  0049FD  0000               	dw	0
  1147  0049FF  0000               	dw	0
  1148  004A01  0000               	dw	0
  1149  004A03  0000               	dw	0
  1150  004A05  0000               	dw	0
  1151  004A07  0000               	dw	0
  1152  004A09  0000               	dw	0
  1153  004A0B  0000               	dw	0
  1154  004A0D  0000               	dw	0
  1155  004A0F  0000               	dw	0
  1156  004A11  0000               	dw	0
  1157  004A13  0000               	dw	0
  1158  004A15  0000               	dw	0
  1159  004A17  0000               	dw	0
  1160  004A19  0000               	dw	0
  1161  004A1B  0000               	dw	0
  1162  004A1D  0000               	dw	0
  1163  004A1F  0000               	dw	0
  1164  004A21  0000               	dw	0
  1165  004A23  0000               	dw	0
  1166  004A25  0000               	dw	0
  1167  004A27  0000               	dw	0
  1168  004A29  0000               	dw	0
  1169  004A2B  0000               	dw	0
  1170  004A2D  0000               	dw	0
  1171  004A2F  0000               	dw	0
  1172  004A31  0000               	dw	0
  1173  004A33  0000               	dw	0
  1174  004A35  0000               	dw	0
  1175  004A37  0000               	dw	0
  1176  004A39  0000               	dw	0
  1177  004A3B  0000               	dw	0
  1178  004A3D  0000               	dw	0
  1179  004A3F  0000               	dw	0
  1180  004A41  0000               	dw	0
  1181  004A43  0000               	dw	0
  1182  004A45  0000               	dw	0
  1183  004A47  0000               	dw	0
  1184  004A49  0000               	dw	0
  1185  004A4B  0000               	dw	0
  1186  004A4D  0000               	dw	0
  1187  004A4F  0000               	dw	0
  1188  004A51  0000               	dw	0
  1189  004A53  0000               	dw	0
  1190  004A55  0000               	dw	0
  1191  004A57  0000               	dw	0
  1192  004A59  0000               	dw	0
  1193  004A5B  0000               	dw	0
  1194  004A5D  0000               	dw	0
  1195  004A5F  0000               	dw	0
  1196  004A61  0000               	dw	0
  1197  004A63  0000               	dw	0
  1198  004A65  0000               	dw	0
  1199  004A67  0000               	dw	0
  1200  004A69  0000               	dw	0
  1201  004A6B  0000               	dw	0
  1202  004A6D  0000               	dw	0
  1203  004A6F  0000               	dw	0
  1204  004A71  0000               	dw	0
  1205  004A73  0000               	dw	0
  1206  004A75  0000               	dw	0
  1207  004A77  0000               	dw	0
  1208  004A79  0000               	dw	0
  1209  004A7B  0000               	dw	0
  1210  004A7D  0000               	dw	0
  1211  004A7F  0000               	dw	0
  1212  004A81  0000               	dw	0
  1213  004A83  0000               	dw	0
  1214  004A85  0000               	dw	0
  1215  004A87  0000               	dw	0
  1216  004A89  0000               	dw	0
  1217  004A8B  0000               	dw	0
  1218  004A8D  0000               	dw	0
  1219  004A8F  0000               	dw	0
  1220  004A91  0000               	dw	0
  1221  004A93  0000               	dw	0
  1222  004A95  0000               	dw	0
  1223  004A97  0000               	dw	0
  1224  004A99  0000               	dw	0
  1225  004A9B  0000               	dw	0
  1226  004A9D  0000               	dw	0
  1227  004A9F  0000               	dw	0
  1228  004AA1  0000               	dw	0
  1229  004AA3  0000               	dw	0
  1230  004AA5  0000               	dw	0
  1231  004AA7  0000               	dw	0
  1232  004AA9  0000               	dw	0
  1233  004AAB  0000               	dw	0
  1234  004AAD  0000               	dw	0
  1235  004AAF  0000               	dw	0
  1236  004AB1  0000               	dw	0
  1237  004AB3  0000               	dw	0
  1238  004AB5  0000               	dw	0
  1239  004AB7  0000               	dw	0
  1240  004AB9  0000               	dw	0
  1241  004ABB  0000               	dw	0
  1242  004ABD  0000               	dw	0
  1243  004ABF  0000               	dw	0
  1244  004AC1  0000               	dw	0
  1245  004AC3  0000               	dw	0
  1246  004AC5  0000               	dw	0
  1247  004AC7  0000               	dw	0
  1248  004AC9  0000               	dw	0
  1249  004ACB  0000               	dw	0
  1250  004ACD  0000               	dw	0
  1251  004ACF  0000               	dw	0
  1252  004AD1  0000               	dw	0
  1253  004AD3  0000               	dw	0
  1254  004AD5  0000               	dw	0
  1255  004AD7  0000               	dw	0
  1256  004AD9  0000               	dw	0
  1257  004ADB  0000               	dw	0
  1258  004ADD  0000               	dw	0
  1259  004ADF  0000               	dw	0
  1260  004AE1  0000               	dw	0
  1261  004AE3  0000               	dw	0
  1262  004AE5  0000               	dw	0
  1263  004AE7  0000               	dw	0
  1264  004AE9  0000               	dw	0
  1265  004AEB  0000               	dw	0
  1266  004AED  0000               	dw	0
  1267  004AEF  0000               	dw	0
  1268  004AF1  0000               	dw	0
  1269  004AF3  0000               	dw	0
  1270  004AF5  0000               	dw	0
  1271  004AF7  0000               	dw	0
  1272  004AF9  0000               	dw	0
  1273  004AFB  0000               	dw	0
  1274  004AFD  0000               	dw	0
  1275  004AFF  0000               	dw	0
  1276  004B01  0000               	dw	0
  1277  004B03  0000               	dw	0
  1278  004B05  0000               	dw	0
  1279  004B07  0000               	dw	0
  1280  004B09  0000               	dw	0
  1281  004B0B  0000               	dw	0
  1282  004B0D  0000               	dw	0
  1283  004B0F  0000               	dw	0
  1284  004B11  0000               	dw	0
  1285  004B13  0000               	dw	0
  1286  004B15  0000               	dw	0
  1287  004B17  0000               	dw	0
  1288  004B19  0000               	dw	0
  1289  004B1B  0000               	dw	0
  1290  004B1D  0000               	dw	0
  1291  004B1F  0000               	dw	0
  1292  004B21  0000               	dw	0
  1293  004B23  0000               	dw	0
  1294  004B25  0000               	dw	0
  1295  004B27  0000               	dw	0
  1296  004B29  0000               	dw	0
  1297  004B2B  0000               	dw	0
  1298  004B2D  0000               	dw	0
  1299  004B2F  0000               	dw	0
  1300  004B31  0000               	dw	0
  1301  004B33  0000               	dw	0
  1302  004B35  0000               	dw	0
  1303  004B37  0000               	dw	0
  1304  004B39  0000               	dw	0
  1305  004B3B  0000               	dw	0
  1306  004B3D  0000               	dw	0
  1307  004B3F  0000               	dw	0
  1308  004B41  0000               	dw	0
  1309  004B43  0000               	dw	0
  1310  004B45  0000               	dw	0
  1311  004B47  0000               	dw	0
  1312  004B49  0000               	dw	0
  1313  004B4B  0000               	dw	0
  1314  004B4D  0000               	dw	0
  1315  004B4F  0000               	dw	0
  1316  004B51  0000               	dw	0
  1317  004B53  0000               	dw	0
  1318  004B55  0000               	dw	0
  1319  004B57  0000               	dw	0
  1320  004B59  0000               	dw	0
  1321  004B5B  0000               	dw	0
  1322  004B5D  0000               	dw	0
  1323  004B5F  0000               	dw	0
  1324  004B61  0000               	dw	0
  1325  004B63  0000               	dw	0
  1326  004B65  0000               	dw	0
  1327  004B67  0000               	dw	0
  1328  004B69  0000               	dw	0
  1329  004B6B  0000               	dw	0
  1330  004B6D  0000               	dw	0
  1331  004B6F  0000               	dw	0
  1332  004B71  0000               	dw	0
  1333  004B73  0000               	dw	0
  1334  004B75  0000               	dw	0
  1335  004B77  0000               	dw	0
  1336  004B79  0000               	dw	0
  1337  004B7B  0000               	dw	0
  1338  004B7D  0000               	dw	0
  1339  004B7F  0000               	dw	0
  1340  004B81  0000               	dw	0
  1341  004B83  0000               	dw	0
  1342  004B85  0000               	dw	0
  1343  004B87  0000               	dw	0
  1344  004B89  0000               	dw	0
  1345  004B8B  0000               	dw	0
  1346  004B8D  0000               	dw	0
  1347  004B8F  0000               	dw	0
  1348  004B91  0000               	dw	0
  1349  004B93  0000               	dw	0
  1350  004B95  0000               	dw	0
  1351  004B97  0000               	dw	0
  1352  004B99  0000               	dw	0
  1353  004B9B  0000               	dw	0
  1354  004B9D  0000               	dw	0
  1355  004B9F  0000               	dw	0
  1356  004BA1  0000               	dw	0
  1357  004BA3  0000               	dw	0
  1358  004BA5  0000               	dw	0
  1359  004BA7  0000               	dw	0
  1360  004BA9  0000               	dw	0
  1361  004BAB  0000               	dw	0
  1362  004BAD  0000               	dw	0
  1363  004BAF  0000               	dw	0
  1364  004BB1  0000               	dw	0
  1365  004BB3  0000               	dw	0
  1366  004BB5  0000               	dw	0
  1367  004BB7  0000               	dw	0
  1368  004BB9  0000               	dw	0
  1369  004BBB  0000               	dw	0
  1370  004BBD  0000               	dw	0
  1371  004BBF  0000               	dw	0
  1372  004BC1  0000               	dw	0
  1373  004BC3  0000               	dw	0
  1374  004BC5  0000               	dw	0
  1375  004BC7  0000               	dw	0
  1376  004BC9  0000               	dw	0
  1377  004BCB  0000               	dw	0
  1378  004BCD  0000               	dw	0
  1379  004BCF  0000               	dw	0
  1380  004BD1  0000               	dw	0
  1381  004BD3  0000               	dw	0
  1382  004BD5  0000               	dw	0
  1383  004BD7  0000               	dw	0
  1384  004BD9  0000               	dw	0
  1385  004BDB  0000               	dw	0
  1386  004BDD  0000               	dw	0
  1387  004BDF  0000               	dw	0
  1388  004BE1  0000               	dw	0
  1389  004BE3  0000               	dw	0
  1390  004BE5  0000               	dw	0
  1391  004BE7  0000               	dw	0
  1392  004BE9  0000               	dw	0
  1393  004BEB  0000               	dw	0
  1394  004BED  0000               	dw	0
  1395  004BEF  0000               	dw	0
  1396  004BF1  0000               	dw	0
  1397  004BF3  0000               	dw	0
  1398  004BF5  0000               	dw	0
  1399  004BF7  0000               	dw	0
  1400  004BF9  0000               	dw	0
  1401  004BFB  0000               	dw	0
  1402  004BFD  0000               	dw	0
  1403  004BFF  0000               	dw	0
  1404  004C01  0000               	dw	0
  1405  004C03  0000               	dw	0
  1406  004C05  0000               	dw	0
  1407  004C07  0000               	dw	0
  1408  004C09  0000               	dw	0
  1409  004C0B  0000               	dw	0
  1410  004C0D  0000               	dw	0
  1411  004C0F  0000               	dw	0
  1412  004C11  0000               	dw	0
  1413  004C13  0000               	dw	0
  1414  004C15  0000               	dw	0
  1415  004C17  0000               	dw	0
  1416  004C19  0000               	dw	0
  1417  004C1B  0000               	dw	0
  1418  004C1D  0000               	dw	0
  1419  004C1F  0000               	dw	0
  1420  004C21  0000               	dw	0
  1421  004C23  0000               	dw	0
  1422  004C25  0000               	dw	0
  1423  004C27  0000               	dw	0
  1424  004C29  0000               	dw	0
  1425  004C2B  0000               	dw	0
  1426  004C2D  0000               	dw	0
  1427  004C2F  0000               	dw	0
  1428  004C31  0000               	dw	0
  1429  004C33  0000               	dw	0
  1430  004C35  0000               	dw	0
  1431  004C37  0000               	dw	0
  1432  004C39  0000               	dw	0
  1433  004C3B  0000               	dw	0
  1434  004C3D  0000               	dw	0
  1435  004C3F  0000               	dw	0
  1436  004C41  0000               	dw	0
  1437  004C43  0000               	dw	0
  1438  004C45  0000               	dw	0
  1439  004C47  0000               	dw	0
  1440  004C49  0000               	dw	0
  1441  004C4B  0000               	dw	0
  1442  004C4D  0000               	dw	0
  1443  004C4F  0000               	dw	0
  1444  004C51  0000               	dw	0
  1445  004C53  0000               	dw	0
  1446  004C55  0000               	dw	0
  1447  004C57  0000               	dw	0
  1448  004C59  0000               	dw	0
  1449  004C5B  0000               	dw	0
  1450  004C5D  0000               	dw	0
  1451  004C5F  0000               	dw	0
  1452  004C61  0000               	dw	0
  1453  004C63  0000               	dw	0
  1454  004C65  0000               	dw	0
  1455  004C67  0000               	dw	0
  1456  004C69  0000               	dw	0
  1457  004C6B  0000               	dw	0
  1458  004C6D  0000               	dw	0
  1459  004C6F  0000               	dw	0
  1460  004C71  0000               	dw	0
  1461  004C73  0000               	dw	0
  1462  004C75  0000               	dw	0
  1463  004C77  0000               	dw	0
  1464  004C79  0000               	dw	0
  1465  004C7B  0000               	dw	0
  1466  004C7D  0000               	dw	0
  1467  004C7F  0000               	dw	0
  1468  004C81  0000               	dw	0
  1469  004C83  0000               	dw	0
  1470  004C85  0000               	dw	0
  1471  004C87  0000               	dw	0
  1472  004C89  0000               	dw	0
  1473  004C8B  0000               	dw	0
  1474  004C8D  0000               	dw	0
  1475  004C8F  0000               	dw	0
  1476  004C91  0000               	dw	0
  1477  004C93  0000               	dw	0
  1478  004C95  0000               	dw	0
  1479  004C97  0000               	dw	0
  1480  004C99  0000               	dw	0
  1481  004C9B  0000               	dw	0
  1482  004C9D  0000               	dw	0
  1483  004C9F  0000               	dw	0
  1484  004CA1  0000               	dw	0
  1485  004CA3  0000               	dw	0
  1486  004CA5  0000               	dw	0
  1487  004CA7  0000               	dw	0
  1488  004CA9  0000               	dw	0
  1489  004CAB  0000               	dw	0
  1490  004CAD  0000               	dw	0
  1491  004CAF  0000               	dw	0
  1492  004CB1  0000               	dw	0
  1493  004CB3  0000               	dw	0
  1494  004CB5  0000               	dw	0
  1495  004CB7  0000               	dw	0
  1496  004CB9  0000               	dw	0
  1497  004CBB  0000               	dw	0
  1498  004CBD  0000               	dw	0
  1499  004CBF  0000               	dw	0
  1500  004CC1  0000               	dw	0
  1501  004CC3  0000               	dw	0
  1502  004CC5  0000               	dw	0
  1503  004CC7  0000               	dw	0
  1504  004CC9  0000               	dw	0
  1505  004CCB  0000               	dw	0
  1506  004CCD  0000               	dw	0
  1507  004CCF  0000               	dw	0
  1508  004CD1  0000               	dw	0
  1509  004CD3  0000               	dw	0
  1510  004CD5  0000               	dw	0
  1511  004CD7  0000               	dw	0
  1512  004CD9  0000               	dw	0
  1513  004CDB  0000               	dw	0
  1514  004CDD  0000               	dw	0
  1515  004CDF  0000               	dw	0
  1516  004CE1  0000               	dw	0
  1517  004CE3  0000               	dw	0
  1518  004CE5  0000               	dw	0
  1519  004CE7  0000               	dw	0
  1520  004CE9  0000               	dw	0
  1521  004CEB  0000               	dw	0
  1522  004CED  0000               	dw	0
  1523  004CEF  0000               	dw	0
  1524  004CF1  0000               	dw	0
  1525  004CF3  0000               	dw	0
  1526  004CF5  0000               	dw	0
  1527  004CF7  0000               	dw	0
  1528  004CF9  0000               	dw	0
  1529  004CFB  0000               	dw	0
  1530  004CFD  0000               	dw	0
  1531  004CFF  0000               	dw	0
  1532  004D01  0000               	dw	0
  1533  004D03  0000               	dw	0
  1534  004D05  0000               	dw	0
  1535  004D07  0000               	dw	0
  1536  004D09  0000               	dw	0
  1537  004D0B  0000               	dw	0
  1538  004D0D  0000               	dw	0
  1539  004D0F  0000               	dw	0
  1540  004D11  0000               	dw	0
  1541  004D13  0000               	dw	0
  1542  004D15  0000               	dw	0
  1543  004D17  0000               	dw	0
  1544  004D19  0000               	dw	0
  1545  004D1B  0000               	dw	0
  1546  004D1D  0000               	dw	0
  1547  004D1F  0000               	dw	0
  1548  004D21  0000               	dw	0
  1549  004D23  0000               	dw	0
  1550  004D25  0000               	dw	0
  1551  004D27  0000               	dw	0
  1552  004D29  0000               	dw	0
  1553  004D2B  0000               	dw	0
  1554  004D2D  0000               	dw	0
  1555  004D2F  0000               	dw	0
  1556  004D31  0000               	dw	0
  1557  004D33  0000               	dw	0
  1558  004D35  0000               	dw	0
  1559  004D37  0000               	dw	0
  1560  004D39  0000               	dw	0
  1561  004D3B  0000               	dw	0
  1562  004D3D  0000               	dw	0
  1563  004D3F  0000               	dw	0
  1564  004D41  0000               	dw	0
  1565  004D43  0000               	dw	0
  1566  004D45  0000               	dw	0
  1567  004D47  0000               	dw	0
  1568  004D49  0000               	dw	0
  1569  004D4B  0000               	dw	0
  1570  004D4D  0000               	dw	0
  1571  004D4F  0000               	dw	0
  1572  004D51  0000               	dw	0
  1573  004D53  0000               	dw	0
  1574  004D55  0000               	dw	0
  1575  004D57  0000               	dw	0
  1576  004D59  0000               	dw	0
  1577  004D5B  0000               	dw	0
  1578  004D5D  0000               	dw	0
  1579  004D5F  0000               	dw	0
  1580  004D61  0000               	dw	0
  1581  004D63  0000               	dw	0
  1582  004D65  0000               	dw	0
  1583  004D67                     __end_of_means:
  1584                           	opt stack 0
  1585  004D67                     _stdevs:
  1586                           	opt stack 0
  1587  004D67  0000               	dw	0
  1588  004D69  0000               	dw	0
  1589  004D6B  0000               	dw	0
  1590  004D6D  0000               	dw	0
  1591  004D6F  0000               	dw	0
  1592  004D71  0000               	dw	0
  1593  004D73  0000               	dw	0
  1594  004D75  0000               	dw	0
  1595  004D77  0000               	dw	0
  1596  004D79  0000               	dw	0
  1597  004D7B  0000               	dw	0
  1598  004D7D  0000               	dw	0
  1599  004D7F  0000               	dw	0
  1600  004D81  0000               	dw	0
  1601  004D83  0000               	dw	0
  1602  004D85  0000               	dw	0
  1603  004D87  0000               	dw	0
  1604  004D89  0000               	dw	0
  1605  004D8B  0000               	dw	0
  1606  004D8D  0000               	dw	0
  1607  004D8F  0000               	dw	0
  1608  004D91  0000               	dw	0
  1609  004D93  0000               	dw	0
  1610  004D95  0000               	dw	0
  1611  004D97  0000               	dw	0
  1612  004D99  0000               	dw	0
  1613  004D9B  0000               	dw	0
  1614  004D9D  0000               	dw	0
  1615  004D9F  0000               	dw	0
  1616  004DA1  0000               	dw	0
  1617  004DA3  0000               	dw	0
  1618  004DA5  0000               	dw	0
  1619  004DA7  0000               	dw	0
  1620  004DA9  0000               	dw	0
  1621  004DAB  0000               	dw	0
  1622  004DAD  0000               	dw	0
  1623  004DAF  0000               	dw	0
  1624  004DB1  0000               	dw	0
  1625  004DB3  0000               	dw	0
  1626  004DB5  0000               	dw	0
  1627  004DB7  0000               	dw	0
  1628  004DB9  0000               	dw	0
  1629  004DBB  0000               	dw	0
  1630  004DBD  0000               	dw	0
  1631  004DBF  0000               	dw	0
  1632  004DC1  0000               	dw	0
  1633  004DC3  0000               	dw	0
  1634  004DC5  0000               	dw	0
  1635  004DC7  0000               	dw	0
  1636  004DC9  0000               	dw	0
  1637  004DCB  0000               	dw	0
  1638  004DCD  0000               	dw	0
  1639  004DCF  0000               	dw	0
  1640  004DD1  0000               	dw	0
  1641  004DD3  0000               	dw	0
  1642  004DD5  0000               	dw	0
  1643  004DD7  0000               	dw	0
  1644  004DD9  0000               	dw	0
  1645  004DDB  0000               	dw	0
  1646  004DDD  0000               	dw	0
  1647  004DDF  0000               	dw	0
  1648  004DE1  0000               	dw	0
  1649  004DE3  0000               	dw	0
  1650  004DE5  0000               	dw	0
  1651  004DE7  0000               	dw	0
  1652  004DE9  0000               	dw	0
  1653  004DEB  0000               	dw	0
  1654  004DED  0000               	dw	0
  1655  004DEF  0000               	dw	0
  1656  004DF1  0000               	dw	0
  1657  004DF3  0000               	dw	0
  1658  004DF5  0000               	dw	0
  1659  004DF7  0000               	dw	0
  1660  004DF9  0000               	dw	0
  1661  004DFB  0000               	dw	0
  1662  004DFD  0000               	dw	0
  1663  004DFF  0000               	dw	0
  1664  004E01  0000               	dw	0
  1665  004E03  0000               	dw	0
  1666  004E05  0000               	dw	0
  1667  004E07  0000               	dw	0
  1668  004E09  0000               	dw	0
  1669  004E0B  0000               	dw	0
  1670  004E0D  0000               	dw	0
  1671  004E0F  0000               	dw	0
  1672  004E11  0000               	dw	0
  1673  004E13  0000               	dw	0
  1674  004E15  0000               	dw	0
  1675  004E17  0000               	dw	0
  1676  004E19  0000               	dw	0
  1677  004E1B  0000               	dw	0
  1678  004E1D  0000               	dw	0
  1679  004E1F  0000               	dw	0
  1680  004E21  0000               	dw	0
  1681  004E23  0000               	dw	0
  1682  004E25  0000               	dw	0
  1683  004E27  0000               	dw	0
  1684  004E29  0000               	dw	0
  1685  004E2B  0000               	dw	0
  1686  004E2D  0000               	dw	0
  1687  004E2F  0000               	dw	0
  1688  004E31  0000               	dw	0
  1689  004E33  0000               	dw	0
  1690  004E35  0000               	dw	0
  1691  004E37  0000               	dw	0
  1692  004E39  0000               	dw	0
  1693  004E3B  0000               	dw	0
  1694  004E3D  0000               	dw	0
  1695  004E3F  0000               	dw	0
  1696  004E41  0000               	dw	0
  1697  004E43  0000               	dw	0
  1698  004E45  0000               	dw	0
  1699  004E47  0000               	dw	0
  1700  004E49  0000               	dw	0
  1701  004E4B  0000               	dw	0
  1702  004E4D  0000               	dw	0
  1703  004E4F  0000               	dw	0
  1704  004E51  0000               	dw	0
  1705  004E53  0000               	dw	0
  1706  004E55  0000               	dw	0
  1707  004E57  0000               	dw	0
  1708  004E59  0000               	dw	0
  1709  004E5B  0000               	dw	0
  1710  004E5D  0000               	dw	0
  1711  004E5F  0000               	dw	0
  1712  004E61  0000               	dw	0
  1713  004E63  0000               	dw	0
  1714  004E65  0000               	dw	0
  1715  004E67  0000               	dw	0
  1716  004E69  0000               	dw	0
  1717  004E6B  0000               	dw	0
  1718  004E6D  0000               	dw	0
  1719  004E6F  0000               	dw	0
  1720  004E71  0000               	dw	0
  1721  004E73  0000               	dw	0
  1722  004E75  0000               	dw	0
  1723  004E77  0000               	dw	0
  1724  004E79  0000               	dw	0
  1725  004E7B  0000               	dw	0
  1726  004E7D  0000               	dw	0
  1727  004E7F  0000               	dw	0
  1728  004E81  0000               	dw	0
  1729  004E83  0000               	dw	0
  1730  004E85  0000               	dw	0
  1731  004E87  0000               	dw	0
  1732  004E89  0000               	dw	0
  1733  004E8B  0000               	dw	0
  1734  004E8D  0000               	dw	0
  1735  004E8F  0000               	dw	0
  1736  004E91  0000               	dw	0
  1737  004E93  0000               	dw	0
  1738  004E95  0000               	dw	0
  1739  004E97  0000               	dw	0
  1740  004E99  0000               	dw	0
  1741  004E9B  0000               	dw	0
  1742  004E9D  0000               	dw	0
  1743  004E9F  0000               	dw	0
  1744  004EA1  0000               	dw	0
  1745  004EA3  0000               	dw	0
  1746  004EA5  0000               	dw	0
  1747  004EA7  0000               	dw	0
  1748  004EA9  0000               	dw	0
  1749  004EAB  0000               	dw	0
  1750  004EAD  0000               	dw	0
  1751  004EAF  0000               	dw	0
  1752  004EB1  0000               	dw	0
  1753  004EB3  0000               	dw	0
  1754  004EB5  0000               	dw	0
  1755  004EB7  0000               	dw	0
  1756  004EB9  0000               	dw	0
  1757  004EBB  0000               	dw	0
  1758  004EBD  0000               	dw	0
  1759  004EBF  0000               	dw	0
  1760  004EC1  0000               	dw	0
  1761  004EC3  0000               	dw	0
  1762  004EC5  0000               	dw	0
  1763  004EC7  0000               	dw	0
  1764  004EC9  0000               	dw	0
  1765  004ECB  0000               	dw	0
  1766  004ECD  0000               	dw	0
  1767  004ECF  0000               	dw	0
  1768  004ED1  0000               	dw	0
  1769  004ED3  0000               	dw	0
  1770  004ED5  0000               	dw	0
  1771  004ED7  0000               	dw	0
  1772  004ED9  0000               	dw	0
  1773  004EDB  0000               	dw	0
  1774  004EDD  0000               	dw	0
  1775  004EDF  0000               	dw	0
  1776  004EE1  0000               	dw	0
  1777  004EE3  0000               	dw	0
  1778  004EE5  0000               	dw	0
  1779  004EE7  0000               	dw	0
  1780  004EE9  0000               	dw	0
  1781  004EEB  0000               	dw	0
  1782  004EED  0000               	dw	0
  1783  004EEF  0000               	dw	0
  1784  004EF1  0000               	dw	0
  1785  004EF3  0000               	dw	0
  1786  004EF5  0000               	dw	0
  1787  004EF7  0000               	dw	0
  1788  004EF9  0000               	dw	0
  1789  004EFB  0000               	dw	0
  1790  004EFD  0000               	dw	0
  1791  004EFF  0000               	dw	0
  1792  004F01  0000               	dw	0
  1793  004F03  0000               	dw	0
  1794  004F05  0000               	dw	0
  1795  004F07  0000               	dw	0
  1796  004F09  0000               	dw	0
  1797  004F0B  0000               	dw	0
  1798  004F0D  0000               	dw	0
  1799  004F0F  0000               	dw	0
  1800  004F11  0000               	dw	0
  1801  004F13  0000               	dw	0
  1802  004F15  0000               	dw	0
  1803  004F17  0000               	dw	0
  1804  004F19  0000               	dw	0
  1805  004F1B  0000               	dw	0
  1806  004F1D  0000               	dw	0
  1807  004F1F  0000               	dw	0
  1808  004F21  0000               	dw	0
  1809  004F23  0000               	dw	0
  1810  004F25  0000               	dw	0
  1811  004F27  0000               	dw	0
  1812  004F29  0000               	dw	0
  1813  004F2B  0000               	dw	0
  1814  004F2D  0000               	dw	0
  1815  004F2F  0000               	dw	0
  1816  004F31  0000               	dw	0
  1817  004F33  0000               	dw	0
  1818  004F35  0000               	dw	0
  1819  004F37  0000               	dw	0
  1820  004F39  0000               	dw	0
  1821  004F3B  0000               	dw	0
  1822  004F3D  0000               	dw	0
  1823  004F3F  0000               	dw	0
  1824  004F41  0000               	dw	0
  1825  004F43  0000               	dw	0
  1826  004F45  0000               	dw	0
  1827  004F47  0000               	dw	0
  1828  004F49  0000               	dw	0
  1829  004F4B  0000               	dw	0
  1830  004F4D  0000               	dw	0
  1831  004F4F  0000               	dw	0
  1832  004F51  0000               	dw	0
  1833  004F53  0000               	dw	0
  1834  004F55  0000               	dw	0
  1835  004F57  0000               	dw	0
  1836  004F59  0000               	dw	0
  1837  004F5B  0000               	dw	0
  1838  004F5D  0000               	dw	0
  1839  004F5F  0000               	dw	0
  1840  004F61  0000               	dw	0
  1841  004F63  0000               	dw	0
  1842  004F65  0000               	dw	0
  1843  004F67  0000               	dw	0
  1844  004F69  0000               	dw	0
  1845  004F6B  0000               	dw	0
  1846  004F6D  0000               	dw	0
  1847  004F6F  0000               	dw	0
  1848  004F71  0000               	dw	0
  1849  004F73  0000               	dw	0
  1850  004F75  0000               	dw	0
  1851  004F77  0000               	dw	0
  1852  004F79  0000               	dw	0
  1853  004F7B  0000               	dw	0
  1854  004F7D  0000               	dw	0
  1855  004F7F  0000               	dw	0
  1856  004F81  0000               	dw	0
  1857  004F83  0000               	dw	0
  1858  004F85  0000               	dw	0
  1859  004F87  0000               	dw	0
  1860  004F89  0000               	dw	0
  1861  004F8B  0000               	dw	0
  1862  004F8D  0000               	dw	0
  1863  004F8F  0000               	dw	0
  1864  004F91  0000               	dw	0
  1865  004F93  0000               	dw	0
  1866  004F95  0000               	dw	0
  1867  004F97  0000               	dw	0
  1868  004F99  0000               	dw	0
  1869  004F9B  0000               	dw	0
  1870  004F9D  0000               	dw	0
  1871  004F9F  0000               	dw	0
  1872  004FA1  0000               	dw	0
  1873  004FA3  0000               	dw	0
  1874  004FA5  0000               	dw	0
  1875  004FA7  0000               	dw	0
  1876  004FA9  0000               	dw	0
  1877  004FAB  0000               	dw	0
  1878  004FAD  0000               	dw	0
  1879  004FAF  0000               	dw	0
  1880  004FB1  0000               	dw	0
  1881  004FB3  0000               	dw	0
  1882  004FB5  0000               	dw	0
  1883  004FB7  0000               	dw	0
  1884  004FB9  0000               	dw	0
  1885  004FBB  0000               	dw	0
  1886  004FBD  0000               	dw	0
  1887  004FBF  0000               	dw	0
  1888  004FC1  0000               	dw	0
  1889  004FC3  0000               	dw	0
  1890  004FC5  0000               	dw	0
  1891  004FC7  0000               	dw	0
  1892  004FC9  0000               	dw	0
  1893  004FCB  0000               	dw	0
  1894  004FCD  0000               	dw	0
  1895  004FCF  0000               	dw	0
  1896  004FD1  0000               	dw	0
  1897  004FD3  0000               	dw	0
  1898  004FD5  0000               	dw	0
  1899  004FD7  0000               	dw	0
  1900  004FD9  0000               	dw	0
  1901  004FDB  0000               	dw	0
  1902  004FDD  0000               	dw	0
  1903  004FDF  0000               	dw	0
  1904  004FE1  0000               	dw	0
  1905  004FE3  0000               	dw	0
  1906  004FE5  0000               	dw	0
  1907  004FE7  0000               	dw	0
  1908  004FE9  0000               	dw	0
  1909  004FEB  0000               	dw	0
  1910  004FED  0000               	dw	0
  1911  004FEF  0000               	dw	0
  1912  004FF1  0000               	dw	0
  1913  004FF3  0000               	dw	0
  1914  004FF5  0000               	dw	0
  1915  004FF7  0000               	dw	0
  1916  004FF9  0000               	dw	0
  1917  004FFB  0000               	dw	0
  1918  004FFD  0000               	dw	0
  1919  004FFF  0000               	dw	0
  1920  005001  0000               	dw	0
  1921  005003  0000               	dw	0
  1922  005005  0000               	dw	0
  1923  005007  0000               	dw	0
  1924  005009  0000               	dw	0
  1925  00500B  0000               	dw	0
  1926  00500D  0000               	dw	0
  1927  00500F  0000               	dw	0
  1928  005011  0000               	dw	0
  1929  005013  0000               	dw	0
  1930  005015  0000               	dw	0
  1931  005017  0000               	dw	0
  1932  005019  0000               	dw	0
  1933  00501B  0000               	dw	0
  1934  00501D  0000               	dw	0
  1935  00501F  0000               	dw	0
  1936  005021  0000               	dw	0
  1937  005023  0000               	dw	0
  1938  005025  0000               	dw	0
  1939  005027  0000               	dw	0
  1940  005029  0000               	dw	0
  1941  00502B  0000               	dw	0
  1942  00502D  0000               	dw	0
  1943  00502F  0000               	dw	0
  1944  005031  0000               	dw	0
  1945  005033  0000               	dw	0
  1946  005035  0000               	dw	0
  1947  005037  0000               	dw	0
  1948  005039  0000               	dw	0
  1949  00503B  0000               	dw	0
  1950  00503D  0000               	dw	0
  1951  00503F  0000               	dw	0
  1952  005041  0000               	dw	0
  1953  005043  0000               	dw	0
  1954  005045  0000               	dw	0
  1955  005047  0000               	dw	0
  1956  005049  0000               	dw	0
  1957  00504B  0000               	dw	0
  1958  00504D  0000               	dw	0
  1959  00504F  0000               	dw	0
  1960  005051  0000               	dw	0
  1961  005053  0000               	dw	0
  1962  005055  0000               	dw	0
  1963  005057  0000               	dw	0
  1964  005059  0000               	dw	0
  1965  00505B  0000               	dw	0
  1966  00505D  0000               	dw	0
  1967  00505F  0000               	dw	0
  1968  005061  0000               	dw	0
  1969  005063  0000               	dw	0
  1970  005065  0000               	dw	0
  1971  005067  0000               	dw	0
  1972  005069  0000               	dw	0
  1973  00506B  0000               	dw	0
  1974  00506D  0000               	dw	0
  1975  00506F  0000               	dw	0
  1976  005071  0000               	dw	0
  1977  005073  0000               	dw	0
  1978  005075  0000               	dw	0
  1979  005077  0000               	dw	0
  1980  005079  0000               	dw	0
  1981  00507B  0000               	dw	0
  1982  00507D  0000               	dw	0
  1983  00507F  0000               	dw	0
  1984  005081  0000               	dw	0
  1985  005083  0000               	dw	0
  1986  005085  0000               	dw	0
  1987  005087  0000               	dw	0
  1988  005089  0000               	dw	0
  1989  00508B  0000               	dw	0
  1990  00508D  0000               	dw	0
  1991  00508F  0000               	dw	0
  1992  005091  0000               	dw	0
  1993  005093  0000               	dw	0
  1994  005095  0000               	dw	0
  1995  005097  0000               	dw	0
  1996  005099  0000               	dw	0
  1997  00509B  0000               	dw	0
  1998  00509D  0000               	dw	0
  1999  00509F  0000               	dw	0
  2000  0050A1  0000               	dw	0
  2001  0050A3  0000               	dw	0
  2002  0050A5  0000               	dw	0
  2003  0050A7  0000               	dw	0
  2004  0050A9  0000               	dw	0
  2005  0050AB  0000               	dw	0
  2006  0050AD  0000               	dw	0
  2007  0050AF  0000               	dw	0
  2008  0050B1  0000               	dw	0
  2009  0050B3  0000               	dw	0
  2010  0050B5  0000               	dw	0
  2011  0050B7  0000               	dw	0
  2012  0050B9  0000               	dw	0
  2013  0050BB  0000               	dw	0
  2014  0050BD  0000               	dw	0
  2015  0050BF  0000               	dw	0
  2016  0050C1  0000               	dw	0
  2017  0050C3  0000               	dw	0
  2018  0050C5  0000               	dw	0
  2019  0050C7  0000               	dw	0
  2020  0050C9  0000               	dw	0
  2021  0050CB  0000               	dw	0
  2022  0050CD  0000               	dw	0
  2023  0050CF  0000               	dw	0
  2024  0050D1  0000               	dw	0
  2025  0050D3  0000               	dw	0
  2026  0050D5  0000               	dw	0
  2027  0050D7  0000               	dw	0
  2028  0050D9  0000               	dw	0
  2029  0050DB  0000               	dw	0
  2030  0050DD  0000               	dw	0
  2031  0050DF  0000               	dw	0
  2032  0050E1  0000               	dw	0
  2033  0050E3  0000               	dw	0
  2034  0050E5  0000               	dw	0
  2035  0050E7  0000               	dw	0
  2036  0050E9  0000               	dw	0
  2037  0050EB  0000               	dw	0
  2038  0050ED  0000               	dw	0
  2039  0050EF  0000               	dw	0
  2040  0050F1  0000               	dw	0
  2041  0050F3  0000               	dw	0
  2042  0050F5  0000               	dw	0
  2043  0050F7  0000               	dw	0
  2044  0050F9  0000               	dw	0
  2045  0050FB  0000               	dw	0
  2046  0050FD  0000               	dw	0
  2047  0050FF  0000               	dw	0
  2048  005101  0000               	dw	0
  2049  005103  0000               	dw	0
  2050  005105  0000               	dw	0
  2051  005107  0000               	dw	0
  2052  005109  0000               	dw	0
  2053  00510B  0000               	dw	0
  2054  00510D  0000               	dw	0
  2055  00510F  0000               	dw	0
  2056  005111  0000               	dw	0
  2057  005113  0000               	dw	0
  2058  005115  0000               	dw	0
  2059  005117  0000               	dw	0
  2060  005119  0000               	dw	0
  2061  00511B  0000               	dw	0
  2062  00511D  0000               	dw	0
  2063  00511F  0000               	dw	0
  2064  005121  0000               	dw	0
  2065  005123  0000               	dw	0
  2066  005125  0000               	dw	0
  2067  005127  0000               	dw	0
  2068  005129  0000               	dw	0
  2069  00512B  0000               	dw	0
  2070  00512D  0000               	dw	0
  2071  00512F  0000               	dw	0
  2072  005131  0000               	dw	0
  2073  005133  0000               	dw	0
  2074  005135  0000               	dw	0
  2075  005137  0000               	dw	0
  2076  005139  0000               	dw	0
  2077  00513B  0000               	dw	0
  2078  00513D  0000               	dw	0
  2079  00513F  0000               	dw	0
  2080  005141  0000               	dw	0
  2081  005143  0000               	dw	0
  2082  005145  0000               	dw	0
  2083  005147  0000               	dw	0
  2084  005149  0000               	dw	0
  2085  00514B  0000               	dw	0
  2086  00514D  0000               	dw	0
  2087  00514F  0000               	dw	0
  2088  005151  0000               	dw	0
  2089  005153  0000               	dw	0
  2090  005155  0000               	dw	0
  2091  005157  0000               	dw	0
  2092  005159  0000               	dw	0
  2093  00515B  0000               	dw	0
  2094  00515D  0000               	dw	0
  2095  00515F  0000               	dw	0
  2096  005161  0000               	dw	0
  2097  005163  0000               	dw	0
  2098  005165  0000               	dw	0
  2099  005167  0000               	dw	0
  2100  005169  0000               	dw	0
  2101  00516B  0000               	dw	0
  2102  00516D  0000               	dw	0
  2103  00516F  0000               	dw	0
  2104  005171  0000               	dw	0
  2105  005173  0000               	dw	0
  2106  005175  0000               	dw	0
  2107  005177  0000               	dw	0
  2108  005179  0000               	dw	0
  2109  00517B  0000               	dw	0
  2110  00517D  0000               	dw	0
  2111  00517F  0000               	dw	0
  2112  005181  0000               	dw	0
  2113  005183  0000               	dw	0
  2114  005185  0000               	dw	0
  2115  005187  0000               	dw	0
  2116  005189  0000               	dw	0
  2117  00518B  0000               	dw	0
  2118  00518D  0000               	dw	0
  2119  00518F  0000               	dw	0
  2120  005191  0000               	dw	0
  2121  005193  0000               	dw	0
  2122  005195  0000               	dw	0
  2123  005197  0000               	dw	0
  2124  005199  0000               	dw	0
  2125  00519B  0000               	dw	0
  2126  00519D  0000               	dw	0
  2127  00519F  0000               	dw	0
  2128  0051A1  0000               	dw	0
  2129  0051A3  0000               	dw	0
  2130  0051A5  0000               	dw	0
  2131  0051A7  0000               	dw	0
  2132  0051A9  0000               	dw	0
  2133  0051AB  0000               	dw	0
  2134  0051AD  0000               	dw	0
  2135  0051AF  0000               	dw	0
  2136  0051B1  0000               	dw	0
  2137  0051B3  0000               	dw	0
  2138  0051B5  0000               	dw	0
  2139  0051B7  0000               	dw	0
  2140  0051B9  0000               	dw	0
  2141  0051BB  0000               	dw	0
  2142  0051BD  0000               	dw	0
  2143  0051BF  0000               	dw	0
  2144  0051C1  0000               	dw	0
  2145  0051C3  0000               	dw	0
  2146  0051C5  0000               	dw	0
  2147  0051C7  0000               	dw	0
  2148  0051C9  0000               	dw	0
  2149  0051CB  0000               	dw	0
  2150  0051CD  0000               	dw	0
  2151  0051CF  0000               	dw	0
  2152  0051D1  0000               	dw	0
  2153  0051D3  0000               	dw	0
  2154  0051D5  0000               	dw	0
  2155  0051D7  0000               	dw	0
  2156  0051D9  0000               	dw	0
  2157  0051DB  0000               	dw	0
  2158  0051DD  0000               	dw	0
  2159  0051DF  0000               	dw	0
  2160  0051E1  0000               	dw	0
  2161  0051E3  0000               	dw	0
  2162  0051E5  0000               	dw	0
  2163  0051E7  0000               	dw	0
  2164  0051E9  0000               	dw	0
  2165  0051EB  0000               	dw	0
  2166  0051ED  0000               	dw	0
  2167  0051EF  0000               	dw	0
  2168  0051F1  0000               	dw	0
  2169  0051F3  0000               	dw	0
  2170  0051F5  0000               	dw	0
  2171  0051F7  0000               	dw	0
  2172  0051F9  0000               	dw	0
  2173  0051FB  0000               	dw	0
  2174  0051FD  0000               	dw	0
  2175  0051FF  0000               	dw	0
  2176  005201  0000               	dw	0
  2177  005203  0000               	dw	0
  2178  005205  0000               	dw	0
  2179  005207  0000               	dw	0
  2180  005209  0000               	dw	0
  2181  00520B  0000               	dw	0
  2182  00520D  0000               	dw	0
  2183  00520F  0000               	dw	0
  2184  005211  0000               	dw	0
  2185  005213  0000               	dw	0
  2186  005215  0000               	dw	0
  2187  005217  0000               	dw	0
  2188  005219  0000               	dw	0
  2189  00521B  0000               	dw	0
  2190  00521D  0000               	dw	0
  2191  00521F  0000               	dw	0
  2192  005221  0000               	dw	0
  2193  005223  0000               	dw	0
  2194  005225  0000               	dw	0
  2195  005227  0000               	dw	0
  2196  005229  0000               	dw	0
  2197  00522B  0000               	dw	0
  2198  00522D  0000               	dw	0
  2199  00522F  0000               	dw	0
  2200  005231  0000               	dw	0
  2201  005233  0000               	dw	0
  2202  005235  0000               	dw	0
  2203  005237  0000               	dw	0
  2204  005239  0000               	dw	0
  2205  00523B  0000               	dw	0
  2206  00523D  0000               	dw	0
  2207  00523F  0000               	dw	0
  2208  005241  0000               	dw	0
  2209  005243  0000               	dw	0
  2210  005245  0000               	dw	0
  2211  005247  0000               	dw	0
  2212  005249  0000               	dw	0
  2213  00524B  0000               	dw	0
  2214  00524D  0000               	dw	0
  2215  00524F  0000               	dw	0
  2216  005251  0000               	dw	0
  2217  005253  0000               	dw	0
  2218  005255  0000               	dw	0
  2219  005257  0000               	dw	0
  2220  005259  0000               	dw	0
  2221  00525B  0000               	dw	0
  2222  00525D  0000               	dw	0
  2223  00525F  0000               	dw	0
  2224  005261  0000               	dw	0
  2225  005263  0000               	dw	0
  2226  005265  0000               	dw	0
  2227  005267  0000               	dw	0
  2228  005269  0000               	dw	0
  2229  00526B  0000               	dw	0
  2230  00526D  0000               	dw	0
  2231  00526F  0000               	dw	0
  2232  005271  0000               	dw	0
  2233  005273  0000               	dw	0
  2234  005275  0000               	dw	0
  2235  005277  0000               	dw	0
  2236  005279  0000               	dw	0
  2237  00527B  0000               	dw	0
  2238  00527D  0000               	dw	0
  2239  00527F  0000               	dw	0
  2240  005281  0000               	dw	0
  2241  005283  0000               	dw	0
  2242  005285  0000               	dw	0
  2243  005287  0000               	dw	0
  2244  005289  0000               	dw	0
  2245  00528B  0000               	dw	0
  2246  00528D  0000               	dw	0
  2247  00528F  0000               	dw	0
  2248  005291  0000               	dw	0
  2249  005293  0000               	dw	0
  2250  005295  0000               	dw	0
  2251  005297  0000               	dw	0
  2252  005299  0000               	dw	0
  2253  00529B  0000               	dw	0
  2254  00529D  0000               	dw	0
  2255  00529F  0000               	dw	0
  2256  0052A1  0000               	dw	0
  2257  0052A3  0000               	dw	0
  2258  0052A5  0000               	dw	0
  2259  0052A7  0000               	dw	0
  2260  0052A9  0000               	dw	0
  2261  0052AB  0000               	dw	0
  2262  0052AD  0000               	dw	0
  2263  0052AF  0000               	dw	0
  2264  0052B1  0000               	dw	0
  2265  0052B3  0000               	dw	0
  2266  0052B5  0000               	dw	0
  2267  0052B7  0000               	dw	0
  2268  0052B9  0000               	dw	0
  2269  0052BB  0000               	dw	0
  2270  0052BD  0000               	dw	0
  2271  0052BF  0000               	dw	0
  2272  0052C1  0000               	dw	0
  2273  0052C3  0000               	dw	0
  2274  0052C5  0000               	dw	0
  2275  0052C7  0000               	dw	0
  2276  0052C9  0000               	dw	0
  2277  0052CB  0000               	dw	0
  2278  0052CD  0000               	dw	0
  2279  0052CF  0000               	dw	0
  2280  0052D1  0000               	dw	0
  2281  0052D3  0000               	dw	0
  2282  0052D5  0000               	dw	0
  2283  0052D7  0000               	dw	0
  2284  0052D9  0000               	dw	0
  2285  0052DB  0000               	dw	0
  2286  0052DD  0000               	dw	0
  2287  0052DF  0000               	dw	0
  2288  0052E1  0000               	dw	0
  2289  0052E3  0000               	dw	0
  2290  0052E5  0000               	dw	0
  2291  0052E7  0000               	dw	0
  2292  0052E9  0000               	dw	0
  2293  0052EB  0000               	dw	0
  2294  0052ED  0000               	dw	0
  2295  0052EF  0000               	dw	0
  2296  0052F1  0000               	dw	0
  2297  0052F3  0000               	dw	0
  2298  0052F5  0000               	dw	0
  2299  0052F7  0000               	dw	0
  2300  0052F9  0000               	dw	0
  2301  0052FB  0000               	dw	0
  2302  0052FD  0000               	dw	0
  2303  0052FF  0000               	dw	0
  2304  005301  0000               	dw	0
  2305  005303  0000               	dw	0
  2306  005305  0000               	dw	0
  2307  005307  0000               	dw	0
  2308  005309  0000               	dw	0
  2309  00530B  0000               	dw	0
  2310  00530D  0000               	dw	0
  2311  00530F  0000               	dw	0
  2312  005311  0000               	dw	0
  2313  005313  0000               	dw	0
  2314  005315  0000               	dw	0
  2315  005317  0000               	dw	0
  2316  005319  0000               	dw	0
  2317  00531B  0000               	dw	0
  2318  00531D  0000               	dw	0
  2319  00531F  0000               	dw	0
  2320  005321  0000               	dw	0
  2321  005323  0000               	dw	0
  2322  005325  0000               	dw	0
  2323  005327  0000               	dw	0
  2324  005329  0000               	dw	0
  2325  00532B  0000               	dw	0
  2326  00532D  0000               	dw	0
  2327  00532F  0000               	dw	0
  2328  005331  0000               	dw	0
  2329  005333  0000               	dw	0
  2330  005335  0000               	dw	0
  2331  005337  0000               	dw	0
  2332  005339  0000               	dw	0
  2333  00533B  0000               	dw	0
  2334  00533D  0000               	dw	0
  2335  00533F  0000               	dw	0
  2336  005341  0000               	dw	0
  2337  005343  0000               	dw	0
  2338  005345  0000               	dw	0
  2339  005347  0000               	dw	0
  2340  005349  0000               	dw	0
  2341  00534B  0000               	dw	0
  2342  00534D  0000               	dw	0
  2343  00534F  0000               	dw	0
  2344  005351  0000               	dw	0
  2345  005353  0000               	dw	0
  2346  005355  0000               	dw	0
  2347  005357  0000               	dw	0
  2348  005359  0000               	dw	0
  2349  00535B  0000               	dw	0
  2350  00535D  0000               	dw	0
  2351  00535F  0000               	dw	0
  2352  005361  0000               	dw	0
  2353  005363  0000               	dw	0
  2354  005365  0000               	dw	0
  2355  005367  0000               	dw	0
  2356  005369  0000               	dw	0
  2357  00536B  0000               	dw	0
  2358  00536D  0000               	dw	0
  2359  00536F  0000               	dw	0
  2360  005371  0000               	dw	0
  2361  005373  0000               	dw	0
  2362  005375  0000               	dw	0
  2363  005377  0000               	dw	0
  2364  005379  0000               	dw	0
  2365  00537B  0000               	dw	0
  2366  00537D  0000               	dw	0
  2367  00537F  0000               	dw	0
  2368  005381  0000               	dw	0
  2369  005383  0000               	dw	0
  2370  005385  0000               	dw	0
  2371  005387  0000               	dw	0
  2372  005389  0000               	dw	0
  2373  00538B  0000               	dw	0
  2374  00538D  0000               	dw	0
  2375  00538F  0000               	dw	0
  2376  005391  0000               	dw	0
  2377  005393  0000               	dw	0
  2378  005395  0000               	dw	0
  2379  005397  0000               	dw	0
  2380  005399  0000               	dw	0
  2381  00539B  0000               	dw	0
  2382  00539D  0000               	dw	0
  2383  00539F  0000               	dw	0
  2384  0053A1  0000               	dw	0
  2385  0053A3  0000               	dw	0
  2386  0053A5  0000               	dw	0
  2387  0053A7  0000               	dw	0
  2388  0053A9  0000               	dw	0
  2389  0053AB  0000               	dw	0
  2390  0053AD  0000               	dw	0
  2391  0053AF  0000               	dw	0
  2392  0053B1  0000               	dw	0
  2393  0053B3  0000               	dw	0
  2394  0053B5  0000               	dw	0
  2395  0053B7  0000               	dw	0
  2396  0053B9  0000               	dw	0
  2397  0053BB  0000               	dw	0
  2398  0053BD  0000               	dw	0
  2399  0053BF  0000               	dw	0
  2400  0053C1  0000               	dw	0
  2401  0053C3  0000               	dw	0
  2402  0053C5  0000               	dw	0
  2403  0053C7  0000               	dw	0
  2404  0053C9  0000               	dw	0
  2405  0053CB  0000               	dw	0
  2406  0053CD  0000               	dw	0
  2407  0053CF  0000               	dw	0
  2408  0053D1  0000               	dw	0
  2409  0053D3  0000               	dw	0
  2410  0053D5  0000               	dw	0
  2411  0053D7  0000               	dw	0
  2412  0053D9  0000               	dw	0
  2413  0053DB  0000               	dw	0
  2414  0053DD  0000               	dw	0
  2415  0053DF  0000               	dw	0
  2416  0053E1  0000               	dw	0
  2417  0053E3  0000               	dw	0
  2418  0053E5  0000               	dw	0
  2419  0053E7  0000               	dw	0
  2420  0053E9  0000               	dw	0
  2421  0053EB  0000               	dw	0
  2422  0053ED  0000               	dw	0
  2423  0053EF  0000               	dw	0
  2424  0053F1  0000               	dw	0
  2425  0053F3  0000               	dw	0
  2426  0053F5  0000               	dw	0
  2427  0053F7  0000               	dw	0
  2428  0053F9  0000               	dw	0
  2429  0053FB  0000               	dw	0
  2430  0053FD  0000               	dw	0
  2431  0053FF  0000               	dw	0
  2432  005401  0000               	dw	0
  2433  005403  0000               	dw	0
  2434  005405  0000               	dw	0
  2435  005407  0000               	dw	0
  2436  005409  0000               	dw	0
  2437  00540B  0000               	dw	0
  2438  00540D  0000               	dw	0
  2439  00540F  0000               	dw	0
  2440  005411  0000               	dw	0
  2441  005413  0000               	dw	0
  2442  005415  0000               	dw	0
  2443  005417  0000               	dw	0
  2444  005419  0000               	dw	0
  2445  00541B  0000               	dw	0
  2446  00541D  0000               	dw	0
  2447  00541F  0000               	dw	0
  2448  005421  0000               	dw	0
  2449  005423  0000               	dw	0
  2450  005425  0000               	dw	0
  2451  005427  0000               	dw	0
  2452  005429  0000               	dw	0
  2453  00542B  0000               	dw	0
  2454  00542D  0000               	dw	0
  2455  00542F  0000               	dw	0
  2456  005431  0000               	dw	0
  2457  005433  0000               	dw	0
  2458  005435  0000               	dw	0
  2459  005437  0000               	dw	0
  2460  005439  0000               	dw	0
  2461  00543B  0000               	dw	0
  2462  00543D  0000               	dw	0
  2463  00543F  0000               	dw	0
  2464  005441  0000               	dw	0
  2465  005443  0000               	dw	0
  2466  005445  0000               	dw	0
  2467  005447  0000               	dw	0
  2468  005449  0000               	dw	0
  2469  00544B  0000               	dw	0
  2470  00544D  0000               	dw	0
  2471  00544F  0000               	dw	0
  2472  005451  0000               	dw	0
  2473  005453  0000               	dw	0
  2474  005455  0000               	dw	0
  2475  005457  0000               	dw	0
  2476  005459  0000               	dw	0
  2477  00545B  0000               	dw	0
  2478  00545D  0000               	dw	0
  2479  00545F  0000               	dw	0
  2480  005461  0000               	dw	0
  2481  005463  0000               	dw	0
  2482  005465  0000               	dw	0
  2483  005467  0000               	dw	0
  2484  005469  0000               	dw	0
  2485  00546B  0000               	dw	0
  2486  00546D  0000               	dw	0
  2487  00546F  0000               	dw	0
  2488  005471  0000               	dw	0
  2489  005473  0000               	dw	0
  2490  005475  0000               	dw	0
  2491  005477  0000               	dw	0
  2492  005479  0000               	dw	0
  2493  00547B  0000               	dw	0
  2494  00547D  0000               	dw	0
  2495  00547F  0000               	dw	0
  2496  005481  0000               	dw	0
  2497  005483  0000               	dw	0
  2498  005485  0000               	dw	0
  2499  005487  0000               	dw	0
  2500  005489  0000               	dw	0
  2501  00548B  0000               	dw	0
  2502  00548D  0000               	dw	0
  2503  00548F  0000               	dw	0
  2504  005491  0000               	dw	0
  2505  005493  0000               	dw	0
  2506  005495  0000               	dw	0
  2507  005497  0000               	dw	0
  2508  005499  0000               	dw	0
  2509  00549B  0000               	dw	0
  2510  00549D  0000               	dw	0
  2511  00549F  0000               	dw	0
  2512  0054A1  0000               	dw	0
  2513  0054A3  0000               	dw	0
  2514  0054A5  0000               	dw	0
  2515  0054A7  0000               	dw	0
  2516  0054A9  0000               	dw	0
  2517  0054AB  0000               	dw	0
  2518  0054AD  0000               	dw	0
  2519  0054AF  0000               	dw	0
  2520  0054B1  0000               	dw	0
  2521  0054B3  0000               	dw	0
  2522  0054B5  0000               	dw	0
  2523  0054B7  0000               	dw	0
  2524  0054B9  0000               	dw	0
  2525  0054BB  0000               	dw	0
  2526  0054BD  0000               	dw	0
  2527  0054BF  0000               	dw	0
  2528  0054C1  0000               	dw	0
  2529  0054C3  0000               	dw	0
  2530  0054C5  0000               	dw	0
  2531  0054C7  0000               	dw	0
  2532  0054C9  0000               	dw	0
  2533  0054CB  0000               	dw	0
  2534  0054CD  0000               	dw	0
  2535  0054CF  0000               	dw	0
  2536  0054D1  0000               	dw	0
  2537  0054D3  0000               	dw	0
  2538  0054D5  0000               	dw	0
  2539  0054D7  0000               	dw	0
  2540  0054D9  0000               	dw	0
  2541  0054DB  0000               	dw	0
  2542  0054DD  0000               	dw	0
  2543  0054DF  0000               	dw	0
  2544  0054E1  0000               	dw	0
  2545  0054E3  0000               	dw	0
  2546  0054E5  0000               	dw	0
  2547  0054E7  0000               	dw	0
  2548  0054E9  0000               	dw	0
  2549  0054EB  0000               	dw	0
  2550  0054ED  0000               	dw	0
  2551  0054EF  0000               	dw	0
  2552  0054F1  0000               	dw	0
  2553  0054F3  0000               	dw	0
  2554  0054F5  0000               	dw	0
  2555  0054F7  0000               	dw	0
  2556  0054F9  0000               	dw	0
  2557  0054FB  0000               	dw	0
  2558  0054FD  0000               	dw	0
  2559  0054FF  0000               	dw	0
  2560  005501  0000               	dw	0
  2561  005503  0000               	dw	0
  2562  005505  0000               	dw	0
  2563  005507  0000               	dw	0
  2564  005509  0000               	dw	0
  2565  00550B  0000               	dw	0
  2566  00550D  0000               	dw	0
  2567  00550F  0000               	dw	0
  2568  005511  0000               	dw	0
  2569  005513  0000               	dw	0
  2570  005515  0000               	dw	0
  2571  005517  0000               	dw	0
  2572  005519  0000               	dw	0
  2573  00551B  0000               	dw	0
  2574  00551D  0000               	dw	0
  2575  00551F  0000               	dw	0
  2576  005521  0000               	dw	0
  2577  005523  0000               	dw	0
  2578  005525  0000               	dw	0
  2579  005527  0000               	dw	0
  2580  005529  0000               	dw	0
  2581  00552B  0000               	dw	0
  2582  00552D  0000               	dw	0
  2583  00552F  0000               	dw	0
  2584  005531  0000               	dw	0
  2585  005533  0000               	dw	0
  2586  005535  0000               	dw	0
  2587  005537  0000               	dw	0
  2588  005539  0000               	dw	0
  2589  00553B  0000               	dw	0
  2590  00553D  0000               	dw	0
  2591  00553F  0000               	dw	0
  2592  005541  0000               	dw	0
  2593  005543  0000               	dw	0
  2594  005545  0000               	dw	0
  2595  005547  0000               	dw	0
  2596  005549  0000               	dw	0
  2597  00554B  0000               	dw	0
  2598  00554D  0000               	dw	0
  2599  00554F  0000               	dw	0
  2600  005551  0000               	dw	0
  2601  005553  0000               	dw	0
  2602  005555  0000               	dw	0
  2603  005557  0000               	dw	0
  2604  005559  0000               	dw	0
  2605  00555B  0000               	dw	0
  2606  00555D  0000               	dw	0
  2607  00555F  0000               	dw	0
  2608  005561  0000               	dw	0
  2609  005563  0000               	dw	0
  2610  005565  0000               	dw	0
  2611  005567  0000               	dw	0
  2612  005569  0000               	dw	0
  2613  00556B  0000               	dw	0
  2614  00556D  0000               	dw	0
  2615  00556F  0000               	dw	0
  2616  005571  0000               	dw	0
  2617  005573  0000               	dw	0
  2618  005575  0000               	dw	0
  2619  005577  0000               	dw	0
  2620  005579  0000               	dw	0
  2621  00557B  0000               	dw	0
  2622  00557D  0000               	dw	0
  2623  00557F  0000               	dw	0
  2624  005581  0000               	dw	0
  2625  005583  0000               	dw	0
  2626  005585  0000               	dw	0
  2627  005587  0000               	dw	0
  2628  005589  0000               	dw	0
  2629  00558B  0000               	dw	0
  2630  00558D  0000               	dw	0
  2631  00558F  0000               	dw	0
  2632  005591  0000               	dw	0
  2633  005593  0000               	dw	0
  2634  005595  0000               	dw	0
  2635  005597  0000               	dw	0
  2636  005599  0000               	dw	0
  2637  00559B  0000               	dw	0
  2638  00559D  0000               	dw	0
  2639  00559F  0000               	dw	0
  2640  0055A1  0000               	dw	0
  2641  0055A3  0000               	dw	0
  2642  0055A5  0000               	dw	0
  2643  0055A7  0000               	dw	0
  2644  0055A9  0000               	dw	0
  2645  0055AB  0000               	dw	0
  2646  0055AD  0000               	dw	0
  2647  0055AF  0000               	dw	0
  2648  0055B1  0000               	dw	0
  2649  0055B3  0000               	dw	0
  2650  0055B5  0000               	dw	0
  2651  0055B7  0000               	dw	0
  2652  0055B9  0000               	dw	0
  2653  0055BB  0000               	dw	0
  2654  0055BD  0000               	dw	0
  2655  0055BF  0000               	dw	0
  2656  0055C1  0000               	dw	0
  2657  0055C3  0000               	dw	0
  2658  0055C5  0000               	dw	0
  2659  0055C7  0000               	dw	0
  2660  0055C9  0000               	dw	0
  2661  0055CB  0000               	dw	0
  2662  0055CD  0000               	dw	0
  2663  0055CF  0000               	dw	0
  2664  0055D1  0000               	dw	0
  2665  0055D3  0000               	dw	0
  2666  0055D5  0000               	dw	0
  2667  0055D7  0000               	dw	0
  2668  0055D9  0000               	dw	0
  2669  0055DB  0000               	dw	0
  2670  0055DD  0000               	dw	0
  2671  0055DF  0000               	dw	0
  2672  0055E1  0000               	dw	0
  2673  0055E3  0000               	dw	0
  2674  0055E5  0000               	dw	0
  2675  0055E7  0000               	dw	0
  2676  0055E9  0000               	dw	0
  2677  0055EB  0000               	dw	0
  2678  0055ED  0000               	dw	0
  2679  0055EF  0000               	dw	0
  2680  0055F1  0000               	dw	0
  2681  0055F3  0000               	dw	0
  2682  0055F5  0000               	dw	0
  2683  0055F7  0000               	dw	0
  2684  0055F9  0000               	dw	0
  2685  0055FB  0000               	dw	0
  2686  0055FD  0000               	dw	0
  2687  0055FF  0000               	dw	0
  2688  005601  0000               	dw	0
  2689  005603  0000               	dw	0
  2690  005605  0000               	dw	0
  2691  005607  0000               	dw	0
  2692  005609  0000               	dw	0
  2693  00560B  0000               	dw	0
  2694  00560D  0000               	dw	0
  2695  00560F  0000               	dw	0
  2696  005611  0000               	dw	0
  2697  005613  0000               	dw	0
  2698  005615  0000               	dw	0
  2699  005617  0000               	dw	0
  2700  005619  0000               	dw	0
  2701  00561B  0000               	dw	0
  2702  00561D  0000               	dw	0
  2703  00561F  0000               	dw	0
  2704  005621  0000               	dw	0
  2705  005623  0000               	dw	0
  2706  005625  0000               	dw	0
  2707  005627  0000               	dw	0
  2708  005629  0000               	dw	0
  2709  00562B  0000               	dw	0
  2710  00562D  0000               	dw	0
  2711  00562F  0000               	dw	0
  2712  005631  0000               	dw	0
  2713  005633  0000               	dw	0
  2714  005635  0000               	dw	0
  2715  005637  0000               	dw	0
  2716  005639  0000               	dw	0
  2717  00563B  0000               	dw	0
  2718  00563D  0000               	dw	0
  2719  00563F  0000               	dw	0
  2720  005641  0000               	dw	0
  2721  005643  0000               	dw	0
  2722  005645  0000               	dw	0
  2723  005647  0000               	dw	0
  2724  005649  0000               	dw	0
  2725  00564B  0000               	dw	0
  2726  00564D  0000               	dw	0
  2727  00564F  0000               	dw	0
  2728  005651  0000               	dw	0
  2729  005653  0000               	dw	0
  2730  005655  0000               	dw	0
  2731  005657  0000               	dw	0
  2732  005659  0000               	dw	0
  2733  00565B  0000               	dw	0
  2734  00565D  0000               	dw	0
  2735  00565F  0000               	dw	0
  2736  005661  0000               	dw	0
  2737  005663  0000               	dw	0
  2738  005665  0000               	dw	0
  2739  005667  0000               	dw	0
  2740  005669  0000               	dw	0
  2741  00566B  0000               	dw	0
  2742  00566D  0000               	dw	0
  2743  00566F  0000               	dw	0
  2744  005671  0000               	dw	0
  2745  005673  0000               	dw	0
  2746  005675  0000               	dw	0
  2747  005677  0000               	dw	0
  2748  005679  0000               	dw	0
  2749  00567B  0000               	dw	0
  2750  00567D  0000               	dw	0
  2751  00567F  0000               	dw	0
  2752  005681  0000               	dw	0
  2753  005683  0000               	dw	0
  2754  005685  0000               	dw	0
  2755  005687  0000               	dw	0
  2756  005689  0000               	dw	0
  2757  00568B  0000               	dw	0
  2758  00568D  0000               	dw	0
  2759  00568F  0000               	dw	0
  2760  005691  0000               	dw	0
  2761  005693  0000               	dw	0
  2762  005695  0000               	dw	0
  2763  005697  0000               	dw	0
  2764  005699  0000               	dw	0
  2765  00569B  0000               	dw	0
  2766  00569D  0000               	dw	0
  2767  00569F  0000               	dw	0
  2768  0056A1  0000               	dw	0
  2769  0056A3  0000               	dw	0
  2770  0056A5  0000               	dw	0
  2771  0056A7  0000               	dw	0
  2772  0056A9  0000               	dw	0
  2773  0056AB  0000               	dw	0
  2774  0056AD  0000               	dw	0
  2775  0056AF  0000               	dw	0
  2776  0056B1  0000               	dw	0
  2777  0056B3  0000               	dw	0
  2778  0056B5  0000               	dw	0
  2779  0056B7  0000               	dw	0
  2780  0056B9  0000               	dw	0
  2781  0056BB  0000               	dw	0
  2782  0056BD  0000               	dw	0
  2783  0056BF  0000               	dw	0
  2784  0056C1  0000               	dw	0
  2785  0056C3  0000               	dw	0
  2786  0056C5  0000               	dw	0
  2787  0056C7  0000               	dw	0
  2788  0056C9  0000               	dw	0
  2789  0056CB  0000               	dw	0
  2790  0056CD  0000               	dw	0
  2791  0056CF  0000               	dw	0
  2792  0056D1  0000               	dw	0
  2793  0056D3  0000               	dw	0
  2794  0056D5  0000               	dw	0
  2795  0056D7  0000               	dw	0
  2796  0056D9  0000               	dw	0
  2797  0056DB  0000               	dw	0
  2798  0056DD  0000               	dw	0
  2799  0056DF  0000               	dw	0
  2800  0056E1  0000               	dw	0
  2801  0056E3  0000               	dw	0
  2802  0056E5  0000               	dw	0
  2803  0056E7  0000               	dw	0
  2804  0056E9  0000               	dw	0
  2805  0056EB  0000               	dw	0
  2806  0056ED  0000               	dw	0
  2807  0056EF  0000               	dw	0
  2808  0056F1  0000               	dw	0
  2809  0056F3  0000               	dw	0
  2810  0056F5  0000               	dw	0
  2811  0056F7  0000               	dw	0
  2812  0056F9  0000               	dw	0
  2813  0056FB  0000               	dw	0
  2814  0056FD  0000               	dw	0
  2815  0056FF  0000               	dw	0
  2816  005701  0000               	dw	0
  2817  005703  0000               	dw	0
  2818  005705  0000               	dw	0
  2819  005707  0000               	dw	0
  2820  005709  0000               	dw	0
  2821  00570B  0000               	dw	0
  2822  00570D  0000               	dw	0
  2823  00570F  0000               	dw	0
  2824  005711  0000               	dw	0
  2825  005713  0000               	dw	0
  2826  005715  0000               	dw	0
  2827  005717  0000               	dw	0
  2828  005719  0000               	dw	0
  2829  00571B  0000               	dw	0
  2830  00571D  0000               	dw	0
  2831  00571F  0000               	dw	0
  2832  005721  0000               	dw	0
  2833  005723  0000               	dw	0
  2834  005725  0000               	dw	0
  2835  005727  0000               	dw	0
  2836  005729  0000               	dw	0
  2837  00572B  0000               	dw	0
  2838  00572D  0000               	dw	0
  2839  00572F  0000               	dw	0
  2840  005731  0000               	dw	0
  2841  005733  0000               	dw	0
  2842  005735  0000               	dw	0
  2843  005737  0000               	dw	0
  2844  005739  0000               	dw	0
  2845  00573B  0000               	dw	0
  2846  00573D  0000               	dw	0
  2847  00573F  0000               	dw	0
  2848  005741  0000               	dw	0
  2849  005743  0000               	dw	0
  2850  005745  0000               	dw	0
  2851  005747  0000               	dw	0
  2852  005749  0000               	dw	0
  2853  00574B  0000               	dw	0
  2854  00574D  0000               	dw	0
  2855  00574F  0000               	dw	0
  2856  005751  0000               	dw	0
  2857  005753  0000               	dw	0
  2858  005755  0000               	dw	0
  2859  005757  0000               	dw	0
  2860  005759  0000               	dw	0
  2861  00575B  0000               	dw	0
  2862  00575D  0000               	dw	0
  2863  00575F  0000               	dw	0
  2864  005761  0000               	dw	0
  2865  005763  0000               	dw	0
  2866  005765  0000               	dw	0
  2867  005767  0000               	dw	0
  2868  005769  0000               	dw	0
  2869  00576B  0000               	dw	0
  2870  00576D  0000               	dw	0
  2871  00576F  0000               	dw	0
  2872  005771  0000               	dw	0
  2873  005773  0000               	dw	0
  2874  005775  0000               	dw	0
  2875  005777  0000               	dw	0
  2876  005779  0000               	dw	0
  2877  00577B  0000               	dw	0
  2878  00577D  0000               	dw	0
  2879  00577F  0000               	dw	0
  2880  005781  0000               	dw	0
  2881  005783  0000               	dw	0
  2882  005785  0000               	dw	0
  2883  005787  0000               	dw	0
  2884  005789  0000               	dw	0
  2885  00578B  0000               	dw	0
  2886  00578D  0000               	dw	0
  2887  00578F  0000               	dw	0
  2888  005791  0000               	dw	0
  2889  005793  0000               	dw	0
  2890  005795  0000               	dw	0
  2891  005797  0000               	dw	0
  2892  005799  0000               	dw	0
  2893  00579B  0000               	dw	0
  2894  00579D  0000               	dw	0
  2895  00579F  0000               	dw	0
  2896  0057A1  0000               	dw	0
  2897  0057A3  0000               	dw	0
  2898  0057A5  0000               	dw	0
  2899  0057A7  0000               	dw	0
  2900  0057A9  0000               	dw	0
  2901  0057AB  0000               	dw	0
  2902  0057AD  0000               	dw	0
  2903  0057AF  0000               	dw	0
  2904  0057B1  0000               	dw	0
  2905  0057B3  0000               	dw	0
  2906  0057B5  0000               	dw	0
  2907  0057B7  0000               	dw	0
  2908  0057B9  0000               	dw	0
  2909  0057BB  0000               	dw	0
  2910  0057BD  0000               	dw	0
  2911  0057BF  0000               	dw	0
  2912  0057C1  0000               	dw	0
  2913  0057C3  0000               	dw	0
  2914  0057C5  0000               	dw	0
  2915  0057C7  0000               	dw	0
  2916  0057C9  0000               	dw	0
  2917  0057CB  0000               	dw	0
  2918  0057CD  0000               	dw	0
  2919  0057CF  0000               	dw	0
  2920  0057D1  0000               	dw	0
  2921  0057D3  0000               	dw	0
  2922  0057D5  0000               	dw	0
  2923  0057D7  0000               	dw	0
  2924  0057D9  0000               	dw	0
  2925  0057DB  0000               	dw	0
  2926  0057DD  0000               	dw	0
  2927  0057DF  0000               	dw	0
  2928  0057E1  0000               	dw	0
  2929  0057E3  0000               	dw	0
  2930  0057E5  0000               	dw	0
  2931  0057E7  0000               	dw	0
  2932  0057E9  0000               	dw	0
  2933  0057EB  0000               	dw	0
  2934  0057ED  0000               	dw	0
  2935  0057EF  0000               	dw	0
  2936  0057F1  0000               	dw	0
  2937  0057F3  0000               	dw	0
  2938  0057F5  0000               	dw	0
  2939  0057F7  0000               	dw	0
  2940  0057F9  0000               	dw	0
  2941  0057FB  0000               	dw	0
  2942  0057FD  0000               	dw	0
  2943  0057FF  0000               	dw	0
  2944  005801  0000               	dw	0
  2945  005803  0000               	dw	0
  2946  005805  0000               	dw	0
  2947  005807  0000               	dw	0
  2948  005809  0000               	dw	0
  2949  00580B  0000               	dw	0
  2950  00580D  0000               	dw	0
  2951  00580F  0000               	dw	0
  2952  005811  0000               	dw	0
  2953  005813  0000               	dw	0
  2954  005815  0000               	dw	0
  2955  005817  0000               	dw	0
  2956  005819  0000               	dw	0
  2957  00581B  0000               	dw	0
  2958  00581D  0000               	dw	0
  2959  00581F  0000               	dw	0
  2960  005821  0000               	dw	0
  2961  005823  0000               	dw	0
  2962  005825  0000               	dw	0
  2963  005827  0000               	dw	0
  2964  005829  0000               	dw	0
  2965  00582B  0000               	dw	0
  2966  00582D  0000               	dw	0
  2967  00582F  0000               	dw	0
  2968  005831  0000               	dw	0
  2969  005833  0000               	dw	0
  2970  005835  0000               	dw	0
  2971  005837  0000               	dw	0
  2972  005839  0000               	dw	0
  2973  00583B  0000               	dw	0
  2974  00583D  0000               	dw	0
  2975  00583F  0000               	dw	0
  2976  005841  0000               	dw	0
  2977  005843  0000               	dw	0
  2978  005845  0000               	dw	0
  2979  005847  0000               	dw	0
  2980  005849  0000               	dw	0
  2981  00584B  0000               	dw	0
  2982  00584D  0000               	dw	0
  2983  00584F  0000               	dw	0
  2984  005851  0000               	dw	0
  2985  005853  0000               	dw	0
  2986  005855  0000               	dw	0
  2987  005857  0000               	dw	0
  2988  005859  0000               	dw	0
  2989  00585B  0000               	dw	0
  2990  00585D  0000               	dw	0
  2991  00585F  0000               	dw	0
  2992  005861  0000               	dw	0
  2993  005863  0000               	dw	0
  2994  005865  0000               	dw	0
  2995  005867  0000               	dw	0
  2996  005869  0000               	dw	0
  2997  00586B  0000               	dw	0
  2998  00586D  0000               	dw	0
  2999  00586F  0000               	dw	0
  3000  005871  0000               	dw	0
  3001  005873  0000               	dw	0
  3002  005875  0000               	dw	0
  3003  005877  0000               	dw	0
  3004  005879  0000               	dw	0
  3005  00587B  0000               	dw	0
  3006  00587D  0000               	dw	0
  3007  00587F  0000               	dw	0
  3008  005881  0000               	dw	0
  3009  005883  0000               	dw	0
  3010  005885  0000               	dw	0
  3011  005887  0000               	dw	0
  3012  005889  0000               	dw	0
  3013  00588B  0000               	dw	0
  3014  00588D  0000               	dw	0
  3015  00588F  0000               	dw	0
  3016  005891  0000               	dw	0
  3017  005893  0000               	dw	0
  3018  005895  0000               	dw	0
  3019  005897  0000               	dw	0
  3020  005899  0000               	dw	0
  3021  00589B  0000               	dw	0
  3022  00589D  0000               	dw	0
  3023  00589F  0000               	dw	0
  3024  0058A1  0000               	dw	0
  3025  0058A3  0000               	dw	0
  3026  0058A5  0000               	dw	0
  3027  0058A7  0000               	dw	0
  3028  0058A9  0000               	dw	0
  3029  0058AB  0000               	dw	0
  3030  0058AD  0000               	dw	0
  3031  0058AF  0000               	dw	0
  3032  0058B1  0000               	dw	0
  3033  0058B3  0000               	dw	0
  3034  0058B5  0000               	dw	0
  3035  0058B7  0000               	dw	0
  3036  0058B9  0000               	dw	0
  3037  0058BB  0000               	dw	0
  3038  0058BD  0000               	dw	0
  3039  0058BF  0000               	dw	0
  3040  0058C1  0000               	dw	0
  3041  0058C3  0000               	dw	0
  3042  0058C5  0000               	dw	0
  3043  0058C7  0000               	dw	0
  3044  0058C9  0000               	dw	0
  3045  0058CB  0000               	dw	0
  3046  0058CD  0000               	dw	0
  3047  0058CF  0000               	dw	0
  3048  0058D1  0000               	dw	0
  3049  0058D3  0000               	dw	0
  3050  0058D5  0000               	dw	0
  3051  0058D7  0000               	dw	0
  3052  0058D9  0000               	dw	0
  3053  0058DB  0000               	dw	0
  3054  0058DD  0000               	dw	0
  3055  0058DF  0000               	dw	0
  3056  0058E1  0000               	dw	0
  3057  0058E3  0000               	dw	0
  3058  0058E5  0000               	dw	0
  3059  0058E7  0000               	dw	0
  3060  0058E9  0000               	dw	0
  3061  0058EB  0000               	dw	0
  3062  0058ED  0000               	dw	0
  3063  0058EF  0000               	dw	0
  3064  0058F1  0000               	dw	0
  3065  0058F3  0000               	dw	0
  3066  0058F5  0000               	dw	0
  3067  0058F7  0000               	dw	0
  3068  0058F9  0000               	dw	0
  3069  0058FB  0000               	dw	0
  3070  0058FD  0000               	dw	0
  3071  0058FF  0000               	dw	0
  3072  005901  0000               	dw	0
  3073  005903  0000               	dw	0
  3074  005905  0000               	dw	0
  3075  005907  0000               	dw	0
  3076  005909  0000               	dw	0
  3077  00590B  0000               	dw	0
  3078  00590D  0000               	dw	0
  3079  00590F  0000               	dw	0
  3080  005911  0000               	dw	0
  3081  005913  0000               	dw	0
  3082  005915  0000               	dw	0
  3083  005917  0000               	dw	0
  3084  005919  0000               	dw	0
  3085  00591B  0000               	dw	0
  3086  00591D  0000               	dw	0
  3087  00591F  0000               	dw	0
  3088  005921  0000               	dw	0
  3089  005923  0000               	dw	0
  3090  005925  0000               	dw	0
  3091  005927  0000               	dw	0
  3092  005929  0000               	dw	0
  3093  00592B  0000               	dw	0
  3094  00592D  0000               	dw	0
  3095  00592F  0000               	dw	0
  3096  005931  0000               	dw	0
  3097  005933  0000               	dw	0
  3098  005935  0000               	dw	0
  3099  005937  0000               	dw	0
  3100  005939  0000               	dw	0
  3101  00593B  0000               	dw	0
  3102  00593D  0000               	dw	0
  3103  00593F  0000               	dw	0
  3104  005941  0000               	dw	0
  3105  005943  0000               	dw	0
  3106  005945  0000               	dw	0
  3107  005947                     __end_of_stdevs:
  3108                           	opt stack 0
  3109  005947                     __npowers_:
  3110                           	opt stack 0
  3111  005947  0000               	dw	0
  3112  005949  3F80               	dw	16256
  3113  00594B  CCCD               	dw	52429
  3114  00594D  3DCC               	dw	15820
  3115  00594F  D70A               	dw	55050
  3116  005951  3C23               	dw	15395
  3117  005953  126F               	dw	4719
  3118  005955  3A83               	dw	14979
  3119  005957  B717               	dw	46871
  3120  005959  38D1               	dw	14545
  3121  00595B  C5AC               	dw	50604
  3122  00595D  3727               	dw	14119
  3123  00595F  37BD               	dw	14269
  3124  005961  3586               	dw	13702
  3125  005963  BF95               	dw	49045
  3126  005965  33D6               	dw	13270
  3127  005967  CC77               	dw	52343
  3128  005969  322B               	dw	12843
  3129  00596B  705F               	dw	28767
  3130  00596D  3089               	dw	12425
  3131  00596F  E6FF               	dw	59135
  3132  005971  2EDB               	dw	11995
  3133  005973  E508               	dw	58632
  3134  005975  1E3C               	dw	7740
  3135  005977  4260               	dw	16992
  3136  005979  0DA2               	dw	3490
  3137  00597B                     __end_of__npowers_:
  3138                           	opt stack 0
  3139  00597B                     __powers_:
  3140                           	opt stack 0
  3141  00597B  0000               	dw	0
  3142  00597D  3F80               	dw	16256
  3143  00597F  0000               	dw	0
  3144  005981  4120               	dw	16672
  3145  005983  0000               	dw	0
  3146  005985  42C8               	dw	17096
  3147  005987  0000               	dw	0
  3148  005989  447A               	dw	17530
  3149  00598B  4000               	dw	16384
  3150  00598D  461C               	dw	17948
  3151  00598F  5000               	dw	20480
  3152  005991  47C3               	dw	18371
  3153  005993  2400               	dw	9216
  3154  005995  4974               	dw	18804
  3155  005997  9680               	dw	38528
  3156  005999  4B18               	dw	19224
  3157  00599B  BC20               	dw	48160
  3158  00599D  4CBE               	dw	19646
  3159  00599F  6B28               	dw	27432
  3160  0059A1  4E6E               	dw	20078
  3161  0059A3  02F9               	dw	761
  3162  0059A5  5015               	dw	20501
  3163  0059A7  78EC               	dw	30956
  3164  0059A9  60AD               	dw	24749
  3165  0059AB  F2CA               	dw	62154
  3166  0059AD  7149               	dw	29001
  3167  0059AF                     __end_of__powers_:
  3168                           	opt stack 0
  3169  0059AF                     _dpowers:
  3170                           	opt stack 0
  3171  0059AF  0001               	dw	1
  3172  0059B1  0000               	dw	0
  3173  0059B3  000A               	dw	10
  3174  0059B5  0000               	dw	0
  3175  0059B7  0064               	dw	100
  3176  0059B9  0000               	dw	0
  3177  0059BB  03E8               	dw	1000
  3178  0059BD  0000               	dw	0
  3179  0059BF  2710               	dw	10000
  3180  0059C1  0000               	dw	0
  3181  0059C3  86A0               	dw	34464
  3182  0059C5  0001               	dw	1
  3183  0059C7  4240               	dw	16960
  3184  0059C9  000F               	dw	15
  3185  0059CB  9680               	dw	38528
  3186  0059CD  0098               	dw	152
  3187  0059CF  E100               	dw	57600
  3188  0059D1  05F5               	dw	1525
  3189  0059D3  CA00               	dw	51712
  3190  0059D5  3B9A               	dw	15258
  3191  0059D7                     __end_of_dpowers:
  3192                           	opt stack 0
  3193  0059D7                     _testSet:
  3194                           	opt stack 0
  3195  0059D7  0000               	dw	0
  3196  0059D9  0000               	dw	0
  3197  0059DB  0000               	dw	0
  3198  0059DD  0000               	dw	0
  3199  0059DF  0000               	dw	0
  3200  0059E1  0000               	dw	0
  3201  0059E3  0000               	dw	0
  3202  0059E5  0000               	dw	0
  3203  0059E7  0000               	dw	0
  3204  0059E9  0000               	dw	0
  3205  0059EB  0000               	dw	0
  3206  0059ED  0000               	dw	0
  3207  0059EF  0000               	dw	0
  3208  0059F1  0000               	dw	0
  3209  0059F3  0000               	dw	0
  3210  0059F5  0000               	dw	0
  3211  0059F7  0000               	dw	0
  3212  0059F9  0000               	dw	0
  3213  0059FB  0000               	dw	0
  3214  0059FD  0000               	dw	0
  3215  0059FF  0000               	dw	0
  3216  005A01  0000               	dw	0
  3217  005A03  0000               	dw	0
  3218  005A05  0000               	dw	0
  3219  005A07  0000               	dw	0
  3220  005A09  0000               	dw	0
  3221  005A0B  0000               	dw	0
  3222  005A0D  0000               	dw	0
  3223  005A0F  0000               	dw	0
  3224  005A11  0000               	dw	0
  3225  005A13  0000               	dw	0
  3226  005A15  0000               	dw	0
  3227  005A17  0000               	dw	0
  3228  005A19  0000               	dw	0
  3229  005A1B  0000               	dw	0
  3230  005A1D  0000               	dw	0
  3231  005A1F  0000               	dw	0
  3232  005A21  0000               	dw	0
  3233  005A23  0000               	dw	0
  3234  005A25  0000               	dw	0
  3235  005A27  0000               	dw	0
  3236  005A29  0000               	dw	0
  3237  005A2B  0000               	dw	0
  3238  005A2D  0000               	dw	0
  3239  005A2F  0000               	dw	0
  3240  005A31  0000               	dw	0
  3241  005A33  0000               	dw	0
  3242  005A35  0000               	dw	0
  3243  005A37  0000               	dw	0
  3244  005A39  0000               	dw	0
  3245  005A3B  0000               	dw	0
  3246  005A3D  0000               	dw	0
  3247  005A3F  0000               	dw	0
  3248  005A41  0000               	dw	0
  3249  005A43  0000               	dw	0
  3250  005A45  0000               	dw	0
  3251  005A47  0000               	dw	0
  3252  005A49  0000               	dw	0
  3253  005A4B  0000               	dw	0
  3254  005A4D  0000               	dw	0
  3255  005A4F  0000               	dw	0
  3256  005A51  0000               	dw	0
  3257  005A53  0000               	dw	0
  3258  005A55  0000               	dw	0
  3259  005A57  0000               	dw	0
  3260  005A59  0000               	dw	0
  3261  005A5B  0000               	dw	0
  3262  005A5D  0000               	dw	0
  3263  005A5F  0000               	dw	0
  3264  005A61  0000               	dw	0
  3265  005A63  0000               	dw	0
  3266  005A65  0000               	dw	0
  3267  005A67  0000               	dw	0
  3268  005A69  0000               	dw	0
  3269  005A6B  0000               	dw	0
  3270  005A6D  0000               	dw	0
  3271  005A6F  0000               	dw	0
  3272  005A71  0000               	dw	0
  3273  005A73  0000               	dw	0
  3274  005A75  0000               	dw	0
  3275  005A77  0000               	dw	0
  3276  005A79  0000               	dw	0
  3277  005A7B  0000               	dw	0
  3278  005A7D  0000               	dw	0
  3279  005A7F  0000               	dw	0
  3280  005A81  0000               	dw	0
  3281  005A83  0000               	dw	0
  3282  005A85  0000               	dw	0
  3283  005A87  0000               	dw	0
  3284  005A89  0000               	dw	0
  3285  005A8B  0000               	dw	0
  3286  005A8D  0000               	dw	0
  3287  005A8F  0000               	dw	0
  3288  005A91  0000               	dw	0
  3289  005A93  0000               	dw	0
  3290  005A95  0000               	dw	0
  3291  005A97  0000               	dw	0
  3292  005A99  0000               	dw	0
  3293  005A9B  0000               	dw	0
  3294  005A9D  0000               	dw	0
  3295  005A9F  0000               	dw	0
  3296  005AA1  0000               	dw	0
  3297  005AA3  0000               	dw	0
  3298  005AA5  0000               	dw	0
  3299  005AA7  0000               	dw	0
  3300  005AA9  0000               	dw	0
  3301  005AAB  0000               	dw	0
  3302  005AAD  0000               	dw	0
  3303  005AAF  0000               	dw	0
  3304  005AB1  0000               	dw	0
  3305  005AB3  0000               	dw	0
  3306  005AB5  0000               	dw	0
  3307  005AB7  0000               	dw	0
  3308  005AB9  0000               	dw	0
  3309  005ABB  0000               	dw	0
  3310  005ABD  0000               	dw	0
  3311  005ABF  0000               	dw	0
  3312  005AC1  0000               	dw	0
  3313  005AC3  0000               	dw	0
  3314  005AC5  0000               	dw	0
  3315  005AC7  0000               	dw	0
  3316  005AC9  0000               	dw	0
  3317  005ACB  0000               	dw	0
  3318  005ACD  0000               	dw	0
  3319  005ACF  0000               	dw	0
  3320  005AD1  0000               	dw	0
  3321  005AD3  0000               	dw	0
  3322  005AD5  0000               	dw	0
  3323  005AD7  0000               	dw	0
  3324  005AD9  0000               	dw	0
  3325  005ADB  0000               	dw	0
  3326  005ADD  0000               	dw	0
  3327  005ADF  0000               	dw	0
  3328  005AE1  0000               	dw	0
  3329  005AE3  0000               	dw	0
  3330  005AE5  0000               	dw	0
  3331  005AE7  0000               	dw	0
  3332  005AE9  0000               	dw	0
  3333  005AEB  0000               	dw	0
  3334  005AED  0000               	dw	0
  3335  005AEF  0000               	dw	0
  3336  005AF1  0000               	dw	0
  3337  005AF3  0000               	dw	0
  3338  005AF5  0000               	dw	0
  3339  005AF7  0000               	dw	0
  3340  005AF9  0000               	dw	0
  3341  005AFB  0000               	dw	0
  3342  005AFD  0000               	dw	0
  3343  005AFF  0000               	dw	0
  3344  005B01  0000               	dw	0
  3345  005B03  0000               	dw	0
  3346  005B05  0000               	dw	0
  3347  005B07  0000               	dw	0
  3348  005B09  0000               	dw	0
  3349  005B0B  0000               	dw	0
  3350  005B0D  0000               	dw	0
  3351  005B0F  0000               	dw	0
  3352  005B11  0000               	dw	0
  3353  005B13  0000               	dw	0
  3354  005B15  0000               	dw	0
  3355  005B17  0000               	dw	0
  3356  005B19  0000               	dw	0
  3357  005B1B  0000               	dw	0
  3358  005B1D  0000               	dw	0
  3359  005B1F  0000               	dw	0
  3360  005B21  0000               	dw	0
  3361  005B23  0000               	dw	0
  3362  005B25  0000               	dw	0
  3363  005B27  0000               	dw	0
  3364  005B29  0000               	dw	0
  3365  005B2B  0000               	dw	0
  3366  005B2D  0000               	dw	0
  3367  005B2F  0000               	dw	0
  3368  005B31  0000               	dw	0
  3369  005B33  0000               	dw	0
  3370  005B35  0000               	dw	0
  3371  005B37  0000               	dw	0
  3372  005B39  0000               	dw	0
  3373  005B3B  0000               	dw	0
  3374  005B3D  0000               	dw	0
  3375  005B3F  0000               	dw	0
  3376  005B41  0000               	dw	0
  3377  005B43  0000               	dw	0
  3378  005B45  0000               	dw	0
  3379  005B47  0000               	dw	0
  3380  005B49  0000               	dw	0
  3381  005B4B  0000               	dw	0
  3382  005B4D  0000               	dw	0
  3383  005B4F  0000               	dw	0
  3384  005B51  0000               	dw	0
  3385  005B53  0000               	dw	0
  3386  005B55  0000               	dw	0
  3387  005B57  0000               	dw	0
  3388  005B59  0000               	dw	0
  3389  005B5B  0000               	dw	0
  3390  005B5D  0000               	dw	0
  3391  005B5F  0000               	dw	0
  3392  005B61  0000               	dw	0
  3393  005B63  0000               	dw	0
  3394  005B65  0000               	dw	0
  3395  005B67  0000               	dw	0
  3396  005B69  0000               	dw	0
  3397  005B6B  0000               	dw	0
  3398  005B6D  0000               	dw	0
  3399  005B6F  0000               	dw	0
  3400  005B71  0000               	dw	0
  3401  005B73  0000               	dw	0
  3402  005B75  0000               	dw	0
  3403  005B77  0000               	dw	0
  3404  005B79  0000               	dw	0
  3405  005B7B  0000               	dw	0
  3406  005B7D  0000               	dw	0
  3407  005B7F  0000               	dw	0
  3408  005B81  0000               	dw	0
  3409  005B83  0000               	dw	0
  3410  005B85  0000               	dw	0
  3411  005B87  0000               	dw	0
  3412  005B89  0000               	dw	0
  3413  005B8B  0000               	dw	0
  3414  005B8D  0000               	dw	0
  3415  005B8F  0000               	dw	0
  3416  005B91  0000               	dw	0
  3417  005B93  0000               	dw	0
  3418  005B95  0000               	dw	0
  3419  005B97  0000               	dw	0
  3420  005B99  0000               	dw	0
  3421  005B9B  0000               	dw	0
  3422  005B9D  0000               	dw	0
  3423  005B9F  0000               	dw	0
  3424  005BA1  0000               	dw	0
  3425  005BA3  0000               	dw	0
  3426  005BA5  0000               	dw	0
  3427  005BA7  0000               	dw	0
  3428  005BA9  0000               	dw	0
  3429  005BAB  0000               	dw	0
  3430  005BAD  0000               	dw	0
  3431  005BAF  0000               	dw	0
  3432  005BB1  0000               	dw	0
  3433  005BB3  0000               	dw	0
  3434  005BB5  0000               	dw	0
  3435  005BB7  0000               	dw	0
  3436  005BB9  0000               	dw	0
  3437  005BBB  0000               	dw	0
  3438  005BBD  0000               	dw	0
  3439  005BBF  0000               	dw	0
  3440  005BC1  0000               	dw	0
  3441  005BC3  0000               	dw	0
  3442  005BC5  0000               	dw	0
  3443  005BC7  0000               	dw	0
  3444  005BC9  0000               	dw	0
  3445  005BCB  0000               	dw	0
  3446  005BCD  0000               	dw	0
  3447  005BCF  0000               	dw	0
  3448  005BD1  0000               	dw	0
  3449  005BD3  0000               	dw	0
  3450  005BD5  0000               	dw	0
  3451  005BD7  0000               	dw	0
  3452  005BD9  0000               	dw	0
  3453  005BDB  0000               	dw	0
  3454  005BDD  0000               	dw	0
  3455  005BDF  0000               	dw	0
  3456  005BE1  0000               	dw	0
  3457  005BE3  0000               	dw	0
  3458  005BE5  0000               	dw	0
  3459  005BE7  0000               	dw	0
  3460  005BE9  0000               	dw	0
  3461  005BEB  0000               	dw	0
  3462  005BED  0000               	dw	0
  3463  005BEF  0000               	dw	0
  3464  005BF1  0000               	dw	0
  3465  005BF3  0000               	dw	0
  3466  005BF5  0000               	dw	0
  3467  005BF7  0000               	dw	0
  3468  005BF9  0000               	dw	0
  3469  005BFB  0000               	dw	0
  3470  005BFD  0000               	dw	0
  3471  005BFF  0000               	dw	0
  3472  005C01  0000               	dw	0
  3473  005C03  0000               	dw	0
  3474  005C05  0000               	dw	0
  3475  005C07  0000               	dw	0
  3476  005C09  0000               	dw	0
  3477  005C0B  0000               	dw	0
  3478  005C0D  0000               	dw	0
  3479  005C0F  0000               	dw	0
  3480  005C11  0000               	dw	0
  3481  005C13  0000               	dw	0
  3482  005C15  0000               	dw	0
  3483  005C17  0000               	dw	0
  3484  005C19  0000               	dw	0
  3485  005C1B  0000               	dw	0
  3486  005C1D  0000               	dw	0
  3487  005C1F  0000               	dw	0
  3488  005C21  0000               	dw	0
  3489  005C23  0000               	dw	0
  3490  005C25  0000               	dw	0
  3491  005C27  0000               	dw	0
  3492  005C29  0000               	dw	0
  3493  005C2B  0000               	dw	0
  3494  005C2D  0000               	dw	0
  3495  005C2F  0000               	dw	0
  3496  005C31  0000               	dw	0
  3497  005C33  0000               	dw	0
  3498  005C35  0000               	dw	0
  3499  005C37  0000               	dw	0
  3500  005C39  0000               	dw	0
  3501  005C3B  0000               	dw	0
  3502  005C3D  0000               	dw	0
  3503  005C3F  0000               	dw	0
  3504  005C41  0000               	dw	0
  3505  005C43  0000               	dw	0
  3506  005C45  0000               	dw	0
  3507  005C47  0000               	dw	0
  3508  005C49  0000               	dw	0
  3509  005C4B  0000               	dw	0
  3510  005C4D  0000               	dw	0
  3511  005C4F  0000               	dw	0
  3512  005C51  0000               	dw	0
  3513  005C53  0000               	dw	0
  3514  005C55  0000               	dw	0
  3515  005C57  0000               	dw	0
  3516  005C59  0000               	dw	0
  3517  005C5B  0000               	dw	0
  3518  005C5D  0000               	dw	0
  3519  005C5F  0000               	dw	0
  3520  005C61  0000               	dw	0
  3521  005C63  0000               	dw	0
  3522  005C65  0000               	dw	0
  3523  005C67  0000               	dw	0
  3524  005C69  0000               	dw	0
  3525  005C6B  0000               	dw	0
  3526  005C6D  0000               	dw	0
  3527  005C6F  0000               	dw	0
  3528  005C71  0000               	dw	0
  3529  005C73  0000               	dw	0
  3530  005C75  0000               	dw	0
  3531  005C77  0000               	dw	0
  3532  005C79  0000               	dw	0
  3533  005C7B  0000               	dw	0
  3534  005C7D  0000               	dw	0
  3535  005C7F  0000               	dw	0
  3536  005C81  0000               	dw	0
  3537  005C83  0000               	dw	0
  3538  005C85  0000               	dw	0
  3539  005C87  0000               	dw	0
  3540  005C89  0000               	dw	0
  3541  005C8B  0000               	dw	0
  3542  005C8D  0000               	dw	0
  3543  005C8F  0000               	dw	0
  3544  005C91  0000               	dw	0
  3545  005C93  0000               	dw	0
  3546  005C95  0000               	dw	0
  3547  005C97  0000               	dw	0
  3548  005C99  0000               	dw	0
  3549  005C9B  0000               	dw	0
  3550  005C9D  0000               	dw	0
  3551  005C9F  0000               	dw	0
  3552  005CA1  0000               	dw	0
  3553  005CA3  0000               	dw	0
  3554  005CA5  0000               	dw	0
  3555  005CA7  0000               	dw	0
  3556  005CA9  0000               	dw	0
  3557  005CAB  0000               	dw	0
  3558  005CAD  0000               	dw	0
  3559  005CAF  0000               	dw	0
  3560  005CB1  0000               	dw	0
  3561  005CB3  0000               	dw	0
  3562  005CB5  0000               	dw	0
  3563  005CB7  0000               	dw	0
  3564  005CB9  0000               	dw	0
  3565  005CBB  0000               	dw	0
  3566  005CBD  0000               	dw	0
  3567  005CBF  0000               	dw	0
  3568  005CC1  0000               	dw	0
  3569  005CC3  0000               	dw	0
  3570  005CC5  0000               	dw	0
  3571  005CC7  0000               	dw	0
  3572  005CC9  0000               	dw	0
  3573  005CCB  0000               	dw	0
  3574  005CCD  0000               	dw	0
  3575  005CCF  0000               	dw	0
  3576  005CD1  0000               	dw	0
  3577  005CD3  0000               	dw	0
  3578  005CD5  0000               	dw	0
  3579  005CD7  0000               	dw	0
  3580  005CD9  0000               	dw	0
  3581  005CDB  0000               	dw	0
  3582  005CDD  0000               	dw	0
  3583  005CDF  0000               	dw	0
  3584  005CE1  0000               	dw	0
  3585  005CE3  0000               	dw	0
  3586  005CE5  0000               	dw	0
  3587  005CE7  0000               	dw	0
  3588  005CE9  0000               	dw	0
  3589  005CEB  0000               	dw	0
  3590  005CED  0000               	dw	0
  3591  005CEF  0000               	dw	0
  3592  005CF1  0000               	dw	0
  3593  005CF3  0000               	dw	0
  3594  005CF5  0000               	dw	0
  3595  005CF7  0000               	dw	0
  3596  005CF9  0000               	dw	0
  3597  005CFB  0000               	dw	0
  3598  005CFD  0000               	dw	0
  3599  005CFF  0000               	dw	0
  3600  005D01  0000               	dw	0
  3601  005D03  0000               	dw	0
  3602  005D05  0000               	dw	0
  3603  005D07  0000               	dw	0
  3604  005D09  0000               	dw	0
  3605  005D0B  0000               	dw	0
  3606  005D0D  0000               	dw	0
  3607  005D0F  0000               	dw	0
  3608  005D11  0000               	dw	0
  3609  005D13  0000               	dw	0
  3610  005D15  0000               	dw	0
  3611  005D17  0000               	dw	0
  3612  005D19  0000               	dw	0
  3613  005D1B  0000               	dw	0
  3614  005D1D  0000               	dw	0
  3615  005D1F  0000               	dw	0
  3616  005D21  0000               	dw	0
  3617  005D23  0000               	dw	0
  3618  005D25  0000               	dw	0
  3619  005D27  0000               	dw	0
  3620  005D29  0000               	dw	0
  3621  005D2B  0000               	dw	0
  3622  005D2D  0000               	dw	0
  3623  005D2F  0000               	dw	0
  3624  005D31  0000               	dw	0
  3625  005D33  0000               	dw	0
  3626  005D35  0000               	dw	0
  3627  005D37  0000               	dw	0
  3628  005D39  0000               	dw	0
  3629  005D3B  0000               	dw	0
  3630  005D3D  0000               	dw	0
  3631  005D3F  0000               	dw	0
  3632  005D41  0000               	dw	0
  3633  005D43  0000               	dw	0
  3634  005D45  0000               	dw	0
  3635  005D47  0000               	dw	0
  3636  005D49  0000               	dw	0
  3637  005D4B  0000               	dw	0
  3638  005D4D  0000               	dw	0
  3639  005D4F  0000               	dw	0
  3640  005D51  0000               	dw	0
  3641  005D53  0000               	dw	0
  3642  005D55  0000               	dw	0
  3643  005D57  0000               	dw	0
  3644  005D59  0000               	dw	0
  3645  005D5B  0000               	dw	0
  3646  005D5D  0000               	dw	0
  3647  005D5F  0000               	dw	0
  3648  005D61  0000               	dw	0
  3649  005D63  0000               	dw	0
  3650  005D65  0000               	dw	0
  3651  005D67  0000               	dw	0
  3652  005D69  0000               	dw	0
  3653  005D6B  0000               	dw	0
  3654  005D6D  0000               	dw	0
  3655  005D6F  0000               	dw	0
  3656  005D71  0000               	dw	0
  3657  005D73  0000               	dw	0
  3658  005D75  0000               	dw	0
  3659  005D77  0000               	dw	0
  3660  005D79  0000               	dw	0
  3661  005D7B  0000               	dw	0
  3662  005D7D  0000               	dw	0
  3663  005D7F  0000               	dw	0
  3664  005D81  0000               	dw	0
  3665  005D83  0000               	dw	0
  3666  005D85  0000               	dw	0
  3667  005D87  0000               	dw	0
  3668  005D89  0000               	dw	0
  3669  005D8B  0000               	dw	0
  3670  005D8D  0000               	dw	0
  3671  005D8F  0000               	dw	0
  3672  005D91  0000               	dw	0
  3673  005D93  0000               	dw	0
  3674  005D95  0000               	dw	0
  3675  005D97  0000               	dw	0
  3676  005D99  0000               	dw	0
  3677  005D9B  0000               	dw	0
  3678  005D9D  0000               	dw	0
  3679  005D9F  0000               	dw	0
  3680  005DA1  0000               	dw	0
  3681  005DA3  0000               	dw	0
  3682  005DA5  0000               	dw	0
  3683  005DA7  0000               	dw	0
  3684  005DA9  0000               	dw	0
  3685  005DAB  0000               	dw	0
  3686  005DAD  0000               	dw	0
  3687  005DAF  0000               	dw	0
  3688  005DB1  0000               	dw	0
  3689  005DB3  0000               	dw	0
  3690  005DB5  0000               	dw	0
  3691  005DB7  0000               	dw	0
  3692  005DB9  0000               	dw	0
  3693  005DBB  0000               	dw	0
  3694  005DBD  0000               	dw	0
  3695  005DBF  0000               	dw	0
  3696  005DC1  0000               	dw	0
  3697  005DC3  0000               	dw	0
  3698  005DC5  0000               	dw	0
  3699  005DC7  0000               	dw	0
  3700  005DC9  0000               	dw	0
  3701  005DCB  0000               	dw	0
  3702  005DCD  0000               	dw	0
  3703  005DCF  0000               	dw	0
  3704  005DD1  0000               	dw	0
  3705  005DD3  0000               	dw	0
  3706  005DD5  0000               	dw	0
  3707  005DD7  0000               	dw	0
  3708  005DD9  0000               	dw	0
  3709  005DDB  0000               	dw	0
  3710  005DDD  0000               	dw	0
  3711  005DDF  0000               	dw	0
  3712  005DE1  0000               	dw	0
  3713  005DE3  0000               	dw	0
  3714  005DE5  0000               	dw	0
  3715  005DE7  0000               	dw	0
  3716  005DE9  0000               	dw	0
  3717  005DEB  0000               	dw	0
  3718  005DED  0000               	dw	0
  3719  005DEF  0000               	dw	0
  3720  005DF1  0000               	dw	0
  3721  005DF3  0000               	dw	0
  3722  005DF5  0000               	dw	0
  3723  005DF7  0000               	dw	0
  3724  005DF9  0000               	dw	0
  3725  005DFB  0000               	dw	0
  3726  005DFD  0000               	dw	0
  3727  005DFF  0000               	dw	0
  3728  005E01  0000               	dw	0
  3729  005E03  0000               	dw	0
  3730  005E05  0000               	dw	0
  3731  005E07  0000               	dw	0
  3732  005E09  0000               	dw	0
  3733  005E0B  0000               	dw	0
  3734  005E0D  0000               	dw	0
  3735  005E0F  0000               	dw	0
  3736  005E11  0000               	dw	0
  3737  005E13  0000               	dw	0
  3738  005E15  0000               	dw	0
  3739  005E17  0000               	dw	0
  3740  005E19  0000               	dw	0
  3741  005E1B  0000               	dw	0
  3742  005E1D  0000               	dw	0
  3743  005E1F  0000               	dw	0
  3744  005E21  0000               	dw	0
  3745  005E23  0000               	dw	0
  3746  005E25  0000               	dw	0
  3747  005E27  0000               	dw	0
  3748  005E29  0000               	dw	0
  3749  005E2B  0000               	dw	0
  3750  005E2D  0000               	dw	0
  3751  005E2F  0000               	dw	0
  3752  005E31  0000               	dw	0
  3753  005E33  0000               	dw	0
  3754  005E35  0000               	dw	0
  3755  005E37  0000               	dw	0
  3756  005E39  0000               	dw	0
  3757  005E3B  0000               	dw	0
  3758  005E3D  0000               	dw	0
  3759  005E3F  0000               	dw	0
  3760  005E41  0000               	dw	0
  3761  005E43  0000               	dw	0
  3762  005E45  0000               	dw	0
  3763  005E47  0000               	dw	0
  3764  005E49  0000               	dw	0
  3765  005E4B  0000               	dw	0
  3766  005E4D  0000               	dw	0
  3767  005E4F  0000               	dw	0
  3768  005E51  0000               	dw	0
  3769  005E53  0000               	dw	0
  3770  005E55  0000               	dw	0
  3771  005E57  0000               	dw	0
  3772  005E59  0000               	dw	0
  3773  005E5B  0000               	dw	0
  3774  005E5D  0000               	dw	0
  3775  005E5F  0000               	dw	0
  3776  005E61  0000               	dw	0
  3777  005E63  0000               	dw	0
  3778  005E65  0000               	dw	0
  3779  005E67  0000               	dw	0
  3780  005E69  0000               	dw	0
  3781  005E6B  0000               	dw	0
  3782  005E6D  0000               	dw	0
  3783  005E6F  0000               	dw	0
  3784  005E71  0000               	dw	0
  3785  005E73  0000               	dw	0
  3786  005E75  0000               	dw	0
  3787  005E77  0000               	dw	0
  3788  005E79  0000               	dw	0
  3789  005E7B  0000               	dw	0
  3790  005E7D  0000               	dw	0
  3791  005E7F  0000               	dw	0
  3792  005E81  0000               	dw	0
  3793  005E83  0000               	dw	0
  3794  005E85  0000               	dw	0
  3795  005E87  0000               	dw	0
  3796  005E89  0000               	dw	0
  3797  005E8B  0000               	dw	0
  3798  005E8D  0000               	dw	0
  3799  005E8F  0000               	dw	0
  3800  005E91  0000               	dw	0
  3801  005E93  0000               	dw	0
  3802  005E95  0000               	dw	0
  3803  005E97  0000               	dw	0
  3804  005E99  0000               	dw	0
  3805  005E9B  0000               	dw	0
  3806  005E9D  0000               	dw	0
  3807  005E9F  0000               	dw	0
  3808  005EA1  0000               	dw	0
  3809  005EA3  0000               	dw	0
  3810  005EA5  0000               	dw	0
  3811  005EA7  0000               	dw	0
  3812  005EA9  0000               	dw	0
  3813  005EAB  0000               	dw	0
  3814  005EAD  0000               	dw	0
  3815  005EAF  0000               	dw	0
  3816  005EB1  0000               	dw	0
  3817  005EB3  0000               	dw	0
  3818  005EB5  0000               	dw	0
  3819  005EB7  0000               	dw	0
  3820  005EB9  0000               	dw	0
  3821  005EBB  0000               	dw	0
  3822  005EBD  0000               	dw	0
  3823  005EBF  0000               	dw	0
  3824  005EC1  0000               	dw	0
  3825  005EC3  0000               	dw	0
  3826  005EC5  0000               	dw	0
  3827  005EC7  0000               	dw	0
  3828  005EC9  0000               	dw	0
  3829  005ECB  0000               	dw	0
  3830  005ECD  0000               	dw	0
  3831  005ECF  0000               	dw	0
  3832  005ED1  0000               	dw	0
  3833  005ED3  0000               	dw	0
  3834  005ED5  0000               	dw	0
  3835  005ED7  0000               	dw	0
  3836  005ED9  0000               	dw	0
  3837  005EDB  0000               	dw	0
  3838  005EDD  0000               	dw	0
  3839  005EDF  0000               	dw	0
  3840  005EE1  0000               	dw	0
  3841  005EE3  0000               	dw	0
  3842  005EE5  0000               	dw	0
  3843  005EE7  0000               	dw	0
  3844  005EE9  0000               	dw	0
  3845  005EEB  0000               	dw	0
  3846  005EED  0000               	dw	0
  3847  005EEF  0000               	dw	0
  3848  005EF1  0000               	dw	0
  3849  005EF3  0000               	dw	0
  3850  005EF5  0000               	dw	0
  3851  005EF7  0000               	dw	0
  3852  005EF9  0000               	dw	0
  3853  005EFB  0000               	dw	0
  3854  005EFD  0000               	dw	0
  3855  005EFF  0000               	dw	0
  3856  005F01  0000               	dw	0
  3857  005F03  0000               	dw	0
  3858  005F05  0000               	dw	0
  3859  005F07  0000               	dw	0
  3860  005F09  0000               	dw	0
  3861  005F0B  0000               	dw	0
  3862  005F0D  0000               	dw	0
  3863  005F0F  0000               	dw	0
  3864  005F11  0000               	dw	0
  3865  005F13  0000               	dw	0
  3866  005F15  0000               	dw	0
  3867  005F17  0000               	dw	0
  3868  005F19  0000               	dw	0
  3869  005F1B  0000               	dw	0
  3870  005F1D  0000               	dw	0
  3871  005F1F  0000               	dw	0
  3872  005F21  0000               	dw	0
  3873  005F23  0000               	dw	0
  3874  005F25  0000               	dw	0
  3875  005F27  0000               	dw	0
  3876  005F29  0000               	dw	0
  3877  005F2B  0000               	dw	0
  3878  005F2D  0000               	dw	0
  3879  005F2F  0000               	dw	0
  3880  005F31  0000               	dw	0
  3881  005F33  0000               	dw	0
  3882  005F35  0000               	dw	0
  3883  005F37  0000               	dw	0
  3884  005F39  0000               	dw	0
  3885  005F3B  0000               	dw	0
  3886  005F3D  0000               	dw	0
  3887  005F3F  0000               	dw	0
  3888  005F41  0000               	dw	0
  3889  005F43  0000               	dw	0
  3890  005F45  0000               	dw	0
  3891  005F47  0000               	dw	0
  3892  005F49  0000               	dw	0
  3893  005F4B  0000               	dw	0
  3894  005F4D  0000               	dw	0
  3895  005F4F  0000               	dw	0
  3896  005F51  0000               	dw	0
  3897  005F53  0000               	dw	0
  3898  005F55  0000               	dw	0
  3899  005F57  0000               	dw	0
  3900  005F59  0000               	dw	0
  3901  005F5B  0000               	dw	0
  3902  005F5D  0000               	dw	0
  3903  005F5F  0000               	dw	0
  3904  005F61  0000               	dw	0
  3905  005F63  0000               	dw	0
  3906  005F65  0000               	dw	0
  3907  005F67  0000               	dw	0
  3908  005F69  0000               	dw	0
  3909  005F6B  0000               	dw	0
  3910  005F6D  0000               	dw	0
  3911  005F6F  0000               	dw	0
  3912  005F71  0000               	dw	0
  3913  005F73  0000               	dw	0
  3914  005F75  0000               	dw	0
  3915  005F77  0000               	dw	0
  3916  005F79  0000               	dw	0
  3917  005F7B  0000               	dw	0
  3918  005F7D  0000               	dw	0
  3919  005F7F  0000               	dw	0
  3920  005F81  0000               	dw	0
  3921  005F83  0000               	dw	0
  3922  005F85  0000               	dw	0
  3923  005F87  0000               	dw	0
  3924  005F89  0000               	dw	0
  3925  005F8B  0000               	dw	0
  3926  005F8D  0000               	dw	0
  3927  005F8F  0000               	dw	0
  3928  005F91  0000               	dw	0
  3929  005F93  0000               	dw	0
  3930  005F95  0000               	dw	0
  3931  005F97  0000               	dw	0
  3932  005F99  0000               	dw	0
  3933  005F9B  0000               	dw	0
  3934  005F9D  0000               	dw	0
  3935  005F9F  0000               	dw	0
  3936  005FA1  0000               	dw	0
  3937  005FA3  0000               	dw	0
  3938  005FA5  0000               	dw	0
  3939  005FA7  0000               	dw	0
  3940  005FA9  0000               	dw	0
  3941  005FAB  0000               	dw	0
  3942  005FAD  0000               	dw	0
  3943  005FAF  0000               	dw	0
  3944  005FB1  0000               	dw	0
  3945  005FB3  0000               	dw	0
  3946  005FB5  0000               	dw	0
  3947  005FB7  0000               	dw	0
  3948  005FB9  0000               	dw	0
  3949  005FBB  0000               	dw	0
  3950  005FBD  0000               	dw	0
  3951  005FBF  0000               	dw	0
  3952  005FC1  0000               	dw	0
  3953  005FC3  0000               	dw	0
  3954  005FC5  0000               	dw	0
  3955  005FC7  0000               	dw	0
  3956  005FC9  0000               	dw	0
  3957  005FCB  0000               	dw	0
  3958  005FCD  0000               	dw	0
  3959  005FCF  0000               	dw	0
  3960  005FD1  0000               	dw	0
  3961  005FD3  0000               	dw	0
  3962  005FD5  0000               	dw	0
  3963  005FD7  0000               	dw	0
  3964  005FD9  0000               	dw	0
  3965  005FDB  0000               	dw	0
  3966  005FDD  0000               	dw	0
  3967  005FDF  0000               	dw	0
  3968  005FE1  0000               	dw	0
  3969  005FE3  0000               	dw	0
  3970  005FE5  0000               	dw	0
  3971  005FE7  0000               	dw	0
  3972  005FE9  0000               	dw	0
  3973  005FEB  0000               	dw	0
  3974  005FED  0000               	dw	0
  3975  005FEF  0000               	dw	0
  3976  005FF1  0000               	dw	0
  3977  005FF3  0000               	dw	0
  3978  005FF5  0000               	dw	0
  3979  005FF7  0000               	dw	0
  3980  005FF9  0000               	dw	0
  3981  005FFB  0000               	dw	0
  3982  005FFD  0000               	dw	0
  3983  005FFF  0000               	dw	0
  3984  006001  0000               	dw	0
  3985  006003  0000               	dw	0
  3986  006005  0000               	dw	0
  3987  006007  0000               	dw	0
  3988  006009  0000               	dw	0
  3989  00600B  0000               	dw	0
  3990  00600D  0000               	dw	0
  3991  00600F  0000               	dw	0
  3992  006011  0000               	dw	0
  3993  006013  0000               	dw	0
  3994  006015  0000               	dw	0
  3995  006017  0000               	dw	0
  3996  006019  0000               	dw	0
  3997  00601B  0000               	dw	0
  3998  00601D  0000               	dw	0
  3999  00601F  0000               	dw	0
  4000  006021  0000               	dw	0
  4001  006023  0000               	dw	0
  4002  006025  0000               	dw	0
  4003  006027  0000               	dw	0
  4004  006029  0000               	dw	0
  4005  00602B  0000               	dw	0
  4006  00602D  0000               	dw	0
  4007  00602F  0000               	dw	0
  4008  006031  0000               	dw	0
  4009  006033  0000               	dw	0
  4010  006035  0000               	dw	0
  4011  006037  0000               	dw	0
  4012  006039  0000               	dw	0
  4013  00603B  0000               	dw	0
  4014  00603D  0000               	dw	0
  4015  00603F  0000               	dw	0
  4016  006041  0000               	dw	0
  4017  006043  0000               	dw	0
  4018  006045  0000               	dw	0
  4019  006047  0000               	dw	0
  4020  006049  0000               	dw	0
  4021  00604B  0000               	dw	0
  4022  00604D  0000               	dw	0
  4023  00604F  0000               	dw	0
  4024  006051  0000               	dw	0
  4025  006053  0000               	dw	0
  4026  006055  0000               	dw	0
  4027  006057  0000               	dw	0
  4028  006059  0000               	dw	0
  4029  00605B  0000               	dw	0
  4030  00605D  0000               	dw	0
  4031  00605F  0000               	dw	0
  4032  006061  0000               	dw	0
  4033  006063  0000               	dw	0
  4034  006065  0000               	dw	0
  4035  006067  0000               	dw	0
  4036  006069  0000               	dw	0
  4037  00606B  0000               	dw	0
  4038  00606D  0000               	dw	0
  4039  00606F  0000               	dw	0
  4040  006071  0000               	dw	0
  4041  006073  0000               	dw	0
  4042  006075  0000               	dw	0
  4043  006077  0000               	dw	0
  4044  006079  0000               	dw	0
  4045  00607B  0000               	dw	0
  4046  00607D  0000               	dw	0
  4047  00607F  0000               	dw	0
  4048  006081  0000               	dw	0
  4049  006083  0000               	dw	0
  4050  006085  0000               	dw	0
  4051  006087  0000               	dw	0
  4052  006089  0000               	dw	0
  4053  00608B  0000               	dw	0
  4054  00608D  0000               	dw	0
  4055  00608F  0000               	dw	0
  4056  006091  0000               	dw	0
  4057  006093  0000               	dw	0
  4058  006095  0000               	dw	0
  4059  006097  0000               	dw	0
  4060  006099  0000               	dw	0
  4061  00609B  0000               	dw	0
  4062  00609D  0000               	dw	0
  4063  00609F  0000               	dw	0
  4064  0060A1  0000               	dw	0
  4065  0060A3  0000               	dw	0
  4066  0060A5  0000               	dw	0
  4067  0060A7  0000               	dw	0
  4068  0060A9  0000               	dw	0
  4069  0060AB  0000               	dw	0
  4070  0060AD  0000               	dw	0
  4071  0060AF  0000               	dw	0
  4072  0060B1  0000               	dw	0
  4073  0060B3  0000               	dw	0
  4074  0060B5  0000               	dw	0
  4075  0060B7  0000               	dw	0
  4076  0060B9  0000               	dw	0
  4077  0060BB  0000               	dw	0
  4078  0060BD  0000               	dw	0
  4079  0060BF  0000               	dw	0
  4080  0060C1  0000               	dw	0
  4081  0060C3  0000               	dw	0
  4082  0060C5  0000               	dw	0
  4083  0060C7  0000               	dw	0
  4084  0060C9  0000               	dw	0
  4085  0060CB  0000               	dw	0
  4086  0060CD  0000               	dw	0
  4087  0060CF  0000               	dw	0
  4088  0060D1  0000               	dw	0
  4089  0060D3  0000               	dw	0
  4090  0060D5  0000               	dw	0
  4091  0060D7  0000               	dw	0
  4092  0060D9  0000               	dw	0
  4093  0060DB  0000               	dw	0
  4094  0060DD  0000               	dw	0
  4095  0060DF  0000               	dw	0
  4096  0060E1  0000               	dw	0
  4097  0060E3  0000               	dw	0
  4098  0060E5  0000               	dw	0
  4099  0060E7  0000               	dw	0
  4100  0060E9  0000               	dw	0
  4101  0060EB  0000               	dw	0
  4102  0060ED  0000               	dw	0
  4103  0060EF  0000               	dw	0
  4104  0060F1  0000               	dw	0
  4105  0060F3  0000               	dw	0
  4106  0060F5  0000               	dw	0
  4107  0060F7  0000               	dw	0
  4108  0060F9  0000               	dw	0
  4109  0060FB  0000               	dw	0
  4110  0060FD  0000               	dw	0
  4111  0060FF  0000               	dw	0
  4112  006101  0000               	dw	0
  4113  006103  0000               	dw	0
  4114  006105  0000               	dw	0
  4115  006107  0000               	dw	0
  4116  006109  0000               	dw	0
  4117  00610B  0000               	dw	0
  4118  00610D  0000               	dw	0
  4119  00610F  0000               	dw	0
  4120  006111  0000               	dw	0
  4121  006113  0000               	dw	0
  4122  006115  0000               	dw	0
  4123  006117  0000               	dw	0
  4124  006119  0000               	dw	0
  4125  00611B  0000               	dw	0
  4126  00611D  0000               	dw	0
  4127  00611F  0000               	dw	0
  4128  006121  0000               	dw	0
  4129  006123  0000               	dw	0
  4130  006125  0000               	dw	0
  4131  006127  0000               	dw	0
  4132  006129  0000               	dw	0
  4133  00612B  0000               	dw	0
  4134  00612D  0000               	dw	0
  4135  00612F  0000               	dw	0
  4136  006131  0000               	dw	0
  4137  006133  0000               	dw	0
  4138  006135  0000               	dw	0
  4139  006137  0000               	dw	0
  4140  006139  0000               	dw	0
  4141  00613B  0000               	dw	0
  4142  00613D  0000               	dw	0
  4143  00613F  0000               	dw	0
  4144  006141  0000               	dw	0
  4145  006143  0000               	dw	0
  4146  006145  0000               	dw	0
  4147  006147  0000               	dw	0
  4148  006149  0000               	dw	0
  4149  00614B  0000               	dw	0
  4150  00614D  0000               	dw	0
  4151  00614F  0000               	dw	0
  4152  006151  0000               	dw	0
  4153  006153  0000               	dw	0
  4154  006155  0000               	dw	0
  4155  006157  0000               	dw	0
  4156  006159  0000               	dw	0
  4157  00615B  0000               	dw	0
  4158  00615D  0000               	dw	0
  4159  00615F  0000               	dw	0
  4160  006161  0000               	dw	0
  4161  006163  0000               	dw	0
  4162  006165  0000               	dw	0
  4163  006167  0000               	dw	0
  4164  006169  0000               	dw	0
  4165  00616B  0000               	dw	0
  4166  00616D  0000               	dw	0
  4167  00616F  0000               	dw	0
  4168  006171  0000               	dw	0
  4169  006173  0000               	dw	0
  4170  006175  0000               	dw	0
  4171  006177  0000               	dw	0
  4172  006179  0000               	dw	0
  4173  00617B  0000               	dw	0
  4174  00617D  0000               	dw	0
  4175  00617F  0000               	dw	0
  4176  006181  0000               	dw	0
  4177  006183  0000               	dw	0
  4178  006185  0000               	dw	0
  4179  006187  0000               	dw	0
  4180  006189  0000               	dw	0
  4181  00618B  0000               	dw	0
  4182  00618D  0000               	dw	0
  4183  00618F  0000               	dw	0
  4184  006191  0000               	dw	0
  4185  006193  0000               	dw	0
  4186  006195  0000               	dw	0
  4187  006197  0000               	dw	0
  4188  006199  0000               	dw	0
  4189  00619B  0000               	dw	0
  4190  00619D  0000               	dw	0
  4191  00619F  0000               	dw	0
  4192  0061A1  0000               	dw	0
  4193  0061A3  0000               	dw	0
  4194  0061A5  0000               	dw	0
  4195  0061A7  0000               	dw	0
  4196  0061A9  0000               	dw	0
  4197  0061AB  0000               	dw	0
  4198  0061AD  0000               	dw	0
  4199  0061AF  0000               	dw	0
  4200  0061B1  0000               	dw	0
  4201  0061B3  0000               	dw	0
  4202  0061B5  0000               	dw	0
  4203  0061B7  0000               	dw	0
  4204  0061B9  0000               	dw	0
  4205  0061BB  0000               	dw	0
  4206  0061BD  0000               	dw	0
  4207  0061BF  0000               	dw	0
  4208  0061C1  0000               	dw	0
  4209  0061C3  0000               	dw	0
  4210  0061C5  0000               	dw	0
  4211  0061C7  0000               	dw	0
  4212  0061C9  0000               	dw	0
  4213  0061CB  0000               	dw	0
  4214  0061CD  0000               	dw	0
  4215  0061CF  0000               	dw	0
  4216  0061D1  0000               	dw	0
  4217  0061D3  0000               	dw	0
  4218  0061D5  0000               	dw	0
  4219  0061D7  0000               	dw	0
  4220  0061D9  0000               	dw	0
  4221  0061DB  0000               	dw	0
  4222  0061DD  0000               	dw	0
  4223  0061DF  0000               	dw	0
  4224  0061E1  0000               	dw	0
  4225  0061E3  0000               	dw	0
  4226  0061E5  0000               	dw	0
  4227  0061E7  0000               	dw	0
  4228  0061E9  0000               	dw	0
  4229  0061EB  0000               	dw	0
  4230  0061ED  0000               	dw	0
  4231  0061EF  0000               	dw	0
  4232  0061F1  0000               	dw	0
  4233  0061F3  0000               	dw	0
  4234  0061F5  0000               	dw	0
  4235  0061F7  0000               	dw	0
  4236  0061F9  0000               	dw	0
  4237  0061FB  0000               	dw	0
  4238  0061FD  0000               	dw	0
  4239  0061FF  0000               	dw	0
  4240  006201  0000               	dw	0
  4241  006203  0000               	dw	0
  4242  006205  0000               	dw	0
  4243  006207  0000               	dw	0
  4244  006209  0000               	dw	0
  4245  00620B  0000               	dw	0
  4246  00620D  0000               	dw	0
  4247  00620F  0000               	dw	0
  4248  006211  0000               	dw	0
  4249  006213  0000               	dw	0
  4250  006215  0000               	dw	0
  4251  006217  0000               	dw	0
  4252  006219  0000               	dw	0
  4253  00621B  0000               	dw	0
  4254  00621D  0000               	dw	0
  4255  00621F  0000               	dw	0
  4256  006221  0000               	dw	0
  4257  006223  0000               	dw	0
  4258  006225  0000               	dw	0
  4259  006227  0000               	dw	0
  4260  006229  0000               	dw	0
  4261  00622B  0000               	dw	0
  4262  00622D  0000               	dw	0
  4263  00622F  0000               	dw	0
  4264  006231  0000               	dw	0
  4265  006233  0000               	dw	0
  4266  006235  0000               	dw	0
  4267  006237  0000               	dw	0
  4268  006239  0000               	dw	0
  4269  00623B  0000               	dw	0
  4270  00623D  0000               	dw	0
  4271  00623F  0000               	dw	0
  4272  006241  0000               	dw	0
  4273  006243  0000               	dw	0
  4274  006245  0000               	dw	0
  4275  006247  0000               	dw	0
  4276  006249  0000               	dw	0
  4277  00624B  0000               	dw	0
  4278  00624D  0000               	dw	0
  4279  00624F  0000               	dw	0
  4280  006251  0000               	dw	0
  4281  006253  0000               	dw	0
  4282  006255  0000               	dw	0
  4283  006257  0000               	dw	0
  4284  006259  0000               	dw	0
  4285  00625B  0000               	dw	0
  4286  00625D  0000               	dw	0
  4287  00625F  0000               	dw	0
  4288  006261  0000               	dw	0
  4289  006263  0000               	dw	0
  4290  006265  0000               	dw	0
  4291  006267  0000               	dw	0
  4292  006269  0000               	dw	0
  4293  00626B  0000               	dw	0
  4294  00626D  0000               	dw	0
  4295  00626F  0000               	dw	0
  4296  006271  0000               	dw	0
  4297  006273  0000               	dw	0
  4298  006275  0000               	dw	0
  4299  006277  0000               	dw	0
  4300  006279  0000               	dw	0
  4301  00627B  0000               	dw	0
  4302  00627D  0000               	dw	0
  4303  00627F  0000               	dw	0
  4304  006281  0000               	dw	0
  4305  006283  0000               	dw	0
  4306  006285  0000               	dw	0
  4307  006287  0000               	dw	0
  4308  006289  0000               	dw	0
  4309  00628B  0000               	dw	0
  4310  00628D  0000               	dw	0
  4311  00628F  0000               	dw	0
  4312  006291  0000               	dw	0
  4313  006293  0000               	dw	0
  4314  006295  0000               	dw	0
  4315  006297  0000               	dw	0
  4316  006299  0000               	dw	0
  4317  00629B  0000               	dw	0
  4318  00629D  0000               	dw	0
  4319  00629F  0000               	dw	0
  4320  0062A1  0000               	dw	0
  4321  0062A3  0000               	dw	0
  4322  0062A5  0000               	dw	0
  4323  0062A7  0000               	dw	0
  4324  0062A9  0000               	dw	0
  4325  0062AB  0000               	dw	0
  4326  0062AD  0000               	dw	0
  4327  0062AF  0000               	dw	0
  4328  0062B1  0000               	dw	0
  4329  0062B3  0000               	dw	0
  4330  0062B5  0000               	dw	0
  4331  0062B7  0000               	dw	0
  4332  0062B9  0000               	dw	0
  4333  0062BB  0000               	dw	0
  4334  0062BD  0000               	dw	0
  4335  0062BF  0000               	dw	0
  4336  0062C1  0000               	dw	0
  4337  0062C3  0000               	dw	0
  4338  0062C5  0000               	dw	0
  4339  0062C7  0000               	dw	0
  4340  0062C9  0000               	dw	0
  4341  0062CB  0000               	dw	0
  4342  0062CD  0000               	dw	0
  4343  0062CF  0000               	dw	0
  4344  0062D1  0000               	dw	0
  4345  0062D3  0000               	dw	0
  4346  0062D5  0000               	dw	0
  4347  0062D7  0000               	dw	0
  4348  0062D9  0000               	dw	0
  4349  0062DB  0000               	dw	0
  4350  0062DD  0000               	dw	0
  4351  0062DF  0000               	dw	0
  4352  0062E1  0000               	dw	0
  4353  0062E3  0000               	dw	0
  4354  0062E5  0000               	dw	0
  4355  0062E7  0000               	dw	0
  4356  0062E9  0000               	dw	0
  4357  0062EB  0000               	dw	0
  4358  0062ED  0000               	dw	0
  4359  0062EF  0000               	dw	0
  4360  0062F1  0000               	dw	0
  4361  0062F3  0000               	dw	0
  4362  0062F5  0000               	dw	0
  4363  0062F7  0000               	dw	0
  4364  0062F9  0000               	dw	0
  4365  0062FB  0000               	dw	0
  4366  0062FD  0000               	dw	0
  4367  0062FF  0000               	dw	0
  4368  006301  0000               	dw	0
  4369  006303  0000               	dw	0
  4370  006305  0000               	dw	0
  4371  006307  0000               	dw	0
  4372  006309  0000               	dw	0
  4373  00630B  0000               	dw	0
  4374  00630D  0000               	dw	0
  4375  00630F  0000               	dw	0
  4376  006311  0000               	dw	0
  4377  006313  0000               	dw	0
  4378  006315  0000               	dw	0
  4379  006317  0000               	dw	0
  4380  006319  0000               	dw	0
  4381  00631B  0000               	dw	0
  4382  00631D  0000               	dw	0
  4383  00631F  0000               	dw	0
  4384  006321  0000               	dw	0
  4385  006323  0000               	dw	0
  4386  006325  0000               	dw	0
  4387  006327  0000               	dw	0
  4388  006329  0000               	dw	0
  4389  00632B  0000               	dw	0
  4390  00632D  0000               	dw	0
  4391  00632F  0000               	dw	0
  4392  006331  0000               	dw	0
  4393  006333  0000               	dw	0
  4394  006335  0000               	dw	0
  4395  006337  0000               	dw	0
  4396  006339  0000               	dw	0
  4397  00633B  0000               	dw	0
  4398  00633D  0000               	dw	0
  4399  00633F  0000               	dw	0
  4400  006341  0000               	dw	0
  4401  006343  0000               	dw	0
  4402  006345  0000               	dw	0
  4403  006347  0000               	dw	0
  4404  006349  0000               	dw	0
  4405  00634B  0000               	dw	0
  4406  00634D  0000               	dw	0
  4407  00634F  0000               	dw	0
  4408  006351  0000               	dw	0
  4409  006353  0000               	dw	0
  4410  006355  0000               	dw	0
  4411  006357  0000               	dw	0
  4412  006359  0000               	dw	0
  4413  00635B  0000               	dw	0
  4414  00635D  0000               	dw	0
  4415  00635F  0000               	dw	0
  4416  006361  0000               	dw	0
  4417  006363  0000               	dw	0
  4418  006365  0000               	dw	0
  4419  006367  0000               	dw	0
  4420  006369  0000               	dw	0
  4421  00636B  0000               	dw	0
  4422  00636D  0000               	dw	0
  4423  00636F  0000               	dw	0
  4424  006371  0000               	dw	0
  4425  006373  0000               	dw	0
  4426  006375  0000               	dw	0
  4427  006377  0000               	dw	0
  4428  006379  0000               	dw	0
  4429  00637B  0000               	dw	0
  4430  00637D  0000               	dw	0
  4431  00637F  0000               	dw	0
  4432  006381  0000               	dw	0
  4433  006383  0000               	dw	0
  4434  006385  0000               	dw	0
  4435  006387  0000               	dw	0
  4436  006389  0000               	dw	0
  4437  00638B  0000               	dw	0
  4438  00638D  0000               	dw	0
  4439  00638F  0000               	dw	0
  4440  006391  0000               	dw	0
  4441  006393  0000               	dw	0
  4442  006395  0000               	dw	0
  4443  006397  0000               	dw	0
  4444  006399  0000               	dw	0
  4445  00639B  0000               	dw	0
  4446  00639D  0000               	dw	0
  4447  00639F  0000               	dw	0
  4448  0063A1  0000               	dw	0
  4449  0063A3  0000               	dw	0
  4450  0063A5  0000               	dw	0
  4451  0063A7  0000               	dw	0
  4452  0063A9  0000               	dw	0
  4453  0063AB  0000               	dw	0
  4454  0063AD  0000               	dw	0
  4455  0063AF  0000               	dw	0
  4456  0063B1  0000               	dw	0
  4457  0063B3  0000               	dw	0
  4458  0063B5  0000               	dw	0
  4459  0063B7  0000               	dw	0
  4460  0063B9  0000               	dw	0
  4461  0063BB  0000               	dw	0
  4462  0063BD  0000               	dw	0
  4463  0063BF  0000               	dw	0
  4464  0063C1  0000               	dw	0
  4465  0063C3  0000               	dw	0
  4466  0063C5  0000               	dw	0
  4467  0063C7  0000               	dw	0
  4468  0063C9  0000               	dw	0
  4469  0063CB  0000               	dw	0
  4470  0063CD  0000               	dw	0
  4471  0063CF  0000               	dw	0
  4472  0063D1  0000               	dw	0
  4473  0063D3  0000               	dw	0
  4474  0063D5  0000               	dw	0
  4475  0063D7  0000               	dw	0
  4476  0063D9  0000               	dw	0
  4477  0063DB  0000               	dw	0
  4478  0063DD  0000               	dw	0
  4479  0063DF  0000               	dw	0
  4480  0063E1  0000               	dw	0
  4481  0063E3  0000               	dw	0
  4482  0063E5  0000               	dw	0
  4483  0063E7  0000               	dw	0
  4484  0063E9  0000               	dw	0
  4485  0063EB  0000               	dw	0
  4486  0063ED  0000               	dw	0
  4487  0063EF  0000               	dw	0
  4488  0063F1  0000               	dw	0
  4489  0063F3  0000               	dw	0
  4490  0063F5  0000               	dw	0
  4491  0063F7  0000               	dw	0
  4492  0063F9  0000               	dw	0
  4493  0063FB  0000               	dw	0
  4494  0063FD  0000               	dw	0
  4495  0063FF  0000               	dw	0
  4496  006401  0000               	dw	0
  4497  006403  0000               	dw	0
  4498  006405  0000               	dw	0
  4499  006407  0000               	dw	0
  4500  006409  0000               	dw	0
  4501  00640B  0000               	dw	0
  4502  00640D  0000               	dw	0
  4503  00640F  0000               	dw	0
  4504  006411  0000               	dw	0
  4505  006413  0000               	dw	0
  4506  006415  0000               	dw	0
  4507  006417  0000               	dw	0
  4508  006419  0000               	dw	0
  4509  00641B  0000               	dw	0
  4510  00641D  0000               	dw	0
  4511  00641F  0000               	dw	0
  4512  006421  0000               	dw	0
  4513  006423  0000               	dw	0
  4514  006425  0000               	dw	0
  4515  006427  0000               	dw	0
  4516  006429  0000               	dw	0
  4517  00642B  0000               	dw	0
  4518  00642D  0000               	dw	0
  4519  00642F  0000               	dw	0
  4520  006431  0000               	dw	0
  4521  006433  0000               	dw	0
  4522  006435  0000               	dw	0
  4523  006437  0000               	dw	0
  4524  006439  0000               	dw	0
  4525  00643B  0000               	dw	0
  4526  00643D  0000               	dw	0
  4527  00643F  0000               	dw	0
  4528  006441  0000               	dw	0
  4529  006443  0000               	dw	0
  4530  006445  0000               	dw	0
  4531  006447  0000               	dw	0
  4532  006449  0000               	dw	0
  4533  00644B  0000               	dw	0
  4534  00644D  0000               	dw	0
  4535  00644F  0000               	dw	0
  4536  006451  0000               	dw	0
  4537  006453  0000               	dw	0
  4538  006455  0000               	dw	0
  4539  006457  0000               	dw	0
  4540  006459  0000               	dw	0
  4541  00645B  0000               	dw	0
  4542  00645D  0000               	dw	0
  4543  00645F  0000               	dw	0
  4544  006461  0000               	dw	0
  4545  006463  0000               	dw	0
  4546  006465  0000               	dw	0
  4547  006467  0000               	dw	0
  4548  006469  0000               	dw	0
  4549  00646B  0000               	dw	0
  4550  00646D  0000               	dw	0
  4551  00646F  0000               	dw	0
  4552  006471  0000               	dw	0
  4553  006473  0000               	dw	0
  4554  006475  0000               	dw	0
  4555  006477  0000               	dw	0
  4556  006479  0000               	dw	0
  4557  00647B  0000               	dw	0
  4558  00647D  0000               	dw	0
  4559  00647F  0000               	dw	0
  4560  006481  0000               	dw	0
  4561  006483  0000               	dw	0
  4562  006485  0000               	dw	0
  4563  006487  0000               	dw	0
  4564  006489  0000               	dw	0
  4565  00648B  0000               	dw	0
  4566  00648D  0000               	dw	0
  4567  00648F  0000               	dw	0
  4568  006491  0000               	dw	0
  4569  006493  0000               	dw	0
  4570  006495  0000               	dw	0
  4571  006497  0000               	dw	0
  4572  006499  0000               	dw	0
  4573  00649B  0000               	dw	0
  4574  00649D  0000               	dw	0
  4575  00649F  0000               	dw	0
  4576  0064A1  0000               	dw	0
  4577  0064A3  0000               	dw	0
  4578  0064A5  0000               	dw	0
  4579  0064A7  0000               	dw	0
  4580  0064A9  0000               	dw	0
  4581  0064AB  0000               	dw	0
  4582  0064AD  0000               	dw	0
  4583  0064AF  0000               	dw	0
  4584  0064B1  0000               	dw	0
  4585  0064B3  0000               	dw	0
  4586  0064B5  0000               	dw	0
  4587  0064B7  0000               	dw	0
  4588  0064B9  0000               	dw	0
  4589  0064BB  0000               	dw	0
  4590  0064BD  0000               	dw	0
  4591  0064BF  0000               	dw	0
  4592  0064C1  0000               	dw	0
  4593  0064C3  0000               	dw	0
  4594  0064C5  0000               	dw	0
  4595  0064C7  0000               	dw	0
  4596  0064C9  0000               	dw	0
  4597  0064CB  0000               	dw	0
  4598  0064CD  0000               	dw	0
  4599  0064CF  0000               	dw	0
  4600  0064D1  0000               	dw	0
  4601  0064D3  0000               	dw	0
  4602  0064D5  0000               	dw	0
  4603  0064D7  0000               	dw	0
  4604  0064D9  0000               	dw	0
  4605  0064DB  0000               	dw	0
  4606  0064DD  0000               	dw	0
  4607  0064DF  0000               	dw	0
  4608  0064E1  0000               	dw	0
  4609  0064E3  0000               	dw	0
  4610  0064E5  0000               	dw	0
  4611  0064E7  0000               	dw	0
  4612  0064E9  0000               	dw	0
  4613  0064EB  0000               	dw	0
  4614  0064ED  0000               	dw	0
  4615  0064EF  0000               	dw	0
  4616  0064F1  0000               	dw	0
  4617  0064F3  0000               	dw	0
  4618  0064F5  0000               	dw	0
  4619  0064F7  0000               	dw	0
  4620  0064F9  0000               	dw	0
  4621  0064FB  0000               	dw	0
  4622  0064FD  0000               	dw	0
  4623  0064FF  0000               	dw	0
  4624  006501  0000               	dw	0
  4625  006503  0000               	dw	0
  4626  006505  0000               	dw	0
  4627  006507  0000               	dw	0
  4628  006509  0000               	dw	0
  4629  00650B  0000               	dw	0
  4630  00650D  0000               	dw	0
  4631  00650F  0000               	dw	0
  4632  006511  0000               	dw	0
  4633  006513  0000               	dw	0
  4634  006515  0000               	dw	0
  4635  006517  0000               	dw	0
  4636  006519  0000               	dw	0
  4637  00651B  0000               	dw	0
  4638  00651D  0000               	dw	0
  4639  00651F  0000               	dw	0
  4640  006521  0000               	dw	0
  4641  006523  0000               	dw	0
  4642  006525  0000               	dw	0
  4643  006527  0000               	dw	0
  4644  006529  0000               	dw	0
  4645  00652B  0000               	dw	0
  4646  00652D  0000               	dw	0
  4647  00652F  0000               	dw	0
  4648  006531  0000               	dw	0
  4649  006533  0000               	dw	0
  4650  006535  0000               	dw	0
  4651  006537  0000               	dw	0
  4652  006539  0000               	dw	0
  4653  00653B  0000               	dw	0
  4654  00653D  0000               	dw	0
  4655  00653F  0000               	dw	0
  4656  006541  0000               	dw	0
  4657  006543  0000               	dw	0
  4658  006545  0000               	dw	0
  4659  006547  0000               	dw	0
  4660  006549  0000               	dw	0
  4661  00654B  0000               	dw	0
  4662  00654D  0000               	dw	0
  4663  00654F  0000               	dw	0
  4664  006551  0000               	dw	0
  4665  006553  0000               	dw	0
  4666  006555  0000               	dw	0
  4667  006557  0000               	dw	0
  4668  006559  0000               	dw	0
  4669  00655B  0000               	dw	0
  4670  00655D  0000               	dw	0
  4671  00655F  0000               	dw	0
  4672  006561  0000               	dw	0
  4673  006563  0000               	dw	0
  4674  006565  0000               	dw	0
  4675  006567  0000               	dw	0
  4676  006569  0000               	dw	0
  4677  00656B  0000               	dw	0
  4678  00656D  0000               	dw	0
  4679  00656F  0000               	dw	0
  4680  006571  0000               	dw	0
  4681  006573  0000               	dw	0
  4682  006575  0000               	dw	0
  4683  006577  0000               	dw	0
  4684  006579  0000               	dw	0
  4685  00657B  0000               	dw	0
  4686  00657D  0000               	dw	0
  4687  00657F  0000               	dw	0
  4688  006581  0000               	dw	0
  4689  006583  0000               	dw	0
  4690  006585  0000               	dw	0
  4691  006587  0000               	dw	0
  4692  006589  0000               	dw	0
  4693  00658B  0000               	dw	0
  4694  00658D  0000               	dw	0
  4695  00658F  0000               	dw	0
  4696  006591  0000               	dw	0
  4697  006593  0000               	dw	0
  4698  006595  0000               	dw	0
  4699  006597  0000               	dw	0
  4700  006599  0000               	dw	0
  4701  00659B  0000               	dw	0
  4702  00659D  0000               	dw	0
  4703  00659F  0000               	dw	0
  4704  0065A1  0000               	dw	0
  4705  0065A3  0000               	dw	0
  4706  0065A5  0000               	dw	0
  4707  0065A7  0000               	dw	0
  4708  0065A9  0000               	dw	0
  4709  0065AB  0000               	dw	0
  4710  0065AD  0000               	dw	0
  4711  0065AF  0000               	dw	0
  4712  0065B1  0000               	dw	0
  4713  0065B3  0000               	dw	0
  4714  0065B5  0000               	dw	0
  4715  0065B7  0000               	dw	0
  4716  0065B9  0000               	dw	0
  4717  0065BB  0000               	dw	0
  4718  0065BD  0000               	dw	0
  4719  0065BF  0000               	dw	0
  4720  0065C1  0000               	dw	0
  4721  0065C3  0000               	dw	0
  4722  0065C5  0000               	dw	0
  4723  0065C7  0000               	dw	0
  4724  0065C9  0000               	dw	0
  4725  0065CB  0000               	dw	0
  4726  0065CD  0000               	dw	0
  4727  0065CF  0000               	dw	0
  4728  0065D1  0000               	dw	0
  4729  0065D3  0000               	dw	0
  4730  0065D5  0000               	dw	0
  4731  0065D7  0000               	dw	0
  4732  0065D9  0000               	dw	0
  4733  0065DB  0000               	dw	0
  4734  0065DD  0000               	dw	0
  4735  0065DF  0000               	dw	0
  4736  0065E1  0000               	dw	0
  4737  0065E3  0000               	dw	0
  4738  0065E5  0000               	dw	0
  4739  0065E7  0000               	dw	0
  4740  0065E9  0000               	dw	0
  4741  0065EB  0000               	dw	0
  4742  0065ED  0000               	dw	0
  4743  0065EF  0000               	dw	0
  4744  0065F1  0000               	dw	0
  4745  0065F3  0000               	dw	0
  4746  0065F5  0000               	dw	0
  4747  0065F7  0000               	dw	0
  4748  0065F9  0000               	dw	0
  4749  0065FB  0000               	dw	0
  4750  0065FD  0000               	dw	0
  4751  0065FF  0000               	dw	0
  4752  006601  0000               	dw	0
  4753  006603  0000               	dw	0
  4754  006605  0000               	dw	0
  4755  006607  0000               	dw	0
  4756  006609  0000               	dw	0
  4757  00660B  0000               	dw	0
  4758  00660D  0000               	dw	0
  4759  00660F  0000               	dw	0
  4760  006611  0000               	dw	0
  4761  006613  0000               	dw	0
  4762  006615  0000               	dw	0
  4763  006617  0000               	dw	0
  4764  006619  0000               	dw	0
  4765  00661B  0000               	dw	0
  4766  00661D  0000               	dw	0
  4767  00661F  0000               	dw	0
  4768  006621  0000               	dw	0
  4769  006623  0000               	dw	0
  4770  006625  0000               	dw	0
  4771  006627  0000               	dw	0
  4772  006629  0000               	dw	0
  4773  00662B  0000               	dw	0
  4774  00662D  0000               	dw	0
  4775  00662F  0000               	dw	0
  4776  006631  0000               	dw	0
  4777  006633  0000               	dw	0
  4778  006635  0000               	dw	0
  4779  006637  0000               	dw	0
  4780  006639  0000               	dw	0
  4781  00663B  0000               	dw	0
  4782  00663D  0000               	dw	0
  4783  00663F  0000               	dw	0
  4784  006641  0000               	dw	0
  4785  006643  0000               	dw	0
  4786  006645  0000               	dw	0
  4787  006647  0000               	dw	0
  4788  006649  0000               	dw	0
  4789  00664B  0000               	dw	0
  4790  00664D  0000               	dw	0
  4791  00664F  0000               	dw	0
  4792  006651  0000               	dw	0
  4793  006653  0000               	dw	0
  4794  006655  0000               	dw	0
  4795  006657  0000               	dw	0
  4796  006659  0000               	dw	0
  4797  00665B  0000               	dw	0
  4798  00665D  0000               	dw	0
  4799  00665F  0000               	dw	0
  4800  006661  0000               	dw	0
  4801  006663  0000               	dw	0
  4802  006665  0000               	dw	0
  4803  006667  0000               	dw	0
  4804  006669  0000               	dw	0
  4805  00666B  0000               	dw	0
  4806  00666D  0000               	dw	0
  4807  00666F  0000               	dw	0
  4808  006671  0000               	dw	0
  4809  006673  0000               	dw	0
  4810  006675  0000               	dw	0
  4811  006677  0000               	dw	0
  4812  006679  0000               	dw	0
  4813  00667B  0000               	dw	0
  4814  00667D  0000               	dw	0
  4815  00667F  0000               	dw	0
  4816  006681  0000               	dw	0
  4817  006683  0000               	dw	0
  4818  006685  0000               	dw	0
  4819  006687  0000               	dw	0
  4820  006689  0000               	dw	0
  4821  00668B  0000               	dw	0
  4822  00668D  0000               	dw	0
  4823  00668F  0000               	dw	0
  4824  006691  0000               	dw	0
  4825  006693  0000               	dw	0
  4826  006695  0000               	dw	0
  4827  006697  0000               	dw	0
  4828  006699  0000               	dw	0
  4829  00669B  0000               	dw	0
  4830  00669D  0000               	dw	0
  4831  00669F  0000               	dw	0
  4832  0066A1  0000               	dw	0
  4833  0066A3  0000               	dw	0
  4834  0066A5  0000               	dw	0
  4835  0066A7  0000               	dw	0
  4836  0066A9  0000               	dw	0
  4837  0066AB  0000               	dw	0
  4838  0066AD  0000               	dw	0
  4839  0066AF  0000               	dw	0
  4840  0066B1  0000               	dw	0
  4841  0066B3  0000               	dw	0
  4842  0066B5  0000               	dw	0
  4843  0066B7  0000               	dw	0
  4844  0066B9  0000               	dw	0
  4845  0066BB  0000               	dw	0
  4846  0066BD  0000               	dw	0
  4847  0066BF  0000               	dw	0
  4848  0066C1  0000               	dw	0
  4849  0066C3  0000               	dw	0
  4850  0066C5  0000               	dw	0
  4851  0066C7  0000               	dw	0
  4852  0066C9  0000               	dw	0
  4853  0066CB  0000               	dw	0
  4854  0066CD  0000               	dw	0
  4855  0066CF  0000               	dw	0
  4856  0066D1  0000               	dw	0
  4857  0066D3  0000               	dw	0
  4858  0066D5  0000               	dw	0
  4859  0066D7  0000               	dw	0
  4860  0066D9  0000               	dw	0
  4861  0066DB  0000               	dw	0
  4862  0066DD  0000               	dw	0
  4863  0066DF  0000               	dw	0
  4864  0066E1  0000               	dw	0
  4865  0066E3  0000               	dw	0
  4866  0066E5  0000               	dw	0
  4867  0066E7  0000               	dw	0
  4868  0066E9  0000               	dw	0
  4869  0066EB  0000               	dw	0
  4870  0066ED  0000               	dw	0
  4871  0066EF  0000               	dw	0
  4872  0066F1  0000               	dw	0
  4873  0066F3  0000               	dw	0
  4874  0066F5  0000               	dw	0
  4875  0066F7  0000               	dw	0
  4876  0066F9  0000               	dw	0
  4877  0066FB  0000               	dw	0
  4878  0066FD  0000               	dw	0
  4879  0066FF  0000               	dw	0
  4880  006701  0000               	dw	0
  4881  006703  0000               	dw	0
  4882  006705  0000               	dw	0
  4883  006707  0000               	dw	0
  4884  006709  0000               	dw	0
  4885  00670B  0000               	dw	0
  4886  00670D  0000               	dw	0
  4887  00670F  0000               	dw	0
  4888  006711  0000               	dw	0
  4889  006713  0000               	dw	0
  4890  006715  0000               	dw	0
  4891  006717  0000               	dw	0
  4892  006719  0000               	dw	0
  4893  00671B  0000               	dw	0
  4894  00671D  0000               	dw	0
  4895  00671F  0000               	dw	0
  4896  006721  0000               	dw	0
  4897  006723  0000               	dw	0
  4898  006725  0000               	dw	0
  4899  006727  0000               	dw	0
  4900  006729  0000               	dw	0
  4901  00672B  0000               	dw	0
  4902  00672D  0000               	dw	0
  4903  00672F  0000               	dw	0
  4904  006731  0000               	dw	0
  4905  006733  0000               	dw	0
  4906  006735  0000               	dw	0
  4907  006737  0000               	dw	0
  4908  006739  0000               	dw	0
  4909  00673B  0000               	dw	0
  4910  00673D  0000               	dw	0
  4911  00673F  0000               	dw	0
  4912  006741  0000               	dw	0
  4913  006743  0000               	dw	0
  4914  006745  0000               	dw	0
  4915  006747  0000               	dw	0
  4916  006749  0000               	dw	0
  4917  00674B  0000               	dw	0
  4918  00674D  0000               	dw	0
  4919  00674F  0000               	dw	0
  4920  006751  0000               	dw	0
  4921  006753  0000               	dw	0
  4922  006755  0000               	dw	0
  4923  006757  0000               	dw	0
  4924  006759  0000               	dw	0
  4925  00675B  0000               	dw	0
  4926  00675D  0000               	dw	0
  4927  00675F  0000               	dw	0
  4928  006761  0000               	dw	0
  4929  006763  0000               	dw	0
  4930  006765  0000               	dw	0
  4931  006767  0000               	dw	0
  4932  006769  0000               	dw	0
  4933  00676B  0000               	dw	0
  4934  00676D  0000               	dw	0
  4935  00676F  0000               	dw	0
  4936  006771  0000               	dw	0
  4937  006773  0000               	dw	0
  4938  006775  0000               	dw	0
  4939  006777  0000               	dw	0
  4940  006779  0000               	dw	0
  4941  00677B  0000               	dw	0
  4942  00677D  0000               	dw	0
  4943  00677F  0000               	dw	0
  4944  006781  0000               	dw	0
  4945  006783  0000               	dw	0
  4946  006785  0000               	dw	0
  4947  006787  0000               	dw	0
  4948  006789  0000               	dw	0
  4949  00678B  0000               	dw	0
  4950  00678D  0000               	dw	0
  4951  00678F  0000               	dw	0
  4952  006791  0000               	dw	0
  4953  006793  0000               	dw	0
  4954  006795  0000               	dw	0
  4955  006797  0000               	dw	0
  4956  006799  0000               	dw	0
  4957  00679B  0000               	dw	0
  4958  00679D  0000               	dw	0
  4959  00679F  0000               	dw	0
  4960  0067A1  0000               	dw	0
  4961  0067A3  0000               	dw	0
  4962  0067A5  0000               	dw	0
  4963  0067A7  0000               	dw	0
  4964  0067A9  0000               	dw	0
  4965  0067AB  0000               	dw	0
  4966  0067AD  0000               	dw	0
  4967  0067AF  0000               	dw	0
  4968  0067B1  0000               	dw	0
  4969  0067B3  0000               	dw	0
  4970  0067B5  0000               	dw	0
  4971  0067B7  0000               	dw	0
  4972  0067B9  0000               	dw	0
  4973  0067BB  0000               	dw	0
  4974  0067BD  0000               	dw	0
  4975  0067BF  0000               	dw	0
  4976  0067C1  0000               	dw	0
  4977  0067C3  0000               	dw	0
  4978  0067C5  0000               	dw	0
  4979  0067C7  0000               	dw	0
  4980  0067C9  0000               	dw	0
  4981  0067CB  0000               	dw	0
  4982  0067CD  0000               	dw	0
  4983  0067CF  0000               	dw	0
  4984  0067D1  0000               	dw	0
  4985  0067D3  0000               	dw	0
  4986  0067D5  0000               	dw	0
  4987  0067D7  0000               	dw	0
  4988  0067D9  0000               	dw	0
  4989  0067DB  0000               	dw	0
  4990  0067DD  0000               	dw	0
  4991  0067DF  0000               	dw	0
  4992  0067E1  0000               	dw	0
  4993  0067E3  0000               	dw	0
  4994  0067E5  0000               	dw	0
  4995  0067E7  0000               	dw	0
  4996  0067E9  0000               	dw	0
  4997  0067EB  0000               	dw	0
  4998  0067ED  0000               	dw	0
  4999  0067EF  0000               	dw	0
  5000  0067F1  0000               	dw	0
  5001  0067F3  0000               	dw	0
  5002  0067F5  0000               	dw	0
  5003  0067F7  0000               	dw	0
  5004  0067F9  0000               	dw	0
  5005  0067FB  0000               	dw	0
  5006  0067FD  0000               	dw	0
  5007  0067FF  0000               	dw	0
  5008  006801  0000               	dw	0
  5009  006803  0000               	dw	0
  5010  006805  0000               	dw	0
  5011  006807  0000               	dw	0
  5012  006809  0000               	dw	0
  5013  00680B  0000               	dw	0
  5014  00680D  0000               	dw	0
  5015  00680F  0000               	dw	0
  5016  006811  0000               	dw	0
  5017  006813  0000               	dw	0
  5018  006815  0000               	dw	0
  5019  006817  0000               	dw	0
  5020  006819  0000               	dw	0
  5021  00681B  0000               	dw	0
  5022  00681D  0000               	dw	0
  5023  00681F  0000               	dw	0
  5024  006821  0000               	dw	0
  5025  006823  0000               	dw	0
  5026  006825  0000               	dw	0
  5027  006827  0000               	dw	0
  5028  006829  0000               	dw	0
  5029  00682B  0000               	dw	0
  5030  00682D  0000               	dw	0
  5031  00682F  0000               	dw	0
  5032  006831  0000               	dw	0
  5033  006833  0000               	dw	0
  5034  006835  0000               	dw	0
  5035  006837  0000               	dw	0
  5036  006839  0000               	dw	0
  5037  00683B  0000               	dw	0
  5038  00683D  0000               	dw	0
  5039  00683F  0000               	dw	0
  5040  006841  0000               	dw	0
  5041  006843  0000               	dw	0
  5042  006845  0000               	dw	0
  5043  006847  0000               	dw	0
  5044  006849  0000               	dw	0
  5045  00684B  0000               	dw	0
  5046  00684D  0000               	dw	0
  5047  00684F  0000               	dw	0
  5048  006851  0000               	dw	0
  5049  006853  0000               	dw	0
  5050  006855  0000               	dw	0
  5051  006857  0000               	dw	0
  5052  006859  0000               	dw	0
  5053  00685B  0000               	dw	0
  5054  00685D  0000               	dw	0
  5055  00685F  0000               	dw	0
  5056  006861  0000               	dw	0
  5057  006863  0000               	dw	0
  5058  006865  0000               	dw	0
  5059  006867  0000               	dw	0
  5060  006869  0000               	dw	0
  5061  00686B  0000               	dw	0
  5062  00686D  0000               	dw	0
  5063  00686F  0000               	dw	0
  5064  006871  0000               	dw	0
  5065  006873  0000               	dw	0
  5066  006875  0000               	dw	0
  5067  006877  0000               	dw	0
  5068  006879  0000               	dw	0
  5069  00687B  0000               	dw	0
  5070  00687D  0000               	dw	0
  5071  00687F  0000               	dw	0
  5072  006881  0000               	dw	0
  5073  006883  0000               	dw	0
  5074  006885  0000               	dw	0
  5075  006887  0000               	dw	0
  5076  006889  0000               	dw	0
  5077  00688B  0000               	dw	0
  5078  00688D  0000               	dw	0
  5079  00688F  0000               	dw	0
  5080  006891  0000               	dw	0
  5081  006893  0000               	dw	0
  5082  006895  0000               	dw	0
  5083  006897  0000               	dw	0
  5084  006899  0000               	dw	0
  5085  00689B  0000               	dw	0
  5086  00689D  0000               	dw	0
  5087  00689F  0000               	dw	0
  5088  0068A1  0000               	dw	0
  5089  0068A3  0000               	dw	0
  5090  0068A5  0000               	dw	0
  5091  0068A7  0000               	dw	0
  5092  0068A9  0000               	dw	0
  5093  0068AB  0000               	dw	0
  5094  0068AD  0000               	dw	0
  5095  0068AF  0000               	dw	0
  5096  0068B1  0000               	dw	0
  5097  0068B3  0000               	dw	0
  5098  0068B5  0000               	dw	0
  5099  0068B7  0000               	dw	0
  5100  0068B9  0000               	dw	0
  5101  0068BB  0000               	dw	0
  5102  0068BD  0000               	dw	0
  5103  0068BF  0000               	dw	0
  5104  0068C1  0000               	dw	0
  5105  0068C3  0000               	dw	0
  5106  0068C5  0000               	dw	0
  5107  0068C7  0000               	dw	0
  5108  0068C9  0000               	dw	0
  5109  0068CB  0000               	dw	0
  5110  0068CD  0000               	dw	0
  5111  0068CF  0000               	dw	0
  5112  0068D1  0000               	dw	0
  5113  0068D3  0000               	dw	0
  5114  0068D5  0000               	dw	0
  5115  0068D7  0000               	dw	0
  5116  0068D9  0000               	dw	0
  5117  0068DB  0000               	dw	0
  5118  0068DD  0000               	dw	0
  5119  0068DF  0000               	dw	0
  5120  0068E1  0000               	dw	0
  5121  0068E3  0000               	dw	0
  5122  0068E5  0000               	dw	0
  5123  0068E7  0000               	dw	0
  5124  0068E9  0000               	dw	0
  5125  0068EB  0000               	dw	0
  5126  0068ED  0000               	dw	0
  5127  0068EF  0000               	dw	0
  5128  0068F1  0000               	dw	0
  5129  0068F3  0000               	dw	0
  5130  0068F5  0000               	dw	0
  5131  0068F7  0000               	dw	0
  5132  0068F9  0000               	dw	0
  5133  0068FB  0000               	dw	0
  5134  0068FD  0000               	dw	0
  5135  0068FF  0000               	dw	0
  5136  006901  0000               	dw	0
  5137  006903  0000               	dw	0
  5138  006905  0000               	dw	0
  5139  006907  0000               	dw	0
  5140  006909  0000               	dw	0
  5141  00690B  0000               	dw	0
  5142  00690D  0000               	dw	0
  5143  00690F  0000               	dw	0
  5144  006911  0000               	dw	0
  5145  006913  0000               	dw	0
  5146  006915  0000               	dw	0
  5147  006917  0000               	dw	0
  5148  006919  0000               	dw	0
  5149  00691B  0000               	dw	0
  5150  00691D  0000               	dw	0
  5151  00691F  0000               	dw	0
  5152  006921  0000               	dw	0
  5153  006923  0000               	dw	0
  5154  006925  0000               	dw	0
  5155  006927  0000               	dw	0
  5156  006929  0000               	dw	0
  5157  00692B  0000               	dw	0
  5158  00692D  0000               	dw	0
  5159  00692F  0000               	dw	0
  5160  006931  0000               	dw	0
  5161  006933  0000               	dw	0
  5162  006935  0000               	dw	0
  5163  006937  0000               	dw	0
  5164  006939  0000               	dw	0
  5165  00693B  0000               	dw	0
  5166  00693D  0000               	dw	0
  5167  00693F  0000               	dw	0
  5168  006941  0000               	dw	0
  5169  006943  0000               	dw	0
  5170  006945  0000               	dw	0
  5171  006947  0000               	dw	0
  5172  006949  0000               	dw	0
  5173  00694B  0000               	dw	0
  5174  00694D  0000               	dw	0
  5175  00694F  0000               	dw	0
  5176  006951  0000               	dw	0
  5177  006953  0000               	dw	0
  5178  006955  0000               	dw	0
  5179  006957  0000               	dw	0
  5180  006959  0000               	dw	0
  5181  00695B  0000               	dw	0
  5182  00695D  0000               	dw	0
  5183  00695F  0000               	dw	0
  5184  006961  0000               	dw	0
  5185  006963  0000               	dw	0
  5186  006965  0000               	dw	0
  5187  006967  0000               	dw	0
  5188  006969  0000               	dw	0
  5189  00696B  0000               	dw	0
  5190  00696D  0000               	dw	0
  5191  00696F  0000               	dw	0
  5192  006971  0000               	dw	0
  5193  006973  0000               	dw	0
  5194  006975  0000               	dw	0
  5195  006977  0000               	dw	0
  5196  006979  0000               	dw	0
  5197  00697B  0000               	dw	0
  5198  00697D  0000               	dw	0
  5199  00697F  0000               	dw	0
  5200  006981  0000               	dw	0
  5201  006983  0000               	dw	0
  5202  006985  0000               	dw	0
  5203  006987  0000               	dw	0
  5204  006989  0000               	dw	0
  5205  00698B  0000               	dw	0
  5206  00698D  0000               	dw	0
  5207  00698F  0000               	dw	0
  5208  006991  0000               	dw	0
  5209  006993  0000               	dw	0
  5210  006995  0000               	dw	0
  5211  006997  0000               	dw	0
  5212  006999  0000               	dw	0
  5213  00699B  0000               	dw	0
  5214  00699D  0000               	dw	0
  5215  00699F  0000               	dw	0
  5216  0069A1  0000               	dw	0
  5217  0069A3  0000               	dw	0
  5218  0069A5  0000               	dw	0
  5219  0069A7  0000               	dw	0
  5220  0069A9  0000               	dw	0
  5221  0069AB  0000               	dw	0
  5222  0069AD  0000               	dw	0
  5223  0069AF  0000               	dw	0
  5224  0069B1  0000               	dw	0
  5225  0069B3  0000               	dw	0
  5226  0069B5  0000               	dw	0
  5227  0069B7  0000               	dw	0
  5228  0069B9  0000               	dw	0
  5229  0069BB  0000               	dw	0
  5230  0069BD  0000               	dw	0
  5231  0069BF  0000               	dw	0
  5232  0069C1  0000               	dw	0
  5233  0069C3  0000               	dw	0
  5234  0069C5  0000               	dw	0
  5235  0069C7  0000               	dw	0
  5236  0069C9  0000               	dw	0
  5237  0069CB  0000               	dw	0
  5238  0069CD  0000               	dw	0
  5239  0069CF  0000               	dw	0
  5240  0069D1  0000               	dw	0
  5241  0069D3  0000               	dw	0
  5242  0069D5  0000               	dw	0
  5243  0069D7  0000               	dw	0
  5244  0069D9  0000               	dw	0
  5245  0069DB  0000               	dw	0
  5246  0069DD  0000               	dw	0
  5247  0069DF  0000               	dw	0
  5248  0069E1  0000               	dw	0
  5249  0069E3  0000               	dw	0
  5250  0069E5  0000               	dw	0
  5251  0069E7  0000               	dw	0
  5252  0069E9  0000               	dw	0
  5253  0069EB  0000               	dw	0
  5254  0069ED  0000               	dw	0
  5255  0069EF  0000               	dw	0
  5256  0069F1  0000               	dw	0
  5257  0069F3  0000               	dw	0
  5258  0069F5  0000               	dw	0
  5259  0069F7  0000               	dw	0
  5260  0069F9  0000               	dw	0
  5261  0069FB  0000               	dw	0
  5262  0069FD  0000               	dw	0
  5263  0069FF  0000               	dw	0
  5264  006A01  0000               	dw	0
  5265  006A03  0000               	dw	0
  5266  006A05  0000               	dw	0
  5267  006A07  0000               	dw	0
  5268  006A09  0000               	dw	0
  5269  006A0B  0000               	dw	0
  5270  006A0D  0000               	dw	0
  5271  006A0F  0000               	dw	0
  5272  006A11  0000               	dw	0
  5273  006A13  0000               	dw	0
  5274  006A15  0000               	dw	0
  5275  006A17  0000               	dw	0
  5276  006A19  0000               	dw	0
  5277  006A1B  0000               	dw	0
  5278  006A1D  0000               	dw	0
  5279  006A1F  0000               	dw	0
  5280  006A21  0000               	dw	0
  5281  006A23  0000               	dw	0
  5282  006A25  0000               	dw	0
  5283  006A27  0000               	dw	0
  5284  006A29  0000               	dw	0
  5285  006A2B  0000               	dw	0
  5286  006A2D  0000               	dw	0
  5287  006A2F  0000               	dw	0
  5288  006A31  0000               	dw	0
  5289  006A33  0000               	dw	0
  5290  006A35  0000               	dw	0
  5291  006A37  0000               	dw	0
  5292  006A39  0000               	dw	0
  5293  006A3B  0000               	dw	0
  5294  006A3D  0000               	dw	0
  5295  006A3F  0000               	dw	0
  5296  006A41  0000               	dw	0
  5297  006A43  0000               	dw	0
  5298  006A45  0000               	dw	0
  5299  006A47  0000               	dw	0
  5300  006A49  0000               	dw	0
  5301  006A4B  0000               	dw	0
  5302  006A4D  0000               	dw	0
  5303  006A4F  0000               	dw	0
  5304  006A51  0000               	dw	0
  5305  006A53  0000               	dw	0
  5306  006A55  0000               	dw	0
  5307  006A57  0000               	dw	0
  5308  006A59  0000               	dw	0
  5309  006A5B  0000               	dw	0
  5310  006A5D  0000               	dw	0
  5311  006A5F  0000               	dw	0
  5312  006A61  0000               	dw	0
  5313  006A63  0000               	dw	0
  5314  006A65  0000               	dw	0
  5315  006A67  0000               	dw	0
  5316  006A69  0000               	dw	0
  5317  006A6B  0000               	dw	0
  5318  006A6D  0000               	dw	0
  5319  006A6F  0000               	dw	0
  5320  006A71  0000               	dw	0
  5321  006A73  0000               	dw	0
  5322  006A75  0000               	dw	0
  5323  006A77  0000               	dw	0
  5324  006A79  0000               	dw	0
  5325  006A7B  0000               	dw	0
  5326  006A7D  0000               	dw	0
  5327  006A7F  0000               	dw	0
  5328  006A81  0000               	dw	0
  5329  006A83  0000               	dw	0
  5330  006A85  0000               	dw	0
  5331  006A87  0000               	dw	0
  5332  006A89  0000               	dw	0
  5333  006A8B  0000               	dw	0
  5334  006A8D  0000               	dw	0
  5335  006A8F  0000               	dw	0
  5336  006A91  0000               	dw	0
  5337  006A93  0000               	dw	0
  5338  006A95  0000               	dw	0
  5339  006A97  0000               	dw	0
  5340  006A99  0000               	dw	0
  5341  006A9B  0000               	dw	0
  5342  006A9D  0000               	dw	0
  5343  006A9F  0000               	dw	0
  5344  006AA1  0000               	dw	0
  5345  006AA3  0000               	dw	0
  5346  006AA5  0000               	dw	0
  5347  006AA7  0000               	dw	0
  5348  006AA9  0000               	dw	0
  5349  006AAB  0000               	dw	0
  5350  006AAD  0000               	dw	0
  5351  006AAF  0000               	dw	0
  5352  006AB1  0000               	dw	0
  5353  006AB3  0000               	dw	0
  5354  006AB5  0000               	dw	0
  5355  006AB7  0000               	dw	0
  5356  006AB9  0000               	dw	0
  5357  006ABB  0000               	dw	0
  5358  006ABD  0000               	dw	0
  5359  006ABF  0000               	dw	0
  5360  006AC1  0000               	dw	0
  5361  006AC3  0000               	dw	0
  5362  006AC5  0000               	dw	0
  5363  006AC7  0000               	dw	0
  5364  006AC9  0000               	dw	0
  5365  006ACB  0000               	dw	0
  5366  006ACD  0000               	dw	0
  5367  006ACF  0000               	dw	0
  5368  006AD1  0000               	dw	0
  5369  006AD3  0000               	dw	0
  5370  006AD5  0000               	dw	0
  5371  006AD7  0000               	dw	0
  5372  006AD9  0000               	dw	0
  5373  006ADB  0000               	dw	0
  5374  006ADD  0000               	dw	0
  5375  006ADF  0000               	dw	0
  5376  006AE1  0000               	dw	0
  5377  006AE3  0000               	dw	0
  5378  006AE5  0000               	dw	0
  5379  006AE7  0000               	dw	0
  5380  006AE9  0000               	dw	0
  5381  006AEB  0000               	dw	0
  5382  006AED  0000               	dw	0
  5383  006AEF  0000               	dw	0
  5384  006AF1  0000               	dw	0
  5385  006AF3  0000               	dw	0
  5386  006AF5  0000               	dw	0
  5387  006AF7  0000               	dw	0
  5388  006AF9  0000               	dw	0
  5389  006AFB  0000               	dw	0
  5390  006AFD  0000               	dw	0
  5391  006AFF  0000               	dw	0
  5392  006B01  0000               	dw	0
  5393  006B03  0000               	dw	0
  5394  006B05  0000               	dw	0
  5395  006B07  0000               	dw	0
  5396  006B09  0000               	dw	0
  5397  006B0B  0000               	dw	0
  5398  006B0D  0000               	dw	0
  5399  006B0F  0000               	dw	0
  5400  006B11  0000               	dw	0
  5401  006B13  0000               	dw	0
  5402  006B15  0000               	dw	0
  5403  006B17  0000               	dw	0
  5404  006B19  0000               	dw	0
  5405  006B1B  0000               	dw	0
  5406  006B1D  0000               	dw	0
  5407  006B1F  0000               	dw	0
  5408  006B21  0000               	dw	0
  5409  006B23  0000               	dw	0
  5410  006B25  0000               	dw	0
  5411  006B27  0000               	dw	0
  5412  006B29  0000               	dw	0
  5413  006B2B  0000               	dw	0
  5414  006B2D  0000               	dw	0
  5415  006B2F  0000               	dw	0
  5416  006B31  0000               	dw	0
  5417  006B33  0000               	dw	0
  5418  006B35  0000               	dw	0
  5419  006B37  0000               	dw	0
  5420  006B39  0000               	dw	0
  5421  006B3B  0000               	dw	0
  5422  006B3D  0000               	dw	0
  5423  006B3F  0000               	dw	0
  5424  006B41  0000               	dw	0
  5425  006B43  0000               	dw	0
  5426  006B45  0000               	dw	0
  5427  006B47  0000               	dw	0
  5428  006B49  0000               	dw	0
  5429  006B4B  0000               	dw	0
  5430  006B4D  0000               	dw	0
  5431  006B4F  0000               	dw	0
  5432  006B51  0000               	dw	0
  5433  006B53  0000               	dw	0
  5434  006B55  0000               	dw	0
  5435  006B57  0000               	dw	0
  5436  006B59  0000               	dw	0
  5437  006B5B  0000               	dw	0
  5438  006B5D  0000               	dw	0
  5439  006B5F  0000               	dw	0
  5440  006B61  0000               	dw	0
  5441  006B63  0000               	dw	0
  5442  006B65  0000               	dw	0
  5443  006B67  0000               	dw	0
  5444  006B69  0000               	dw	0
  5445  006B6B  0000               	dw	0
  5446  006B6D  0000               	dw	0
  5447  006B6F  0000               	dw	0
  5448  006B71  0000               	dw	0
  5449  006B73  0000               	dw	0
  5450  006B75  0000               	dw	0
  5451  006B77  0000               	dw	0
  5452  006B79  0000               	dw	0
  5453  006B7B  0000               	dw	0
  5454  006B7D  0000               	dw	0
  5455  006B7F  0000               	dw	0
  5456  006B81  0000               	dw	0
  5457  006B83  0000               	dw	0
  5458  006B85  0000               	dw	0
  5459  006B87  0000               	dw	0
  5460  006B89  0000               	dw	0
  5461  006B8B  0000               	dw	0
  5462  006B8D  0000               	dw	0
  5463  006B8F  0000               	dw	0
  5464  006B91  0000               	dw	0
  5465  006B93  0000               	dw	0
  5466  006B95  0000               	dw	0
  5467  006B97  0000               	dw	0
  5468  006B99  0000               	dw	0
  5469  006B9B  0000               	dw	0
  5470  006B9D  0000               	dw	0
  5471  006B9F  0000               	dw	0
  5472  006BA1  0000               	dw	0
  5473  006BA3  0000               	dw	0
  5474  006BA5  0000               	dw	0
  5475  006BA7  0000               	dw	0
  5476  006BA9  0000               	dw	0
  5477  006BAB  0000               	dw	0
  5478  006BAD  0000               	dw	0
  5479  006BAF  0000               	dw	0
  5480  006BB1  0000               	dw	0
  5481  006BB3  0000               	dw	0
  5482  006BB5  0000               	dw	0
  5483  006BB7  0000               	dw	0
  5484  006BB9  0000               	dw	0
  5485  006BBB  0000               	dw	0
  5486  006BBD  0000               	dw	0
  5487  006BBF  0000               	dw	0
  5488  006BC1  0000               	dw	0
  5489  006BC3  0000               	dw	0
  5490  006BC5  0000               	dw	0
  5491  006BC7  0000               	dw	0
  5492  006BC9  0000               	dw	0
  5493  006BCB  0000               	dw	0
  5494  006BCD  0000               	dw	0
  5495  006BCF  0000               	dw	0
  5496  006BD1  0000               	dw	0
  5497  006BD3  0000               	dw	0
  5498  006BD5  0000               	dw	0
  5499  006BD7  0000               	dw	0
  5500  006BD9  0000               	dw	0
  5501  006BDB  0000               	dw	0
  5502  006BDD  0000               	dw	0
  5503  006BDF  0000               	dw	0
  5504  006BE1  0000               	dw	0
  5505  006BE3  0000               	dw	0
  5506  006BE5  0000               	dw	0
  5507  006BE7  0000               	dw	0
  5508  006BE9  0000               	dw	0
  5509  006BEB  0000               	dw	0
  5510  006BED  0000               	dw	0
  5511  006BEF  0000               	dw	0
  5512  006BF1  0000               	dw	0
  5513  006BF3  0000               	dw	0
  5514  006BF5  0000               	dw	0
  5515  006BF7  0000               	dw	0
  5516  006BF9  0000               	dw	0
  5517  006BFB  0000               	dw	0
  5518  006BFD  0000               	dw	0
  5519  006BFF  0000               	dw	0
  5520  006C01  0000               	dw	0
  5521  006C03  0000               	dw	0
  5522  006C05  0000               	dw	0
  5523  006C07  0000               	dw	0
  5524  006C09  0000               	dw	0
  5525  006C0B  0000               	dw	0
  5526  006C0D  0000               	dw	0
  5527  006C0F  0000               	dw	0
  5528  006C11  0000               	dw	0
  5529  006C13  0000               	dw	0
  5530  006C15  0000               	dw	0
  5531  006C17  0000               	dw	0
  5532  006C19  0000               	dw	0
  5533  006C1B  0000               	dw	0
  5534  006C1D  0000               	dw	0
  5535  006C1F  0000               	dw	0
  5536  006C21  0000               	dw	0
  5537  006C23  0000               	dw	0
  5538  006C25  0000               	dw	0
  5539  006C27  0000               	dw	0
  5540  006C29  0000               	dw	0
  5541  006C2B  0000               	dw	0
  5542  006C2D  0000               	dw	0
  5543  006C2F  0000               	dw	0
  5544  006C31  0000               	dw	0
  5545  006C33  0000               	dw	0
  5546  006C35  0000               	dw	0
  5547  006C37  0000               	dw	0
  5548  006C39  0000               	dw	0
  5549  006C3B  0000               	dw	0
  5550  006C3D  0000               	dw	0
  5551  006C3F  0000               	dw	0
  5552  006C41  0000               	dw	0
  5553  006C43  0000               	dw	0
  5554  006C45  0000               	dw	0
  5555  006C47  0000               	dw	0
  5556  006C49  0000               	dw	0
  5557  006C4B  0000               	dw	0
  5558  006C4D  0000               	dw	0
  5559  006C4F  0000               	dw	0
  5560  006C51  0000               	dw	0
  5561  006C53  0000               	dw	0
  5562  006C55  0000               	dw	0
  5563  006C57  0000               	dw	0
  5564  006C59  0000               	dw	0
  5565  006C5B  0000               	dw	0
  5566  006C5D  0000               	dw	0
  5567  006C5F  0000               	dw	0
  5568  006C61  0000               	dw	0
  5569  006C63  0000               	dw	0
  5570  006C65  0000               	dw	0
  5571  006C67  0000               	dw	0
  5572  006C69  0000               	dw	0
  5573  006C6B  0000               	dw	0
  5574  006C6D  0000               	dw	0
  5575  006C6F  0000               	dw	0
  5576  006C71  0000               	dw	0
  5577  006C73  0000               	dw	0
  5578  006C75  0000               	dw	0
  5579  006C77  0000               	dw	0
  5580  006C79  0000               	dw	0
  5581  006C7B  0000               	dw	0
  5582  006C7D  0000               	dw	0
  5583  006C7F  0000               	dw	0
  5584  006C81  0000               	dw	0
  5585  006C83  0000               	dw	0
  5586  006C85  0000               	dw	0
  5587  006C87  0000               	dw	0
  5588  006C89  0000               	dw	0
  5589  006C8B  0000               	dw	0
  5590  006C8D  0000               	dw	0
  5591  006C8F  0000               	dw	0
  5592  006C91  0000               	dw	0
  5593  006C93  0000               	dw	0
  5594  006C95  0000               	dw	0
  5595  006C97  0000               	dw	0
  5596  006C99  0000               	dw	0
  5597  006C9B  0000               	dw	0
  5598  006C9D  0000               	dw	0
  5599  006C9F  0000               	dw	0
  5600  006CA1  0000               	dw	0
  5601  006CA3  0000               	dw	0
  5602  006CA5  0000               	dw	0
  5603  006CA7  0000               	dw	0
  5604  006CA9  0000               	dw	0
  5605  006CAB  0000               	dw	0
  5606  006CAD  0000               	dw	0
  5607  006CAF  0000               	dw	0
  5608  006CB1  0000               	dw	0
  5609  006CB3  0000               	dw	0
  5610  006CB5  0000               	dw	0
  5611  006CB7  0000               	dw	0
  5612  006CB9  0000               	dw	0
  5613  006CBB  0000               	dw	0
  5614  006CBD  0000               	dw	0
  5615  006CBF  0000               	dw	0
  5616  006CC1  0000               	dw	0
  5617  006CC3  0000               	dw	0
  5618  006CC5  0000               	dw	0
  5619  006CC7  0000               	dw	0
  5620  006CC9  0000               	dw	0
  5621  006CCB  0000               	dw	0
  5622  006CCD  0000               	dw	0
  5623  006CCF  0000               	dw	0
  5624  006CD1  0000               	dw	0
  5625  006CD3  0000               	dw	0
  5626  006CD5  0000               	dw	0
  5627  006CD7  0000               	dw	0
  5628  006CD9  0000               	dw	0
  5629  006CDB  0000               	dw	0
  5630  006CDD  0000               	dw	0
  5631  006CDF  0000               	dw	0
  5632  006CE1  0000               	dw	0
  5633  006CE3  0000               	dw	0
  5634  006CE5  0000               	dw	0
  5635  006CE7  0000               	dw	0
  5636  006CE9  0000               	dw	0
  5637  006CEB  0000               	dw	0
  5638  006CED  0000               	dw	0
  5639  006CEF  0000               	dw	0
  5640  006CF1  0000               	dw	0
  5641  006CF3  0000               	dw	0
  5642  006CF5  0000               	dw	0
  5643  006CF7  0000               	dw	0
  5644  006CF9  0000               	dw	0
  5645  006CFB  0000               	dw	0
  5646  006CFD  0000               	dw	0
  5647  006CFF  0000               	dw	0
  5648  006D01  0000               	dw	0
  5649  006D03  0000               	dw	0
  5650  006D05  0000               	dw	0
  5651  006D07  0000               	dw	0
  5652  006D09  0000               	dw	0
  5653  006D0B  0000               	dw	0
  5654  006D0D  0000               	dw	0
  5655  006D0F  0000               	dw	0
  5656  006D11  0000               	dw	0
  5657  006D13  0000               	dw	0
  5658  006D15  0000               	dw	0
  5659  006D17  0000               	dw	0
  5660  006D19  0000               	dw	0
  5661  006D1B  0000               	dw	0
  5662  006D1D  0000               	dw	0
  5663  006D1F  0000               	dw	0
  5664  006D21  0000               	dw	0
  5665  006D23  0000               	dw	0
  5666  006D25  0000               	dw	0
  5667  006D27  0000               	dw	0
  5668  006D29  0000               	dw	0
  5669  006D2B  0000               	dw	0
  5670  006D2D  0000               	dw	0
  5671  006D2F  0000               	dw	0
  5672  006D31  0000               	dw	0
  5673  006D33  0000               	dw	0
  5674  006D35  0000               	dw	0
  5675  006D37  0000               	dw	0
  5676  006D39  0000               	dw	0
  5677  006D3B  0000               	dw	0
  5678  006D3D  0000               	dw	0
  5679  006D3F  0000               	dw	0
  5680  006D41  0000               	dw	0
  5681  006D43  0000               	dw	0
  5682  006D45  0000               	dw	0
  5683  006D47  0000               	dw	0
  5684  006D49  0000               	dw	0
  5685  006D4B  0000               	dw	0
  5686  006D4D  0000               	dw	0
  5687  006D4F  0000               	dw	0
  5688  006D51  0000               	dw	0
  5689  006D53  0000               	dw	0
  5690  006D55  0000               	dw	0
  5691  006D57  0000               	dw	0
  5692  006D59  0000               	dw	0
  5693  006D5B  0000               	dw	0
  5694  006D5D  0000               	dw	0
  5695  006D5F  0000               	dw	0
  5696  006D61  0000               	dw	0
  5697  006D63  0000               	dw	0
  5698  006D65  0000               	dw	0
  5699  006D67  0000               	dw	0
  5700  006D69  0000               	dw	0
  5701  006D6B  0000               	dw	0
  5702  006D6D  0000               	dw	0
  5703  006D6F  0000               	dw	0
  5704  006D71  0000               	dw	0
  5705  006D73  0000               	dw	0
  5706  006D75  0000               	dw	0
  5707  006D77  0000               	dw	0
  5708  006D79  0000               	dw	0
  5709  006D7B  0000               	dw	0
  5710  006D7D  0000               	dw	0
  5711  006D7F  0000               	dw	0
  5712  006D81  0000               	dw	0
  5713  006D83  0000               	dw	0
  5714  006D85  0000               	dw	0
  5715  006D87  0000               	dw	0
  5716  006D89  0000               	dw	0
  5717  006D8B  0000               	dw	0
  5718  006D8D  0000               	dw	0
  5719  006D8F  0000               	dw	0
  5720  006D91  0000               	dw	0
  5721  006D93  0000               	dw	0
  5722  006D95  0000               	dw	0
  5723  006D97  0000               	dw	0
  5724  006D99  0000               	dw	0
  5725  006D9B  0000               	dw	0
  5726  006D9D  0000               	dw	0
  5727  006D9F  0000               	dw	0
  5728  006DA1  0000               	dw	0
  5729  006DA3  0000               	dw	0
  5730  006DA5  0000               	dw	0
  5731  006DA7  0000               	dw	0
  5732  006DA9  0000               	dw	0
  5733  006DAB  0000               	dw	0
  5734  006DAD  0000               	dw	0
  5735  006DAF  0000               	dw	0
  5736  006DB1  0000               	dw	0
  5737  006DB3  0000               	dw	0
  5738  006DB5  0000               	dw	0
  5739  006DB7  0000               	dw	0
  5740  006DB9  0000               	dw	0
  5741  006DBB  0000               	dw	0
  5742  006DBD  0000               	dw	0
  5743  006DBF  0000               	dw	0
  5744  006DC1  0000               	dw	0
  5745  006DC3  0000               	dw	0
  5746  006DC5  0000               	dw	0
  5747  006DC7  0000               	dw	0
  5748  006DC9  0000               	dw	0
  5749  006DCB  0000               	dw	0
  5750  006DCD  0000               	dw	0
  5751  006DCF  0000               	dw	0
  5752  006DD1  0000               	dw	0
  5753  006DD3  0000               	dw	0
  5754  006DD5  0000               	dw	0
  5755  006DD7  0000               	dw	0
  5756  006DD9  0000               	dw	0
  5757  006DDB  0000               	dw	0
  5758  006DDD  0000               	dw	0
  5759  006DDF  0000               	dw	0
  5760  006DE1  0000               	dw	0
  5761  006DE3  0000               	dw	0
  5762  006DE5  0000               	dw	0
  5763  006DE7  0000               	dw	0
  5764  006DE9  0000               	dw	0
  5765  006DEB  0000               	dw	0
  5766  006DED  0000               	dw	0
  5767  006DEF  0000               	dw	0
  5768  006DF1  0000               	dw	0
  5769  006DF3  0000               	dw	0
  5770  006DF5  0000               	dw	0
  5771  006DF7  0000               	dw	0
  5772  006DF9  0000               	dw	0
  5773  006DFB  0000               	dw	0
  5774  006DFD  0000               	dw	0
  5775  006DFF  0000               	dw	0
  5776  006E01  0000               	dw	0
  5777  006E03  0000               	dw	0
  5778  006E05  0000               	dw	0
  5779  006E07  0000               	dw	0
  5780  006E09  0000               	dw	0
  5781  006E0B  0000               	dw	0
  5782  006E0D  0000               	dw	0
  5783  006E0F  0000               	dw	0
  5784  006E11  0000               	dw	0
  5785  006E13  0000               	dw	0
  5786  006E15  0000               	dw	0
  5787  006E17  0000               	dw	0
  5788  006E19  0000               	dw	0
  5789  006E1B  0000               	dw	0
  5790  006E1D  0000               	dw	0
  5791  006E1F  0000               	dw	0
  5792  006E21  0000               	dw	0
  5793  006E23  0000               	dw	0
  5794  006E25  0000               	dw	0
  5795  006E27  0000               	dw	0
  5796  006E29  0000               	dw	0
  5797  006E2B  0000               	dw	0
  5798  006E2D  0000               	dw	0
  5799  006E2F  0000               	dw	0
  5800  006E31  0000               	dw	0
  5801  006E33  0000               	dw	0
  5802  006E35  0000               	dw	0
  5803  006E37  0000               	dw	0
  5804  006E39  0000               	dw	0
  5805  006E3B  0000               	dw	0
  5806  006E3D  0000               	dw	0
  5807  006E3F  0000               	dw	0
  5808  006E41  0000               	dw	0
  5809  006E43  0000               	dw	0
  5810  006E45  0000               	dw	0
  5811  006E47  0000               	dw	0
  5812  006E49  0000               	dw	0
  5813  006E4B  0000               	dw	0
  5814  006E4D  0000               	dw	0
  5815  006E4F  0000               	dw	0
  5816  006E51  0000               	dw	0
  5817  006E53  0000               	dw	0
  5818  006E55  0000               	dw	0
  5819  006E57  0000               	dw	0
  5820  006E59  0000               	dw	0
  5821  006E5B  0000               	dw	0
  5822  006E5D  0000               	dw	0
  5823  006E5F  0000               	dw	0
  5824  006E61  0000               	dw	0
  5825  006E63  0000               	dw	0
  5826  006E65  0000               	dw	0
  5827  006E67  0000               	dw	0
  5828  006E69  0000               	dw	0
  5829  006E6B  0000               	dw	0
  5830  006E6D  0000               	dw	0
  5831  006E6F  0000               	dw	0
  5832  006E71  0000               	dw	0
  5833  006E73  0000               	dw	0
  5834  006E75  0000               	dw	0
  5835  006E77  0000               	dw	0
  5836  006E79  0000               	dw	0
  5837  006E7B  0000               	dw	0
  5838  006E7D  0000               	dw	0
  5839  006E7F  0000               	dw	0
  5840  006E81  0000               	dw	0
  5841  006E83  0000               	dw	0
  5842  006E85  0000               	dw	0
  5843  006E87  0000               	dw	0
  5844  006E89  0000               	dw	0
  5845  006E8B  0000               	dw	0
  5846  006E8D  0000               	dw	0
  5847  006E8F  0000               	dw	0
  5848  006E91  0000               	dw	0
  5849  006E93  0000               	dw	0
  5850  006E95  0000               	dw	0
  5851  006E97  0000               	dw	0
  5852  006E99  0000               	dw	0
  5853  006E9B  0000               	dw	0
  5854  006E9D  0000               	dw	0
  5855  006E9F  0000               	dw	0
  5856  006EA1  0000               	dw	0
  5857  006EA3  0000               	dw	0
  5858  006EA5  0000               	dw	0
  5859  006EA7  0000               	dw	0
  5860  006EA9  0000               	dw	0
  5861  006EAB  0000               	dw	0
  5862  006EAD  0000               	dw	0
  5863  006EAF  0000               	dw	0
  5864  006EB1  0000               	dw	0
  5865  006EB3  0000               	dw	0
  5866  006EB5  0000               	dw	0
  5867  006EB7  0000               	dw	0
  5868  006EB9  0000               	dw	0
  5869  006EBB  0000               	dw	0
  5870  006EBD  0000               	dw	0
  5871  006EBF  0000               	dw	0
  5872  006EC1  0000               	dw	0
  5873  006EC3  0000               	dw	0
  5874  006EC5  0000               	dw	0
  5875  006EC7  0000               	dw	0
  5876  006EC9  0000               	dw	0
  5877  006ECB  0000               	dw	0
  5878  006ECD  0000               	dw	0
  5879  006ECF  0000               	dw	0
  5880  006ED1  0000               	dw	0
  5881  006ED3  0000               	dw	0
  5882  006ED5  0000               	dw	0
  5883  006ED7  0000               	dw	0
  5884  006ED9  0000               	dw	0
  5885  006EDB  0000               	dw	0
  5886  006EDD  0000               	dw	0
  5887  006EDF  0000               	dw	0
  5888  006EE1  0000               	dw	0
  5889  006EE3  0000               	dw	0
  5890  006EE5  0000               	dw	0
  5891  006EE7  0000               	dw	0
  5892  006EE9  0000               	dw	0
  5893  006EEB  0000               	dw	0
  5894  006EED  0000               	dw	0
  5895  006EEF  0000               	dw	0
  5896  006EF1  0000               	dw	0
  5897  006EF3  0000               	dw	0
  5898  006EF5  0000               	dw	0
  5899  006EF7  0000               	dw	0
  5900  006EF9  0000               	dw	0
  5901  006EFB  0000               	dw	0
  5902  006EFD  0000               	dw	0
  5903  006EFF  0000               	dw	0
  5904  006F01  0000               	dw	0
  5905  006F03  0000               	dw	0
  5906  006F05  0000               	dw	0
  5907  006F07  0000               	dw	0
  5908  006F09  0000               	dw	0
  5909  006F0B  0000               	dw	0
  5910  006F0D  0000               	dw	0
  5911  006F0F  0000               	dw	0
  5912  006F11  0000               	dw	0
  5913  006F13  0000               	dw	0
  5914  006F15  0000               	dw	0
  5915  006F17  0000               	dw	0
  5916  006F19  0000               	dw	0
  5917  006F1B  0000               	dw	0
  5918  006F1D  0000               	dw	0
  5919  006F1F  0000               	dw	0
  5920  006F21  0000               	dw	0
  5921  006F23  0000               	dw	0
  5922  006F25  0000               	dw	0
  5923  006F27  0000               	dw	0
  5924  006F29  0000               	dw	0
  5925  006F2B  0000               	dw	0
  5926  006F2D  0000               	dw	0
  5927  006F2F  0000               	dw	0
  5928  006F31  0000               	dw	0
  5929  006F33  0000               	dw	0
  5930  006F35  0000               	dw	0
  5931  006F37  0000               	dw	0
  5932  006F39  0000               	dw	0
  5933  006F3B  0000               	dw	0
  5934  006F3D  0000               	dw	0
  5935  006F3F  0000               	dw	0
  5936  006F41  0000               	dw	0
  5937  006F43  0000               	dw	0
  5938  006F45  0000               	dw	0
  5939  006F47  0000               	dw	0
  5940  006F49  0000               	dw	0
  5941  006F4B  0000               	dw	0
  5942  006F4D  0000               	dw	0
  5943  006F4F  0000               	dw	0
  5944  006F51  0000               	dw	0
  5945  006F53  0000               	dw	0
  5946  006F55  0000               	dw	0
  5947  006F57  0000               	dw	0
  5948  006F59  0000               	dw	0
  5949  006F5B  0000               	dw	0
  5950  006F5D  0000               	dw	0
  5951  006F5F  0000               	dw	0
  5952  006F61  0000               	dw	0
  5953  006F63  0000               	dw	0
  5954  006F65  0000               	dw	0
  5955  006F67  0000               	dw	0
  5956  006F69  0000               	dw	0
  5957  006F6B  0000               	dw	0
  5958  006F6D  0000               	dw	0
  5959  006F6F  0000               	dw	0
  5960  006F71  0000               	dw	0
  5961  006F73  0000               	dw	0
  5962  006F75  0000               	dw	0
  5963  006F77  0000               	dw	0
  5964  006F79  0000               	dw	0
  5965  006F7B  0000               	dw	0
  5966  006F7D  0000               	dw	0
  5967  006F7F  0000               	dw	0
  5968  006F81  0000               	dw	0
  5969  006F83  0000               	dw	0
  5970  006F85  0000               	dw	0
  5971  006F87  0000               	dw	0
  5972  006F89  0000               	dw	0
  5973  006F8B  0000               	dw	0
  5974  006F8D  0000               	dw	0
  5975  006F8F  0000               	dw	0
  5976  006F91  0000               	dw	0
  5977  006F93  0000               	dw	0
  5978  006F95  0000               	dw	0
  5979  006F97  0000               	dw	0
  5980  006F99  0000               	dw	0
  5981  006F9B  0000               	dw	0
  5982  006F9D  0000               	dw	0
  5983  006F9F  0000               	dw	0
  5984  006FA1  0000               	dw	0
  5985  006FA3  0000               	dw	0
  5986  006FA5  0000               	dw	0
  5987  006FA7  0000               	dw	0
  5988  006FA9  0000               	dw	0
  5989  006FAB  0000               	dw	0
  5990  006FAD  0000               	dw	0
  5991  006FAF  0000               	dw	0
  5992  006FB1  0000               	dw	0
  5993  006FB3  0000               	dw	0
  5994  006FB5  0000               	dw	0
  5995  006FB7  0000               	dw	0
  5996  006FB9  0000               	dw	0
  5997  006FBB  0000               	dw	0
  5998  006FBD  0000               	dw	0
  5999  006FBF  0000               	dw	0
  6000  006FC1  0000               	dw	0
  6001  006FC3  0000               	dw	0
  6002  006FC5  0000               	dw	0
  6003  006FC7  0000               	dw	0
  6004  006FC9  0000               	dw	0
  6005  006FCB  0000               	dw	0
  6006  006FCD  0000               	dw	0
  6007  006FCF  0000               	dw	0
  6008  006FD1  0000               	dw	0
  6009  006FD3  0000               	dw	0
  6010  006FD5  0000               	dw	0
  6011  006FD7  0000               	dw	0
  6012  006FD9  0000               	dw	0
  6013  006FDB  0000               	dw	0
  6014  006FDD  0000               	dw	0
  6015  006FDF  0000               	dw	0
  6016  006FE1  0000               	dw	0
  6017  006FE3  0000               	dw	0
  6018  006FE5  0000               	dw	0
  6019  006FE7  0000               	dw	0
  6020  006FE9  0000               	dw	0
  6021  006FEB  0000               	dw	0
  6022  006FED  0000               	dw	0
  6023  006FEF  0000               	dw	0
  6024  006FF1  0000               	dw	0
  6025  006FF3  0000               	dw	0
  6026  006FF5  0000               	dw	0
  6027  006FF7  0000               	dw	0
  6028  006FF9  0000               	dw	0
  6029  006FFB  0000               	dw	0
  6030  006FFD  0000               	dw	0
  6031  006FFF  0000               	dw	0
  6032  007001  0000               	dw	0
  6033  007003  0000               	dw	0
  6034  007005  0000               	dw	0
  6035  007007  0000               	dw	0
  6036  007009  0000               	dw	0
  6037  00700B  0000               	dw	0
  6038  00700D  0000               	dw	0
  6039  00700F  0000               	dw	0
  6040  007011  0000               	dw	0
  6041  007013  0000               	dw	0
  6042  007015  0000               	dw	0
  6043  007017  0000               	dw	0
  6044  007019  0000               	dw	0
  6045  00701B  0000               	dw	0
  6046  00701D  0000               	dw	0
  6047  00701F  0000               	dw	0
  6048  007021  0000               	dw	0
  6049  007023  0000               	dw	0
  6050  007025  0000               	dw	0
  6051  007027  0000               	dw	0
  6052  007029  0000               	dw	0
  6053  00702B  0000               	dw	0
  6054  00702D  0000               	dw	0
  6055  00702F  0000               	dw	0
  6056  007031  0000               	dw	0
  6057  007033  0000               	dw	0
  6058  007035  0000               	dw	0
  6059  007037  0000               	dw	0
  6060  007039  0000               	dw	0
  6061  00703B  0000               	dw	0
  6062  00703D  0000               	dw	0
  6063  00703F  0000               	dw	0
  6064  007041  0000               	dw	0
  6065  007043  0000               	dw	0
  6066  007045  0000               	dw	0
  6067  007047  0000               	dw	0
  6068  007049  0000               	dw	0
  6069  00704B  0000               	dw	0
  6070  00704D  0000               	dw	0
  6071  00704F  0000               	dw	0
  6072  007051  0000               	dw	0
  6073  007053  0000               	dw	0
  6074  007055  0000               	dw	0
  6075  007057  0000               	dw	0
  6076  007059  0000               	dw	0
  6077  00705B  0000               	dw	0
  6078  00705D  0000               	dw	0
  6079  00705F  0000               	dw	0
  6080  007061  0000               	dw	0
  6081  007063  0000               	dw	0
  6082  007065  0000               	dw	0
  6083  007067  0000               	dw	0
  6084  007069  0000               	dw	0
  6085  00706B  0000               	dw	0
  6086  00706D  0000               	dw	0
  6087  00706F  0000               	dw	0
  6088  007071  0000               	dw	0
  6089  007073  0000               	dw	0
  6090  007075  0000               	dw	0
  6091  007077  0000               	dw	0
  6092  007079  0000               	dw	0
  6093  00707B  0000               	dw	0
  6094  00707D  0000               	dw	0
  6095  00707F  0000               	dw	0
  6096  007081  0000               	dw	0
  6097  007083  0000               	dw	0
  6098  007085  0000               	dw	0
  6099  007087  0000               	dw	0
  6100  007089  0000               	dw	0
  6101  00708B  0000               	dw	0
  6102  00708D  0000               	dw	0
  6103  00708F  0000               	dw	0
  6104  007091  0000               	dw	0
  6105  007093  0000               	dw	0
  6106  007095  0000               	dw	0
  6107  007097  0000               	dw	0
  6108  007099  0000               	dw	0
  6109  00709B  0000               	dw	0
  6110  00709D  0000               	dw	0
  6111  00709F  0000               	dw	0
  6112  0070A1  0000               	dw	0
  6113  0070A3  0000               	dw	0
  6114  0070A5  0000               	dw	0
  6115  0070A7  0000               	dw	0
  6116  0070A9  0000               	dw	0
  6117  0070AB  0000               	dw	0
  6118  0070AD  0000               	dw	0
  6119  0070AF  0000               	dw	0
  6120  0070B1  0000               	dw	0
  6121  0070B3  0000               	dw	0
  6122  0070B5  0000               	dw	0
  6123  0070B7  0000               	dw	0
  6124  0070B9  0000               	dw	0
  6125  0070BB  0000               	dw	0
  6126  0070BD  0000               	dw	0
  6127  0070BF  0000               	dw	0
  6128  0070C1  0000               	dw	0
  6129  0070C3  0000               	dw	0
  6130  0070C5  0000               	dw	0
  6131  0070C7  0000               	dw	0
  6132  0070C9  0000               	dw	0
  6133  0070CB  0000               	dw	0
  6134  0070CD  0000               	dw	0
  6135  0070CF  0000               	dw	0
  6136  0070D1  0000               	dw	0
  6137  0070D3  0000               	dw	0
  6138  0070D5  0000               	dw	0
  6139  0070D7  0000               	dw	0
  6140  0070D9  0000               	dw	0
  6141  0070DB  0000               	dw	0
  6142  0070DD  0000               	dw	0
  6143  0070DF  0000               	dw	0
  6144  0070E1  0000               	dw	0
  6145  0070E3  0000               	dw	0
  6146  0070E5  0000               	dw	0
  6147  0070E7  0000               	dw	0
  6148  0070E9  0000               	dw	0
  6149  0070EB  0000               	dw	0
  6150  0070ED  0000               	dw	0
  6151  0070EF  0000               	dw	0
  6152  0070F1  0000               	dw	0
  6153  0070F3  0000               	dw	0
  6154  0070F5  0000               	dw	0
  6155  0070F7  0000               	dw	0
  6156  0070F9  0000               	dw	0
  6157  0070FB  0000               	dw	0
  6158  0070FD  0000               	dw	0
  6159  0070FF  0000               	dw	0
  6160  007101  0000               	dw	0
  6161  007103  0000               	dw	0
  6162  007105  0000               	dw	0
  6163  007107  0000               	dw	0
  6164  007109  0000               	dw	0
  6165  00710B  0000               	dw	0
  6166  00710D  0000               	dw	0
  6167  00710F  0000               	dw	0
  6168  007111  0000               	dw	0
  6169  007113  0000               	dw	0
  6170  007115  0000               	dw	0
  6171  007117  0000               	dw	0
  6172  007119  0000               	dw	0
  6173  00711B  0000               	dw	0
  6174  00711D  0000               	dw	0
  6175  00711F  0000               	dw	0
  6176  007121  0000               	dw	0
  6177  007123  0000               	dw	0
  6178  007125  0000               	dw	0
  6179  007127  0000               	dw	0
  6180  007129  0000               	dw	0
  6181  00712B  0000               	dw	0
  6182  00712D  0000               	dw	0
  6183  00712F  0000               	dw	0
  6184  007131  0000               	dw	0
  6185  007133  0000               	dw	0
  6186  007135  0000               	dw	0
  6187  007137  0000               	dw	0
  6188  007139  0000               	dw	0
  6189  00713B  0000               	dw	0
  6190  00713D  0000               	dw	0
  6191  00713F  0000               	dw	0
  6192  007141  0000               	dw	0
  6193  007143  0000               	dw	0
  6194  007145  0000               	dw	0
  6195  007147  0000               	dw	0
  6196  007149  0000               	dw	0
  6197  00714B  0000               	dw	0
  6198  00714D  0000               	dw	0
  6199  00714F  0000               	dw	0
  6200  007151  0000               	dw	0
  6201  007153  0000               	dw	0
  6202  007155  0000               	dw	0
  6203  007157  0000               	dw	0
  6204  007159  0000               	dw	0
  6205  00715B  0000               	dw	0
  6206  00715D  0000               	dw	0
  6207  00715F  0000               	dw	0
  6208  007161  0000               	dw	0
  6209  007163  0000               	dw	0
  6210  007165  0000               	dw	0
  6211  007167  0000               	dw	0
  6212  007169  0000               	dw	0
  6213  00716B  0000               	dw	0
  6214  00716D  0000               	dw	0
  6215  00716F  0000               	dw	0
  6216  007171  0000               	dw	0
  6217  007173  0000               	dw	0
  6218  007175  0000               	dw	0
  6219  007177  0000               	dw	0
  6220  007179  0000               	dw	0
  6221  00717B  0000               	dw	0
  6222  00717D  0000               	dw	0
  6223  00717F  0000               	dw	0
  6224  007181  0000               	dw	0
  6225  007183  0000               	dw	0
  6226  007185  0000               	dw	0
  6227  007187  0000               	dw	0
  6228  007189  0000               	dw	0
  6229  00718B  0000               	dw	0
  6230  00718D  0000               	dw	0
  6231  00718F  0000               	dw	0
  6232  007191  0000               	dw	0
  6233  007193  0000               	dw	0
  6234  007195  0000               	dw	0
  6235  007197  0000               	dw	0
  6236  007199  0000               	dw	0
  6237  00719B  0000               	dw	0
  6238  00719D  0000               	dw	0
  6239  00719F  0000               	dw	0
  6240  0071A1  0000               	dw	0
  6241  0071A3  0000               	dw	0
  6242  0071A5  0000               	dw	0
  6243  0071A7  0000               	dw	0
  6244  0071A9  0000               	dw	0
  6245  0071AB  0000               	dw	0
  6246  0071AD  0000               	dw	0
  6247  0071AF  0000               	dw	0
  6248  0071B1  0000               	dw	0
  6249  0071B3  0000               	dw	0
  6250  0071B5  0000               	dw	0
  6251  0071B7  0000               	dw	0
  6252  0071B9  0000               	dw	0
  6253  0071BB  0000               	dw	0
  6254  0071BD  0000               	dw	0
  6255  0071BF  0000               	dw	0
  6256  0071C1  0000               	dw	0
  6257  0071C3  0000               	dw	0
  6258  0071C5  0000               	dw	0
  6259  0071C7  0000               	dw	0
  6260  0071C9  0000               	dw	0
  6261  0071CB  0000               	dw	0
  6262  0071CD  0000               	dw	0
  6263  0071CF  0000               	dw	0
  6264  0071D1  0000               	dw	0
  6265  0071D3  0000               	dw	0
  6266  0071D5  0000               	dw	0
  6267  0071D7  0000               	dw	0
  6268  0071D9  0000               	dw	0
  6269  0071DB  0000               	dw	0
  6270  0071DD  0000               	dw	0
  6271  0071DF  0000               	dw	0
  6272  0071E1  0000               	dw	0
  6273  0071E3  0000               	dw	0
  6274  0071E5  0000               	dw	0
  6275  0071E7  0000               	dw	0
  6276  0071E9  0000               	dw	0
  6277  0071EB  0000               	dw	0
  6278  0071ED  0000               	dw	0
  6279  0071EF  0000               	dw	0
  6280  0071F1  0000               	dw	0
  6281  0071F3  0000               	dw	0
  6282  0071F5  0000               	dw	0
  6283  0071F7  0000               	dw	0
  6284  0071F9  0000               	dw	0
  6285  0071FB  0000               	dw	0
  6286  0071FD  0000               	dw	0
  6287  0071FF  0000               	dw	0
  6288  007201  0000               	dw	0
  6289  007203  0000               	dw	0
  6290  007205  0000               	dw	0
  6291  007207  0000               	dw	0
  6292  007209  0000               	dw	0
  6293  00720B  0000               	dw	0
  6294  00720D  0000               	dw	0
  6295  00720F  0000               	dw	0
  6296  007211  0000               	dw	0
  6297  007213  0000               	dw	0
  6298  007215  0000               	dw	0
  6299  007217  0000               	dw	0
  6300  007219  0000               	dw	0
  6301  00721B  0000               	dw	0
  6302  00721D  0000               	dw	0
  6303  00721F  0000               	dw	0
  6304  007221  0000               	dw	0
  6305  007223  0000               	dw	0
  6306  007225  0000               	dw	0
  6307  007227  0000               	dw	0
  6308  007229  0000               	dw	0
  6309  00722B  0000               	dw	0
  6310  00722D  0000               	dw	0
  6311  00722F  0000               	dw	0
  6312  007231  0000               	dw	0
  6313  007233  0000               	dw	0
  6314  007235  0000               	dw	0
  6315  007237  0000               	dw	0
  6316  007239  0000               	dw	0
  6317  00723B  0000               	dw	0
  6318  00723D  0000               	dw	0
  6319  00723F  0000               	dw	0
  6320  007241  0000               	dw	0
  6321  007243  0000               	dw	0
  6322  007245  0000               	dw	0
  6323  007247  0000               	dw	0
  6324  007249  0000               	dw	0
  6325  00724B  0000               	dw	0
  6326  00724D  0000               	dw	0
  6327  00724F  0000               	dw	0
  6328  007251  0000               	dw	0
  6329  007253  0000               	dw	0
  6330  007255  0000               	dw	0
  6331  007257  0000               	dw	0
  6332  007259  0000               	dw	0
  6333  00725B  0000               	dw	0
  6334  00725D  0000               	dw	0
  6335  00725F  0000               	dw	0
  6336  007261  0000               	dw	0
  6337  007263  0000               	dw	0
  6338  007265  0000               	dw	0
  6339  007267  0000               	dw	0
  6340  007269  0000               	dw	0
  6341  00726B  0000               	dw	0
  6342  00726D  0000               	dw	0
  6343  00726F  0000               	dw	0
  6344  007271  0000               	dw	0
  6345  007273  0000               	dw	0
  6346  007275  0000               	dw	0
  6347  007277  0000               	dw	0
  6348  007279  0000               	dw	0
  6349  00727B  0000               	dw	0
  6350  00727D  0000               	dw	0
  6351  00727F  0000               	dw	0
  6352  007281  0000               	dw	0
  6353  007283  0000               	dw	0
  6354  007285  0000               	dw	0
  6355  007287  0000               	dw	0
  6356  007289  0000               	dw	0
  6357  00728B  0000               	dw	0
  6358  00728D  0000               	dw	0
  6359  00728F  0000               	dw	0
  6360  007291  0000               	dw	0
  6361  007293  0000               	dw	0
  6362  007295  0000               	dw	0
  6363  007297  0000               	dw	0
  6364  007299  0000               	dw	0
  6365  00729B  0000               	dw	0
  6366  00729D  0000               	dw	0
  6367  00729F  0000               	dw	0
  6368  0072A1  0000               	dw	0
  6369  0072A3  0000               	dw	0
  6370  0072A5  0000               	dw	0
  6371  0072A7  0000               	dw	0
  6372  0072A9  0000               	dw	0
  6373  0072AB  0000               	dw	0
  6374  0072AD  0000               	dw	0
  6375  0072AF  0000               	dw	0
  6376  0072B1  0000               	dw	0
  6377  0072B3  0000               	dw	0
  6378  0072B5  0000               	dw	0
  6379  0072B7  0000               	dw	0
  6380  0072B9  0000               	dw	0
  6381  0072BB  0000               	dw	0
  6382  0072BD  0000               	dw	0
  6383  0072BF  0000               	dw	0
  6384  0072C1  0000               	dw	0
  6385  0072C3  0000               	dw	0
  6386  0072C5  0000               	dw	0
  6387  0072C7  0000               	dw	0
  6388  0072C9  0000               	dw	0
  6389  0072CB  0000               	dw	0
  6390  0072CD  0000               	dw	0
  6391  0072CF  0000               	dw	0
  6392  0072D1  0000               	dw	0
  6393  0072D3  0000               	dw	0
  6394  0072D5  0000               	dw	0
  6395  0072D7  0000               	dw	0
  6396  0072D9  0000               	dw	0
  6397  0072DB  0000               	dw	0
  6398  0072DD  0000               	dw	0
  6399  0072DF  0000               	dw	0
  6400  0072E1  0000               	dw	0
  6401  0072E3  0000               	dw	0
  6402  0072E5  0000               	dw	0
  6403  0072E7  0000               	dw	0
  6404  0072E9  0000               	dw	0
  6405  0072EB  0000               	dw	0
  6406  0072ED  0000               	dw	0
  6407  0072EF  0000               	dw	0
  6408  0072F1  0000               	dw	0
  6409  0072F3  0000               	dw	0
  6410  0072F5  0000               	dw	0
  6411  0072F7  0000               	dw	0
  6412  0072F9  0000               	dw	0
  6413  0072FB  0000               	dw	0
  6414  0072FD  0000               	dw	0
  6415  0072FF  0000               	dw	0
  6416  007301  0000               	dw	0
  6417  007303  0000               	dw	0
  6418  007305  0000               	dw	0
  6419  007307  0000               	dw	0
  6420  007309  0000               	dw	0
  6421  00730B  0000               	dw	0
  6422  00730D  0000               	dw	0
  6423  00730F  0000               	dw	0
  6424  007311  0000               	dw	0
  6425  007313  0000               	dw	0
  6426  007315  0000               	dw	0
  6427  007317  0000               	dw	0
  6428  007319  0000               	dw	0
  6429  00731B  0000               	dw	0
  6430  00731D  0000               	dw	0
  6431  00731F  0000               	dw	0
  6432  007321  0000               	dw	0
  6433  007323  0000               	dw	0
  6434  007325  0000               	dw	0
  6435  007327  0000               	dw	0
  6436  007329  0000               	dw	0
  6437  00732B  0000               	dw	0
  6438  00732D  0000               	dw	0
  6439  00732F  0000               	dw	0
  6440  007331  0000               	dw	0
  6441  007333  0000               	dw	0
  6442  007335  0000               	dw	0
  6443  007337  0000               	dw	0
  6444  007339  0000               	dw	0
  6445  00733B  0000               	dw	0
  6446  00733D  0000               	dw	0
  6447  00733F  0000               	dw	0
  6448  007341  0000               	dw	0
  6449  007343  0000               	dw	0
  6450  007345  0000               	dw	0
  6451  007347  0000               	dw	0
  6452  007349  0000               	dw	0
  6453  00734B  0000               	dw	0
  6454  00734D  0000               	dw	0
  6455  00734F  0000               	dw	0
  6456  007351  0000               	dw	0
  6457  007353  0000               	dw	0
  6458  007355  0000               	dw	0
  6459  007357  0000               	dw	0
  6460  007359  0000               	dw	0
  6461  00735B  0000               	dw	0
  6462  00735D  0000               	dw	0
  6463  00735F  0000               	dw	0
  6464  007361  0000               	dw	0
  6465  007363  0000               	dw	0
  6466  007365  0000               	dw	0
  6467  007367  0000               	dw	0
  6468  007369  0000               	dw	0
  6469  00736B  0000               	dw	0
  6470  00736D  0000               	dw	0
  6471  00736F  0000               	dw	0
  6472  007371  0000               	dw	0
  6473  007373  0000               	dw	0
  6474  007375  0000               	dw	0
  6475  007377  0000               	dw	0
  6476  007379  0000               	dw	0
  6477  00737B  0000               	dw	0
  6478  00737D  0000               	dw	0
  6479  00737F  0000               	dw	0
  6480  007381  0000               	dw	0
  6481  007383  0000               	dw	0
  6482  007385  0000               	dw	0
  6483  007387  0000               	dw	0
  6484  007389  0000               	dw	0
  6485  00738B  0000               	dw	0
  6486  00738D  0000               	dw	0
  6487  00738F  0000               	dw	0
  6488  007391  0000               	dw	0
  6489  007393  0000               	dw	0
  6490  007395  0000               	dw	0
  6491  007397  0000               	dw	0
  6492  007399  0000               	dw	0
  6493  00739B  0000               	dw	0
  6494  00739D  0000               	dw	0
  6495  00739F  0000               	dw	0
  6496  0073A1  0000               	dw	0
  6497  0073A3  0000               	dw	0
  6498  0073A5  0000               	dw	0
  6499  0073A7  0000               	dw	0
  6500  0073A9  0000               	dw	0
  6501  0073AB  0000               	dw	0
  6502  0073AD  0000               	dw	0
  6503  0073AF  0000               	dw	0
  6504  0073B1  0000               	dw	0
  6505  0073B3  0000               	dw	0
  6506  0073B5  0000               	dw	0
  6507  0073B7  0000               	dw	0
  6508  0073B9  0000               	dw	0
  6509  0073BB  0000               	dw	0
  6510  0073BD  0000               	dw	0
  6511  0073BF  0000               	dw	0
  6512  0073C1  0000               	dw	0
  6513  0073C3  0000               	dw	0
  6514  0073C5  0000               	dw	0
  6515  0073C7  0000               	dw	0
  6516  0073C9  0000               	dw	0
  6517  0073CB  0000               	dw	0
  6518  0073CD  0000               	dw	0
  6519  0073CF  0000               	dw	0
  6520  0073D1  0000               	dw	0
  6521  0073D3  0000               	dw	0
  6522  0073D5  0000               	dw	0
  6523  0073D7  0000               	dw	0
  6524  0073D9  0000               	dw	0
  6525  0073DB  0000               	dw	0
  6526  0073DD  0000               	dw	0
  6527  0073DF  0000               	dw	0
  6528  0073E1  0000               	dw	0
  6529  0073E3  0000               	dw	0
  6530  0073E5  0000               	dw	0
  6531  0073E7  0000               	dw	0
  6532  0073E9  0000               	dw	0
  6533  0073EB  0000               	dw	0
  6534  0073ED  0000               	dw	0
  6535  0073EF  0000               	dw	0
  6536  0073F1  0000               	dw	0
  6537  0073F3  0000               	dw	0
  6538  0073F5  0000               	dw	0
  6539  0073F7  0000               	dw	0
  6540  0073F9  0000               	dw	0
  6541  0073FB  0000               	dw	0
  6542  0073FD  0000               	dw	0
  6543  0073FF  0000               	dw	0
  6544  007401  0000               	dw	0
  6545  007403  0000               	dw	0
  6546  007405  0000               	dw	0
  6547  007407  0000               	dw	0
  6548  007409  0000               	dw	0
  6549  00740B  0000               	dw	0
  6550  00740D  0000               	dw	0
  6551  00740F  0000               	dw	0
  6552  007411  0000               	dw	0
  6553  007413  0000               	dw	0
  6554  007415  0000               	dw	0
  6555  007417  0000               	dw	0
  6556  007419  0000               	dw	0
  6557  00741B  0000               	dw	0
  6558  00741D  0000               	dw	0
  6559  00741F  0000               	dw	0
  6560  007421  0000               	dw	0
  6561  007423  0000               	dw	0
  6562  007425  0000               	dw	0
  6563  007427  0000               	dw	0
  6564  007429  0000               	dw	0
  6565  00742B  0000               	dw	0
  6566  00742D  0000               	dw	0
  6567  00742F  0000               	dw	0
  6568  007431  0000               	dw	0
  6569  007433  0000               	dw	0
  6570  007435  0000               	dw	0
  6571  007437  0000               	dw	0
  6572  007439  0000               	dw	0
  6573  00743B  0000               	dw	0
  6574  00743D  0000               	dw	0
  6575  00743F  0000               	dw	0
  6576  007441  0000               	dw	0
  6577  007443  0000               	dw	0
  6578  007445  0000               	dw	0
  6579  007447  0000               	dw	0
  6580  007449  0000               	dw	0
  6581  00744B  0000               	dw	0
  6582  00744D  0000               	dw	0
  6583  00744F  0000               	dw	0
  6584  007451  0000               	dw	0
  6585  007453  0000               	dw	0
  6586  007455  0000               	dw	0
  6587  007457  0000               	dw	0
  6588  007459  0000               	dw	0
  6589  00745B  0000               	dw	0
  6590  00745D  0000               	dw	0
  6591  00745F  0000               	dw	0
  6592  007461  0000               	dw	0
  6593  007463  0000               	dw	0
  6594  007465  0000               	dw	0
  6595  007467  0000               	dw	0
  6596  007469  0000               	dw	0
  6597  00746B  0000               	dw	0
  6598  00746D  0000               	dw	0
  6599  00746F  0000               	dw	0
  6600  007471  0000               	dw	0
  6601  007473  0000               	dw	0
  6602  007475  0000               	dw	0
  6603  007477  0000               	dw	0
  6604  007479  0000               	dw	0
  6605  00747B  0000               	dw	0
  6606  00747D  0000               	dw	0
  6607  00747F  0000               	dw	0
  6608  007481  0000               	dw	0
  6609  007483  0000               	dw	0
  6610  007485  0000               	dw	0
  6611  007487  0000               	dw	0
  6612  007489  0000               	dw	0
  6613  00748B  0000               	dw	0
  6614  00748D  0000               	dw	0
  6615  00748F  0000               	dw	0
  6616  007491  0000               	dw	0
  6617  007493  0000               	dw	0
  6618  007495  0000               	dw	0
  6619  007497  0000               	dw	0
  6620  007499  0000               	dw	0
  6621  00749B  0000               	dw	0
  6622  00749D  0000               	dw	0
  6623  00749F  0000               	dw	0
  6624  0074A1  0000               	dw	0
  6625  0074A3  0000               	dw	0
  6626  0074A5  0000               	dw	0
  6627  0074A7  0000               	dw	0
  6628  0074A9  0000               	dw	0
  6629  0074AB  0000               	dw	0
  6630  0074AD  0000               	dw	0
  6631  0074AF  0000               	dw	0
  6632  0074B1  0000               	dw	0
  6633  0074B3  0000               	dw	0
  6634  0074B5  0000               	dw	0
  6635  0074B7  0000               	dw	0
  6636  0074B9  0000               	dw	0
  6637  0074BB  0000               	dw	0
  6638  0074BD  0000               	dw	0
  6639  0074BF  0000               	dw	0
  6640  0074C1  0000               	dw	0
  6641  0074C3  0000               	dw	0
  6642  0074C5  0000               	dw	0
  6643  0074C7  0000               	dw	0
  6644  0074C9  0000               	dw	0
  6645  0074CB  0000               	dw	0
  6646  0074CD  0000               	dw	0
  6647  0074CF  0000               	dw	0
  6648  0074D1  0000               	dw	0
  6649  0074D3  0000               	dw	0
  6650  0074D5  0000               	dw	0
  6651  0074D7  0000               	dw	0
  6652  0074D9  0000               	dw	0
  6653  0074DB  0000               	dw	0
  6654  0074DD  0000               	dw	0
  6655  0074DF  0000               	dw	0
  6656  0074E1  0000               	dw	0
  6657  0074E3  0000               	dw	0
  6658  0074E5  0000               	dw	0
  6659  0074E7  0000               	dw	0
  6660  0074E9  0000               	dw	0
  6661  0074EB  0000               	dw	0
  6662  0074ED  0000               	dw	0
  6663  0074EF  0000               	dw	0
  6664  0074F1  0000               	dw	0
  6665  0074F3  0000               	dw	0
  6666  0074F5  0000               	dw	0
  6667  0074F7  0000               	dw	0
  6668  0074F9  0000               	dw	0
  6669  0074FB  0000               	dw	0
  6670  0074FD  0000               	dw	0
  6671  0074FF  0000               	dw	0
  6672  007501  0000               	dw	0
  6673  007503  0000               	dw	0
  6674  007505  0000               	dw	0
  6675  007507  0000               	dw	0
  6676  007509  0000               	dw	0
  6677  00750B  0000               	dw	0
  6678  00750D  0000               	dw	0
  6679  00750F  0000               	dw	0
  6680  007511  0000               	dw	0
  6681  007513  0000               	dw	0
  6682  007515  0000               	dw	0
  6683  007517  0000               	dw	0
  6684  007519  0000               	dw	0
  6685  00751B  0000               	dw	0
  6686  00751D  0000               	dw	0
  6687  00751F  0000               	dw	0
  6688  007521  0000               	dw	0
  6689  007523  0000               	dw	0
  6690  007525  0000               	dw	0
  6691  007527  0000               	dw	0
  6692  007529  0000               	dw	0
  6693  00752B  0000               	dw	0
  6694  00752D  0000               	dw	0
  6695  00752F  0000               	dw	0
  6696  007531  0000               	dw	0
  6697  007533  0000               	dw	0
  6698  007535  0000               	dw	0
  6699  007537  0000               	dw	0
  6700  007539  0000               	dw	0
  6701  00753B  0000               	dw	0
  6702  00753D  0000               	dw	0
  6703  00753F  0000               	dw	0
  6704  007541  0000               	dw	0
  6705  007543  0000               	dw	0
  6706  007545  0000               	dw	0
  6707  007547  0000               	dw	0
  6708  007549  0000               	dw	0
  6709  00754B  0000               	dw	0
  6710  00754D  0000               	dw	0
  6711  00754F  0000               	dw	0
  6712  007551  0000               	dw	0
  6713  007553  0000               	dw	0
  6714  007555  0000               	dw	0
  6715  007557  0000               	dw	0
  6716  007559  0000               	dw	0
  6717  00755B  0000               	dw	0
  6718  00755D  0000               	dw	0
  6719  00755F  0000               	dw	0
  6720  007561  0000               	dw	0
  6721  007563  0000               	dw	0
  6722  007565  0000               	dw	0
  6723  007567  0000               	dw	0
  6724  007569  0000               	dw	0
  6725  00756B  0000               	dw	0
  6726  00756D  0000               	dw	0
  6727  00756F  0000               	dw	0
  6728  007571  0000               	dw	0
  6729  007573  0000               	dw	0
  6730  007575  0000               	dw	0
  6731  007577  0000               	dw	0
  6732  007579  0000               	dw	0
  6733  00757B  0000               	dw	0
  6734  00757D  0000               	dw	0
  6735  00757F  0000               	dw	0
  6736  007581  0000               	dw	0
  6737  007583  0000               	dw	0
  6738  007585  0000               	dw	0
  6739  007587  0000               	dw	0
  6740  007589  0000               	dw	0
  6741  00758B  0000               	dw	0
  6742  00758D  0000               	dw	0
  6743  00758F  0000               	dw	0
  6744  007591  0000               	dw	0
  6745  007593  0000               	dw	0
  6746  007595  0000               	dw	0
  6747  007597  0000               	dw	0
  6748  007599  0000               	dw	0
  6749  00759B  0000               	dw	0
  6750  00759D  0000               	dw	0
  6751  00759F  0000               	dw	0
  6752  0075A1  0000               	dw	0
  6753  0075A3  0000               	dw	0
  6754  0075A5  0000               	dw	0
  6755  0075A7  0000               	dw	0
  6756  0075A9  0000               	dw	0
  6757  0075AB  0000               	dw	0
  6758  0075AD  0000               	dw	0
  6759  0075AF  0000               	dw	0
  6760  0075B1  0000               	dw	0
  6761  0075B3  0000               	dw	0
  6762  0075B5  0000               	dw	0
  6763  0075B7  0000               	dw	0
  6764  0075B9  0000               	dw	0
  6765  0075BB  0000               	dw	0
  6766  0075BD  0000               	dw	0
  6767  0075BF  0000               	dw	0
  6768  0075C1  0000               	dw	0
  6769  0075C3  0000               	dw	0
  6770  0075C5  0000               	dw	0
  6771  0075C7  0000               	dw	0
  6772  0075C9  0000               	dw	0
  6773  0075CB  0000               	dw	0
  6774  0075CD  0000               	dw	0
  6775  0075CF  0000               	dw	0
  6776  0075D1  0000               	dw	0
  6777  0075D3  0000               	dw	0
  6778  0075D5  0000               	dw	0
  6779  0075D7  0000               	dw	0
  6780  0075D9  0000               	dw	0
  6781  0075DB  0000               	dw	0
  6782  0075DD  0000               	dw	0
  6783  0075DF  0000               	dw	0
  6784  0075E1  0000               	dw	0
  6785  0075E3  0000               	dw	0
  6786  0075E5  0000               	dw	0
  6787  0075E7  0000               	dw	0
  6788  0075E9  0000               	dw	0
  6789  0075EB  0000               	dw	0
  6790  0075ED  0000               	dw	0
  6791  0075EF  0000               	dw	0
  6792  0075F1  0000               	dw	0
  6793  0075F3  0000               	dw	0
  6794  0075F5  0000               	dw	0
  6795  0075F7  0000               	dw	0
  6796  0075F9  0000               	dw	0
  6797  0075FB  0000               	dw	0
  6798  0075FD  0000               	dw	0
  6799  0075FF  0000               	dw	0
  6800  007601  0000               	dw	0
  6801  007603  0000               	dw	0
  6802  007605  0000               	dw	0
  6803  007607  0000               	dw	0
  6804  007609  0000               	dw	0
  6805  00760B  0000               	dw	0
  6806  00760D  0000               	dw	0
  6807  00760F  0000               	dw	0
  6808  007611  0000               	dw	0
  6809  007613  0000               	dw	0
  6810  007615  0000               	dw	0
  6811  007617  0000               	dw	0
  6812  007619  0000               	dw	0
  6813  00761B  0000               	dw	0
  6814  00761D  0000               	dw	0
  6815  00761F  0000               	dw	0
  6816  007621  0000               	dw	0
  6817  007623  0000               	dw	0
  6818  007625  0000               	dw	0
  6819  007627  0000               	dw	0
  6820  007629  0000               	dw	0
  6821  00762B  0000               	dw	0
  6822  00762D  0000               	dw	0
  6823  00762F  0000               	dw	0
  6824  007631  0000               	dw	0
  6825  007633  0000               	dw	0
  6826  007635  0000               	dw	0
  6827  007637  0000               	dw	0
  6828  007639  0000               	dw	0
  6829  00763B  0000               	dw	0
  6830  00763D  0000               	dw	0
  6831  00763F  0000               	dw	0
  6832  007641  0000               	dw	0
  6833  007643  0000               	dw	0
  6834  007645  0000               	dw	0
  6835  007647  0000               	dw	0
  6836  007649  0000               	dw	0
  6837  00764B  0000               	dw	0
  6838  00764D  0000               	dw	0
  6839  00764F  0000               	dw	0
  6840  007651  0000               	dw	0
  6841  007653  0000               	dw	0
  6842  007655  0000               	dw	0
  6843  007657  0000               	dw	0
  6844  007659  0000               	dw	0
  6845  00765B  0000               	dw	0
  6846  00765D  0000               	dw	0
  6847  00765F  0000               	dw	0
  6848  007661  0000               	dw	0
  6849  007663  0000               	dw	0
  6850  007665  0000               	dw	0
  6851  007667  0000               	dw	0
  6852  007669  0000               	dw	0
  6853  00766B  0000               	dw	0
  6854  00766D  0000               	dw	0
  6855  00766F  0000               	dw	0
  6856  007671  0000               	dw	0
  6857  007673  0000               	dw	0
  6858  007675  0000               	dw	0
  6859  007677  0000               	dw	0
  6860  007679  0000               	dw	0
  6861  00767B  0000               	dw	0
  6862  00767D  0000               	dw	0
  6863  00767F  0000               	dw	0
  6864  007681  0000               	dw	0
  6865  007683  0000               	dw	0
  6866  007685  0000               	dw	0
  6867  007687  0000               	dw	0
  6868  007689  0000               	dw	0
  6869  00768B  0000               	dw	0
  6870  00768D  0000               	dw	0
  6871  00768F  0000               	dw	0
  6872  007691  0000               	dw	0
  6873  007693  0000               	dw	0
  6874  007695  0000               	dw	0
  6875  007697  0000               	dw	0
  6876  007699  0000               	dw	0
  6877  00769B  0000               	dw	0
  6878  00769D  0000               	dw	0
  6879  00769F  0000               	dw	0
  6880  0076A1  0000               	dw	0
  6881  0076A3  0000               	dw	0
  6882  0076A5  0000               	dw	0
  6883  0076A7  0000               	dw	0
  6884  0076A9  0000               	dw	0
  6885  0076AB  0000               	dw	0
  6886  0076AD  0000               	dw	0
  6887  0076AF  0000               	dw	0
  6888  0076B1  0000               	dw	0
  6889  0076B3  0000               	dw	0
  6890  0076B5  0000               	dw	0
  6891  0076B7  0000               	dw	0
  6892  0076B9  0000               	dw	0
  6893  0076BB  0000               	dw	0
  6894  0076BD  0000               	dw	0
  6895  0076BF  0000               	dw	0
  6896  0076C1  0000               	dw	0
  6897  0076C3  0000               	dw	0
  6898  0076C5  0000               	dw	0
  6899  0076C7  0000               	dw	0
  6900  0076C9  0000               	dw	0
  6901  0076CB  0000               	dw	0
  6902  0076CD  0000               	dw	0
  6903  0076CF  0000               	dw	0
  6904  0076D1  0000               	dw	0
  6905  0076D3  0000               	dw	0
  6906  0076D5  0000               	dw	0
  6907  0076D7  0000               	dw	0
  6908  0076D9  0000               	dw	0
  6909  0076DB  0000               	dw	0
  6910  0076DD  0000               	dw	0
  6911  0076DF  0000               	dw	0
  6912  0076E1  0000               	dw	0
  6913  0076E3  0000               	dw	0
  6914  0076E5  0000               	dw	0
  6915  0076E7  0000               	dw	0
  6916  0076E9  0000               	dw	0
  6917  0076EB  0000               	dw	0
  6918  0076ED  0000               	dw	0
  6919  0076EF  0000               	dw	0
  6920  0076F1  0000               	dw	0
  6921  0076F3  0000               	dw	0
  6922  0076F5  0000               	dw	0
  6923  0076F7  0000               	dw	0
  6924  0076F9  0000               	dw	0
  6925  0076FB  0000               	dw	0
  6926  0076FD  0000               	dw	0
  6927  0076FF  0000               	dw	0
  6928  007701  0000               	dw	0
  6929  007703  0000               	dw	0
  6930  007705  0000               	dw	0
  6931  007707  0000               	dw	0
  6932  007709  0000               	dw	0
  6933  00770B  0000               	dw	0
  6934  00770D  0000               	dw	0
  6935  00770F  0000               	dw	0
  6936  007711  0000               	dw	0
  6937  007713  0000               	dw	0
  6938  007715  0000               	dw	0
  6939  007717  0000               	dw	0
  6940  007719  0000               	dw	0
  6941  00771B  0000               	dw	0
  6942  00771D  0000               	dw	0
  6943  00771F  0000               	dw	0
  6944  007721  0000               	dw	0
  6945  007723  0000               	dw	0
  6946  007725  0000               	dw	0
  6947  007727  0000               	dw	0
  6948  007729  0000               	dw	0
  6949  00772B  0000               	dw	0
  6950  00772D  0000               	dw	0
  6951  00772F  0000               	dw	0
  6952  007731  0000               	dw	0
  6953  007733  0000               	dw	0
  6954  007735  0000               	dw	0
  6955  007737  0000               	dw	0
  6956  007739  0000               	dw	0
  6957  00773B  0000               	dw	0
  6958  00773D  0000               	dw	0
  6959  00773F  0000               	dw	0
  6960  007741  0000               	dw	0
  6961  007743  0000               	dw	0
  6962  007745  0000               	dw	0
  6963  007747  0000               	dw	0
  6964  007749  0000               	dw	0
  6965  00774B  0000               	dw	0
  6966  00774D  0000               	dw	0
  6967  00774F  0000               	dw	0
  6968  007751  0000               	dw	0
  6969  007753  0000               	dw	0
  6970  007755  0000               	dw	0
  6971  007757  0000               	dw	0
  6972  007759  0000               	dw	0
  6973  00775B  0000               	dw	0
  6974  00775D  0000               	dw	0
  6975  00775F  0000               	dw	0
  6976  007761  0000               	dw	0
  6977  007763  0000               	dw	0
  6978  007765  0000               	dw	0
  6979  007767  0000               	dw	0
  6980  007769  0000               	dw	0
  6981  00776B  0000               	dw	0
  6982  00776D  0000               	dw	0
  6983  00776F  0000               	dw	0
  6984  007771  0000               	dw	0
  6985  007773  0000               	dw	0
  6986  007775  0000               	dw	0
  6987  007777  0000               	dw	0
  6988  007779  0000               	dw	0
  6989  00777B  0000               	dw	0
  6990  00777D  0000               	dw	0
  6991  00777F  0000               	dw	0
  6992  007781  0000               	dw	0
  6993  007783  0000               	dw	0
  6994  007785  0000               	dw	0
  6995  007787  0000               	dw	0
  6996  007789  0000               	dw	0
  6997  00778B  0000               	dw	0
  6998  00778D  0000               	dw	0
  6999  00778F  0000               	dw	0
  7000  007791  0000               	dw	0
  7001  007793  0000               	dw	0
  7002  007795  0000               	dw	0
  7003  007797  0000               	dw	0
  7004  007799  0000               	dw	0
  7005  00779B  0000               	dw	0
  7006  00779D  0000               	dw	0
  7007  00779F  0000               	dw	0
  7008  0077A1  0000               	dw	0
  7009  0077A3  0000               	dw	0
  7010  0077A5  0000               	dw	0
  7011  0077A7  0000               	dw	0
  7012  0077A9  0000               	dw	0
  7013  0077AB  0000               	dw	0
  7014  0077AD  0000               	dw	0
  7015  0077AF  0000               	dw	0
  7016  0077B1  0000               	dw	0
  7017  0077B3  0000               	dw	0
  7018  0077B5  0000               	dw	0
  7019  0077B7  0000               	dw	0
  7020  0077B9  0000               	dw	0
  7021  0077BB  0000               	dw	0
  7022  0077BD  0000               	dw	0
  7023  0077BF  0000               	dw	0
  7024  0077C1  0000               	dw	0
  7025  0077C3  0000               	dw	0
  7026  0077C5  0000               	dw	0
  7027  0077C7  0000               	dw	0
  7028  0077C9  0000               	dw	0
  7029  0077CB  0000               	dw	0
  7030  0077CD  0000               	dw	0
  7031  0077CF  0000               	dw	0
  7032  0077D1  0000               	dw	0
  7033  0077D3  0000               	dw	0
  7034  0077D5  0000               	dw	0
  7035  0077D7  0000               	dw	0
  7036  0077D9  0000               	dw	0
  7037  0077DB  0000               	dw	0
  7038  0077DD  0000               	dw	0
  7039  0077DF  0000               	dw	0
  7040  0077E1  0000               	dw	0
  7041  0077E3  0000               	dw	0
  7042  0077E5  0000               	dw	0
  7043  0077E7  0000               	dw	0
  7044  0077E9  0000               	dw	0
  7045  0077EB  0000               	dw	0
  7046  0077ED  0000               	dw	0
  7047  0077EF  0000               	dw	0
  7048  0077F1  0000               	dw	0
  7049  0077F3  0000               	dw	0
  7050  0077F5  0000               	dw	0
  7051  0077F7  0000               	dw	0
  7052  0077F9  0000               	dw	0
  7053  0077FB  0000               	dw	0
  7054  0077FD  0000               	dw	0
  7055  0077FF  0000               	dw	0
  7056  007801  0000               	dw	0
  7057  007803  0000               	dw	0
  7058  007805  0000               	dw	0
  7059  007807  0000               	dw	0
  7060  007809  0000               	dw	0
  7061  00780B  0000               	dw	0
  7062  00780D  0000               	dw	0
  7063  00780F  0000               	dw	0
  7064  007811  0000               	dw	0
  7065  007813  0000               	dw	0
  7066  007815  0000               	dw	0
  7067  007817  0000               	dw	0
  7068  007819  0000               	dw	0
  7069  00781B  0000               	dw	0
  7070  00781D  0000               	dw	0
  7071  00781F  0000               	dw	0
  7072  007821  0000               	dw	0
  7073  007823  0000               	dw	0
  7074  007825  0000               	dw	0
  7075  007827  0000               	dw	0
  7076  007829  0000               	dw	0
  7077  00782B  0000               	dw	0
  7078  00782D  0000               	dw	0
  7079  00782F  0000               	dw	0
  7080  007831  0000               	dw	0
  7081  007833  0000               	dw	0
  7082  007835  0000               	dw	0
  7083  007837  0000               	dw	0
  7084  007839  0000               	dw	0
  7085  00783B  0000               	dw	0
  7086  00783D  0000               	dw	0
  7087  00783F  0000               	dw	0
  7088  007841  0000               	dw	0
  7089  007843  0000               	dw	0
  7090  007845  0000               	dw	0
  7091  007847  0000               	dw	0
  7092  007849  0000               	dw	0
  7093  00784B  0000               	dw	0
  7094  00784D  0000               	dw	0
  7095  00784F  0000               	dw	0
  7096  007851  0000               	dw	0
  7097  007853  0000               	dw	0
  7098  007855  0000               	dw	0
  7099  007857  0000               	dw	0
  7100  007859  0000               	dw	0
  7101  00785B  0000               	dw	0
  7102  00785D  0000               	dw	0
  7103  00785F  0000               	dw	0
  7104  007861  0000               	dw	0
  7105  007863  0000               	dw	0
  7106  007865  0000               	dw	0
  7107  007867  0000               	dw	0
  7108  007869  0000               	dw	0
  7109  00786B  0000               	dw	0
  7110  00786D  0000               	dw	0
  7111  00786F  0000               	dw	0
  7112  007871  0000               	dw	0
  7113  007873  0000               	dw	0
  7114  007875  0000               	dw	0
  7115  007877  0000               	dw	0
  7116  007879  0000               	dw	0
  7117  00787B  0000               	dw	0
  7118  00787D  0000               	dw	0
  7119  00787F  0000               	dw	0
  7120  007881  0000               	dw	0
  7121  007883  0000               	dw	0
  7122  007885  0000               	dw	0
  7123  007887  0000               	dw	0
  7124  007889  0000               	dw	0
  7125  00788B  0000               	dw	0
  7126  00788D  0000               	dw	0
  7127  00788F  0000               	dw	0
  7128  007891  0000               	dw	0
  7129  007893  0000               	dw	0
  7130  007895  0000               	dw	0
  7131  007897  0000               	dw	0
  7132  007899  0000               	dw	0
  7133  00789B  0000               	dw	0
  7134  00789D  0000               	dw	0
  7135  00789F  0000               	dw	0
  7136  0078A1  0000               	dw	0
  7137  0078A3  0000               	dw	0
  7138  0078A5  0000               	dw	0
  7139  0078A7  0000               	dw	0
  7140  0078A9  0000               	dw	0
  7141  0078AB  0000               	dw	0
  7142  0078AD  0000               	dw	0
  7143  0078AF  0000               	dw	0
  7144  0078B1  0000               	dw	0
  7145  0078B3  0000               	dw	0
  7146  0078B5  0000               	dw	0
  7147  0078B7  0000               	dw	0
  7148  0078B9  0000               	dw	0
  7149  0078BB  0000               	dw	0
  7150  0078BD  0000               	dw	0
  7151  0078BF  0000               	dw	0
  7152  0078C1  0000               	dw	0
  7153  0078C3  0000               	dw	0
  7154  0078C5  0000               	dw	0
  7155  0078C7  0000               	dw	0
  7156  0078C9  0000               	dw	0
  7157  0078CB  0000               	dw	0
  7158  0078CD  0000               	dw	0
  7159  0078CF  0000               	dw	0
  7160  0078D1  0000               	dw	0
  7161  0078D3  0000               	dw	0
  7162  0078D5  0000               	dw	0
  7163  0078D7  0000               	dw	0
  7164  0078D9  0000               	dw	0
  7165  0078DB  0000               	dw	0
  7166  0078DD  0000               	dw	0
  7167  0078DF  0000               	dw	0
  7168  0078E1  0000               	dw	0
  7169  0078E3  0000               	dw	0
  7170  0078E5  0000               	dw	0
  7171  0078E7  0000               	dw	0
  7172  0078E9  0000               	dw	0
  7173  0078EB  0000               	dw	0
  7174  0078ED  0000               	dw	0
  7175  0078EF  0000               	dw	0
  7176  0078F1  0000               	dw	0
  7177  0078F3  0000               	dw	0
  7178  0078F5  0000               	dw	0
  7179  0078F7  0000               	dw	0
  7180  0078F9  0000               	dw	0
  7181  0078FB  0000               	dw	0
  7182  0078FD  0000               	dw	0
  7183  0078FF  0000               	dw	0
  7184  007901  0000               	dw	0
  7185  007903  0000               	dw	0
  7186  007905  0000               	dw	0
  7187  007907  0000               	dw	0
  7188  007909  0000               	dw	0
  7189  00790B  0000               	dw	0
  7190  00790D  0000               	dw	0
  7191  00790F  0000               	dw	0
  7192  007911  0000               	dw	0
  7193  007913  0000               	dw	0
  7194  007915  0000               	dw	0
  7195  007917  0000               	dw	0
  7196  007919  0000               	dw	0
  7197  00791B  0000               	dw	0
  7198  00791D  0000               	dw	0
  7199  00791F  0000               	dw	0
  7200  007921  0000               	dw	0
  7201  007923  0000               	dw	0
  7202  007925  0000               	dw	0
  7203  007927  0000               	dw	0
  7204  007929  0000               	dw	0
  7205  00792B  0000               	dw	0
  7206  00792D  0000               	dw	0
  7207  00792F  0000               	dw	0
  7208  007931  0000               	dw	0
  7209  007933  0000               	dw	0
  7210  007935  0000               	dw	0
  7211  007937  0000               	dw	0
  7212  007939  0000               	dw	0
  7213  00793B  0000               	dw	0
  7214  00793D  0000               	dw	0
  7215  00793F  0000               	dw	0
  7216  007941  0000               	dw	0
  7217  007943  0000               	dw	0
  7218  007945  0000               	dw	0
  7219  007947  0000               	dw	0
  7220  007949  0000               	dw	0
  7221  00794B  0000               	dw	0
  7222  00794D  0000               	dw	0
  7223  00794F  0000               	dw	0
  7224  007951  0000               	dw	0
  7225  007953  0000               	dw	0
  7226  007955  0000               	dw	0
  7227  007957  0000               	dw	0
  7228  007959  0000               	dw	0
  7229  00795B  0000               	dw	0
  7230  00795D  0000               	dw	0
  7231  00795F  0000               	dw	0
  7232  007961  0000               	dw	0
  7233  007963  0000               	dw	0
  7234  007965  0000               	dw	0
  7235  007967  0000               	dw	0
  7236  007969  0000               	dw	0
  7237  00796B  0000               	dw	0
  7238  00796D  0000               	dw	0
  7239  00796F  0000               	dw	0
  7240  007971  0000               	dw	0
  7241  007973  0000               	dw	0
  7242  007975  0000               	dw	0
  7243  007977  0000               	dw	0
  7244  007979  0000               	dw	0
  7245  00797B  0000               	dw	0
  7246  00797D  0000               	dw	0
  7247  00797F  0000               	dw	0
  7248  007981  0000               	dw	0
  7249  007983  0000               	dw	0
  7250  007985  0000               	dw	0
  7251  007987  0000               	dw	0
  7252  007989  0000               	dw	0
  7253  00798B  0000               	dw	0
  7254  00798D  0000               	dw	0
  7255  00798F  0000               	dw	0
  7256  007991  0000               	dw	0
  7257  007993  0000               	dw	0
  7258  007995  0000               	dw	0
  7259  007997  0000               	dw	0
  7260  007999  0000               	dw	0
  7261  00799B  0000               	dw	0
  7262  00799D  0000               	dw	0
  7263  00799F  0000               	dw	0
  7264  0079A1  0000               	dw	0
  7265  0079A3  0000               	dw	0
  7266  0079A5  0000               	dw	0
  7267  0079A7  0000               	dw	0
  7268  0079A9  0000               	dw	0
  7269  0079AB  0000               	dw	0
  7270  0079AD  0000               	dw	0
  7271  0079AF  0000               	dw	0
  7272  0079B1  0000               	dw	0
  7273  0079B3  0000               	dw	0
  7274  0079B5  0000               	dw	0
  7275  0079B7  0000               	dw	0
  7276  0079B9  0000               	dw	0
  7277  0079BB  0000               	dw	0
  7278  0079BD  0000               	dw	0
  7279  0079BF  0000               	dw	0
  7280  0079C1  0000               	dw	0
  7281  0079C3  0000               	dw	0
  7282  0079C5  0000               	dw	0
  7283  0079C7  0000               	dw	0
  7284  0079C9  0000               	dw	0
  7285  0079CB  0000               	dw	0
  7286  0079CD  0000               	dw	0
  7287  0079CF  0000               	dw	0
  7288  0079D1  0000               	dw	0
  7289  0079D3  0000               	dw	0
  7290  0079D5  0000               	dw	0
  7291  0079D7  0000               	dw	0
  7292  0079D9  0000               	dw	0
  7293  0079DB  0000               	dw	0
  7294  0079DD  0000               	dw	0
  7295  0079DF  0000               	dw	0
  7296  0079E1  0000               	dw	0
  7297  0079E3  0000               	dw	0
  7298  0079E5  0000               	dw	0
  7299  0079E7  0000               	dw	0
  7300  0079E9  0000               	dw	0
  7301  0079EB  0000               	dw	0
  7302  0079ED  0000               	dw	0
  7303  0079EF  0000               	dw	0
  7304  0079F1  0000               	dw	0
  7305  0079F3  0000               	dw	0
  7306  0079F5  0000               	dw	0
  7307  0079F7  0000               	dw	0
  7308  0079F9  0000               	dw	0
  7309  0079FB  0000               	dw	0
  7310  0079FD  0000               	dw	0
  7311  0079FF  0000               	dw	0
  7312  007A01  0000               	dw	0
  7313  007A03  0000               	dw	0
  7314  007A05  0000               	dw	0
  7315  007A07  0000               	dw	0
  7316  007A09  0000               	dw	0
  7317  007A0B  0000               	dw	0
  7318  007A0D  0000               	dw	0
  7319  007A0F  0000               	dw	0
  7320  007A11  0000               	dw	0
  7321  007A13  0000               	dw	0
  7322  007A15  0000               	dw	0
  7323  007A17  0000               	dw	0
  7324  007A19  0000               	dw	0
  7325  007A1B  0000               	dw	0
  7326  007A1D  0000               	dw	0
  7327  007A1F  0000               	dw	0
  7328  007A21  0000               	dw	0
  7329  007A23  0000               	dw	0
  7330  007A25  0000               	dw	0
  7331  007A27  0000               	dw	0
  7332  007A29  0000               	dw	0
  7333  007A2B  0000               	dw	0
  7334  007A2D  0000               	dw	0
  7335  007A2F  0000               	dw	0
  7336  007A31  0000               	dw	0
  7337  007A33  0000               	dw	0
  7338  007A35  0000               	dw	0
  7339  007A37  0000               	dw	0
  7340  007A39  0000               	dw	0
  7341  007A3B  0000               	dw	0
  7342  007A3D  0000               	dw	0
  7343  007A3F  0000               	dw	0
  7344  007A41  0000               	dw	0
  7345  007A43  0000               	dw	0
  7346  007A45  0000               	dw	0
  7347  007A47  0000               	dw	0
  7348  007A49  0000               	dw	0
  7349  007A4B  0000               	dw	0
  7350  007A4D  0000               	dw	0
  7351  007A4F  0000               	dw	0
  7352  007A51  0000               	dw	0
  7353  007A53  0000               	dw	0
  7354  007A55  0000               	dw	0
  7355  007A57  0000               	dw	0
  7356  007A59  0000               	dw	0
  7357  007A5B  0000               	dw	0
  7358  007A5D  0000               	dw	0
  7359  007A5F  0000               	dw	0
  7360  007A61  0000               	dw	0
  7361  007A63  0000               	dw	0
  7362  007A65  0000               	dw	0
  7363  007A67  0000               	dw	0
  7364  007A69  0000               	dw	0
  7365  007A6B  0000               	dw	0
  7366  007A6D  0000               	dw	0
  7367  007A6F  0000               	dw	0
  7368  007A71  0000               	dw	0
  7369  007A73  0000               	dw	0
  7370  007A75  0000               	dw	0
  7371  007A77  0000               	dw	0
  7372  007A79  0000               	dw	0
  7373  007A7B  0000               	dw	0
  7374  007A7D  0000               	dw	0
  7375  007A7F  0000               	dw	0
  7376  007A81  0000               	dw	0
  7377  007A83  0000               	dw	0
  7378  007A85  0000               	dw	0
  7379  007A87  0000               	dw	0
  7380  007A89  0000               	dw	0
  7381  007A8B  0000               	dw	0
  7382  007A8D  0000               	dw	0
  7383  007A8F  0000               	dw	0
  7384  007A91  0000               	dw	0
  7385  007A93  0000               	dw	0
  7386  007A95  0000               	dw	0
  7387  007A97  0000               	dw	0
  7388  007A99  0000               	dw	0
  7389  007A9B  0000               	dw	0
  7390  007A9D  0000               	dw	0
  7391  007A9F  0000               	dw	0
  7392  007AA1  0000               	dw	0
  7393  007AA3  0000               	dw	0
  7394  007AA5  0000               	dw	0
  7395  007AA7  0000               	dw	0
  7396  007AA9  0000               	dw	0
  7397  007AAB  0000               	dw	0
  7398  007AAD  0000               	dw	0
  7399  007AAF  0000               	dw	0
  7400  007AB1  0000               	dw	0
  7401  007AB3  0000               	dw	0
  7402  007AB5  0000               	dw	0
  7403  007AB7  0000               	dw	0
  7404  007AB9  0000               	dw	0
  7405  007ABB  0000               	dw	0
  7406  007ABD  0000               	dw	0
  7407  007ABF  0000               	dw	0
  7408  007AC1  0000               	dw	0
  7409  007AC3  0000               	dw	0
  7410  007AC5  0000               	dw	0
  7411  007AC7  0000               	dw	0
  7412  007AC9  0000               	dw	0
  7413  007ACB  0000               	dw	0
  7414  007ACD  0000               	dw	0
  7415  007ACF  0000               	dw	0
  7416  007AD1  0000               	dw	0
  7417  007AD3  0000               	dw	0
  7418  007AD5  0000               	dw	0
  7419  007AD7  0000               	dw	0
  7420  007AD9  0000               	dw	0
  7421  007ADB  0000               	dw	0
  7422  007ADD  0000               	dw	0
  7423  007ADF  0000               	dw	0
  7424  007AE1  0000               	dw	0
  7425  007AE3  0000               	dw	0
  7426  007AE5  0000               	dw	0
  7427  007AE7  0000               	dw	0
  7428  007AE9  0000               	dw	0
  7429  007AEB  0000               	dw	0
  7430  007AED  0000               	dw	0
  7431  007AEF  0000               	dw	0
  7432  007AF1  0000               	dw	0
  7433  007AF3  0000               	dw	0
  7434  007AF5  0000               	dw	0
  7435  007AF7  0000               	dw	0
  7436  007AF9  0000               	dw	0
  7437  007AFB  0000               	dw	0
  7438  007AFD  0000               	dw	0
  7439  007AFF  0000               	dw	0
  7440  007B01  0000               	dw	0
  7441  007B03  0000               	dw	0
  7442  007B05  0000               	dw	0
  7443  007B07  0000               	dw	0
  7444  007B09  0000               	dw	0
  7445  007B0B  0000               	dw	0
  7446  007B0D  0000               	dw	0
  7447  007B0F  0000               	dw	0
  7448  007B11  0000               	dw	0
  7449  007B13  0000               	dw	0
  7450  007B15  0000               	dw	0
  7451  007B17  0000               	dw	0
  7452  007B19  0000               	dw	0
  7453  007B1B  0000               	dw	0
  7454  007B1D  0000               	dw	0
  7455  007B1F  0000               	dw	0
  7456  007B21  0000               	dw	0
  7457  007B23  0000               	dw	0
  7458  007B25  0000               	dw	0
  7459  007B27  0000               	dw	0
  7460  007B29  0000               	dw	0
  7461  007B2B  0000               	dw	0
  7462  007B2D  0000               	dw	0
  7463  007B2F  0000               	dw	0
  7464  007B31  0000               	dw	0
  7465  007B33  0000               	dw	0
  7466  007B35  0000               	dw	0
  7467  007B37  0000               	dw	0
  7468  007B39  0000               	dw	0
  7469  007B3B  0000               	dw	0
  7470  007B3D  0000               	dw	0
  7471  007B3F  0000               	dw	0
  7472  007B41  0000               	dw	0
  7473  007B43  0000               	dw	0
  7474  007B45  0000               	dw	0
  7475  007B47  0000               	dw	0
  7476  007B49  0000               	dw	0
  7477  007B4B  0000               	dw	0
  7478  007B4D  0000               	dw	0
  7479  007B4F  0000               	dw	0
  7480  007B51  0000               	dw	0
  7481  007B53  0000               	dw	0
  7482  007B55  0000               	dw	0
  7483  007B57  0000               	dw	0
  7484  007B59  0000               	dw	0
  7485  007B5B  0000               	dw	0
  7486  007B5D  0000               	dw	0
  7487  007B5F  0000               	dw	0
  7488  007B61  0000               	dw	0
  7489  007B63  0000               	dw	0
  7490  007B65  0000               	dw	0
  7491  007B67  0000               	dw	0
  7492  007B69  0000               	dw	0
  7493  007B6B  0000               	dw	0
  7494  007B6D  0000               	dw	0
  7495  007B6F  0000               	dw	0
  7496  007B71  0000               	dw	0
  7497  007B73  0000               	dw	0
  7498  007B75  0000               	dw	0
  7499  007B77  0000               	dw	0
  7500  007B79  0000               	dw	0
  7501  007B7B  0000               	dw	0
  7502  007B7D  0000               	dw	0
  7503  007B7F  0000               	dw	0
  7504  007B81  0000               	dw	0
  7505  007B83  0000               	dw	0
  7506  007B85  0000               	dw	0
  7507  007B87  0000               	dw	0
  7508  007B89  0000               	dw	0
  7509  007B8B  0000               	dw	0
  7510  007B8D  0000               	dw	0
  7511  007B8F  0000               	dw	0
  7512  007B91  0000               	dw	0
  7513  007B93  0000               	dw	0
  7514  007B95  0000               	dw	0
  7515  007B97  0000               	dw	0
  7516  007B99  0000               	dw	0
  7517  007B9B  0000               	dw	0
  7518  007B9D  0000               	dw	0
  7519  007B9F  0000               	dw	0
  7520  007BA1  0000               	dw	0
  7521  007BA3  0000               	dw	0
  7522  007BA5  0000               	dw	0
  7523  007BA7  0000               	dw	0
  7524  007BA9  0000               	dw	0
  7525  007BAB  0000               	dw	0
  7526  007BAD  0000               	dw	0
  7527  007BAF  0000               	dw	0
  7528  007BB1  0000               	dw	0
  7529  007BB3  0000               	dw	0
  7530  007BB5  0000               	dw	0
  7531  007BB7  0000               	dw	0
  7532  007BB9  0000               	dw	0
  7533  007BBB  0000               	dw	0
  7534  007BBD  0000               	dw	0
  7535  007BBF  0000               	dw	0
  7536  007BC1  0000               	dw	0
  7537  007BC3  0000               	dw	0
  7538  007BC5  0000               	dw	0
  7539  007BC7  0000               	dw	0
  7540  007BC9  0000               	dw	0
  7541  007BCB  0000               	dw	0
  7542  007BCD  0000               	dw	0
  7543  007BCF  0000               	dw	0
  7544  007BD1  0000               	dw	0
  7545  007BD3  0000               	dw	0
  7546  007BD5  0000               	dw	0
  7547  007BD7  0000               	dw	0
  7548  007BD9  0000               	dw	0
  7549  007BDB  0000               	dw	0
  7550  007BDD  0000               	dw	0
  7551  007BDF  0000               	dw	0
  7552  007BE1  0000               	dw	0
  7553  007BE3  0000               	dw	0
  7554  007BE5  0000               	dw	0
  7555  007BE7  0000               	dw	0
  7556  007BE9  0000               	dw	0
  7557  007BEB  0000               	dw	0
  7558  007BED  0000               	dw	0
  7559  007BEF  0000               	dw	0
  7560  007BF1  0000               	dw	0
  7561  007BF3  0000               	dw	0
  7562  007BF5  0000               	dw	0
  7563  007BF7  0000               	dw	0
  7564  007BF9  0000               	dw	0
  7565  007BFB  0000               	dw	0
  7566  007BFD  0000               	dw	0
  7567  007BFF  0000               	dw	0
  7568  007C01  0000               	dw	0
  7569  007C03  0000               	dw	0
  7570  007C05  0000               	dw	0
  7571  007C07  0000               	dw	0
  7572  007C09  0000               	dw	0
  7573  007C0B  0000               	dw	0
  7574  007C0D  0000               	dw	0
  7575  007C0F  0000               	dw	0
  7576  007C11  0000               	dw	0
  7577  007C13  0000               	dw	0
  7578  007C15  0000               	dw	0
  7579  007C17  0000               	dw	0
  7580  007C19  0000               	dw	0
  7581  007C1B  0000               	dw	0
  7582  007C1D  0000               	dw	0
  7583  007C1F  0000               	dw	0
  7584  007C21  0000               	dw	0
  7585  007C23  0000               	dw	0
  7586  007C25  0000               	dw	0
  7587  007C27  0000               	dw	0
  7588  007C29  0000               	dw	0
  7589  007C2B  0000               	dw	0
  7590  007C2D  0000               	dw	0
  7591  007C2F  0000               	dw	0
  7592  007C31  0000               	dw	0
  7593  007C33  0000               	dw	0
  7594  007C35  0000               	dw	0
  7595  007C37  0000               	dw	0
  7596  007C39  0000               	dw	0
  7597  007C3B  0000               	dw	0
  7598  007C3D  0000               	dw	0
  7599  007C3F  0000               	dw	0
  7600  007C41  0000               	dw	0
  7601  007C43  0000               	dw	0
  7602  007C45  0000               	dw	0
  7603  007C47  0000               	dw	0
  7604  007C49  0000               	dw	0
  7605  007C4B  0000               	dw	0
  7606  007C4D  0000               	dw	0
  7607  007C4F  0000               	dw	0
  7608  007C51  0000               	dw	0
  7609  007C53  0000               	dw	0
  7610  007C55  0000               	dw	0
  7611  007C57  0000               	dw	0
  7612  007C59  0000               	dw	0
  7613  007C5B  0000               	dw	0
  7614  007C5D  0000               	dw	0
  7615  007C5F  0000               	dw	0
  7616  007C61  0000               	dw	0
  7617  007C63  0000               	dw	0
  7618  007C65  0000               	dw	0
  7619  007C67  0000               	dw	0
  7620  007C69  0000               	dw	0
  7621  007C6B  0000               	dw	0
  7622  007C6D  0000               	dw	0
  7623  007C6F  0000               	dw	0
  7624  007C71  0000               	dw	0
  7625  007C73  0000               	dw	0
  7626  007C75  0000               	dw	0
  7627  007C77  0000               	dw	0
  7628  007C79  0000               	dw	0
  7629  007C7B  0000               	dw	0
  7630  007C7D  0000               	dw	0
  7631  007C7F  0000               	dw	0
  7632  007C81  0000               	dw	0
  7633  007C83  0000               	dw	0
  7634  007C85  0000               	dw	0
  7635  007C87  0000               	dw	0
  7636  007C89  0000               	dw	0
  7637  007C8B  0000               	dw	0
  7638  007C8D  0000               	dw	0
  7639  007C8F  0000               	dw	0
  7640  007C91  0000               	dw	0
  7641  007C93  0000               	dw	0
  7642  007C95  0000               	dw	0
  7643  007C97  0000               	dw	0
  7644  007C99  0000               	dw	0
  7645  007C9B  0000               	dw	0
  7646  007C9D  0000               	dw	0
  7647  007C9F  0000               	dw	0
  7648  007CA1  0000               	dw	0
  7649  007CA3  0000               	dw	0
  7650  007CA5  0000               	dw	0
  7651  007CA7  0000               	dw	0
  7652  007CA9  0000               	dw	0
  7653  007CAB  0000               	dw	0
  7654  007CAD  0000               	dw	0
  7655  007CAF  0000               	dw	0
  7656  007CB1  0000               	dw	0
  7657  007CB3  0000               	dw	0
  7658  007CB5  0000               	dw	0
  7659  007CB7  0000               	dw	0
  7660  007CB9  0000               	dw	0
  7661  007CBB  0000               	dw	0
  7662  007CBD  0000               	dw	0
  7663  007CBF  0000               	dw	0
  7664  007CC1  0000               	dw	0
  7665  007CC3  0000               	dw	0
  7666  007CC5  0000               	dw	0
  7667  007CC7  0000               	dw	0
  7668  007CC9  0000               	dw	0
  7669  007CCB  0000               	dw	0
  7670  007CCD  0000               	dw	0
  7671  007CCF  0000               	dw	0
  7672  007CD1  0000               	dw	0
  7673  007CD3  0000               	dw	0
  7674  007CD5  0000               	dw	0
  7675  007CD7  0000               	dw	0
  7676  007CD9  0000               	dw	0
  7677  007CDB  0000               	dw	0
  7678  007CDD  0000               	dw	0
  7679  007CDF  0000               	dw	0
  7680  007CE1  0000               	dw	0
  7681  007CE3  0000               	dw	0
  7682  007CE5  0000               	dw	0
  7683  007CE7  0000               	dw	0
  7684  007CE9  0000               	dw	0
  7685  007CEB  0000               	dw	0
  7686  007CED  0000               	dw	0
  7687  007CEF  0000               	dw	0
  7688  007CF1  0000               	dw	0
  7689  007CF3  0000               	dw	0
  7690  007CF5  0000               	dw	0
  7691  007CF7  0000               	dw	0
  7692  007CF9  0000               	dw	0
  7693  007CFB  0000               	dw	0
  7694  007CFD  0000               	dw	0
  7695  007CFF  0000               	dw	0
  7696  007D01  0000               	dw	0
  7697  007D03  0000               	dw	0
  7698  007D05  0000               	dw	0
  7699  007D07  0000               	dw	0
  7700  007D09  0000               	dw	0
  7701  007D0B  0000               	dw	0
  7702  007D0D  0000               	dw	0
  7703  007D0F  0000               	dw	0
  7704  007D11  0000               	dw	0
  7705  007D13  0000               	dw	0
  7706  007D15  0000               	dw	0
  7707  007D17  0000               	dw	0
  7708  007D19  0000               	dw	0
  7709  007D1B  0000               	dw	0
  7710  007D1D  0000               	dw	0
  7711  007D1F  0000               	dw	0
  7712  007D21  0000               	dw	0
  7713  007D23  0000               	dw	0
  7714  007D25  0000               	dw	0
  7715  007D27  0000               	dw	0
  7716  007D29  0000               	dw	0
  7717  007D2B  0000               	dw	0
  7718  007D2D  0000               	dw	0
  7719  007D2F  0000               	dw	0
  7720  007D31  0000               	dw	0
  7721  007D33  0000               	dw	0
  7722  007D35  0000               	dw	0
  7723  007D37  0000               	dw	0
  7724  007D39  0000               	dw	0
  7725  007D3B  0000               	dw	0
  7726  007D3D  0000               	dw	0
  7727  007D3F  0000               	dw	0
  7728  007D41  0000               	dw	0
  7729  007D43  0000               	dw	0
  7730  007D45  0000               	dw	0
  7731  007D47  0000               	dw	0
  7732  007D49  0000               	dw	0
  7733  007D4B  0000               	dw	0
  7734  007D4D  0000               	dw	0
  7735  007D4F  0000               	dw	0
  7736  007D51  0000               	dw	0
  7737  007D53  0000               	dw	0
  7738  007D55  0000               	dw	0
  7739  007D57  0000               	dw	0
  7740  007D59  0000               	dw	0
  7741  007D5B  0000               	dw	0
  7742  007D5D  0000               	dw	0
  7743  007D5F  0000               	dw	0
  7744  007D61  0000               	dw	0
  7745  007D63  0000               	dw	0
  7746  007D65  0000               	dw	0
  7747  007D67  0000               	dw	0
  7748  007D69  0000               	dw	0
  7749  007D6B  0000               	dw	0
  7750  007D6D  0000               	dw	0
  7751  007D6F  0000               	dw	0
  7752  007D71  0000               	dw	0
  7753  007D73  0000               	dw	0
  7754  007D75  0000               	dw	0
  7755  007D77                     __end_of_testSet:
  7756                           	opt stack 0
  7757  007D77                     exp@coeff:
  7758                           	opt stack 0
  7759  007D77  0000               	dw	0
  7760  007D79  3F80               	dw	16256
  7761  007D7B  7218               	dw	29208
  7762  007D7D  3F31               	dw	16177
  7763  007D7F  FDF0               	dw	65008
  7764  007D81  3E75               	dw	15989
  7765  007D83  5847               	dw	22599
  7766  007D85  3D63               	dw	15715
  7767  007D87  9558               	dw	38232
  7768  007D89  3C1D               	dw	15389
  7769  007D8B  C482               	dw	50306
  7770  007D8D  3AAE               	dw	15022
  7771  007D8F  78A8               	dw	30888
  7772  007D91  3921               	dw	14625
  7773  007D93  93EF               	dw	37871
  7774  007D95  3780               	dw	14208
  7775  007D97  92A0               	dw	37536
  7776  007D99  35A7               	dw	13735
  7777  007D9B  5646               	dw	22086
  7778  007D9D  3415               	dw	13333
  7779  007D9F                     __end_ofexp@coeff:
  7780                           	opt stack 0
  7781  007D9F                     log@coeff:
  7782                           	opt stack 0
  7783  007D9F  0000               	dw	0
  7784  007DA1  0000               	dw	0
  7785  007DA3  FFC4               	dw	65476
  7786  007DA5  3F7F               	dw	16255
  7787  007DA7  EF80               	dw	61312
  7788  007DA9  BEFF               	dw	48895
  7789  007DAB  E190               	dw	57744
  7790  007DAD  3EA9               	dw	16041
  7791  007DAF  82EC               	dw	33516
  7792  007DB1  BE76               	dw	48758
  7793  007DB3  AD82               	dw	44418
  7794  007DB5  3E2B               	dw	15915
  7795  007DB7  3C0E               	dw	15374
  7796  007DB9  BDC3               	dw	48579
  7797  007DBB  D187               	dw	53639
  7798  007DBD  3D13               	dw	15635
  7799  007DBF  7841               	dw	30785
  7800  007DC1  BBD3               	dw	48083
  7801  007DC3                     __end_oflog@coeff:
  7802                           	opt stack 0
  7803  007DC3  0A                 	db	10
  7804  007DC4  2D                 	db	45
  7805  007DC5  2D                 	db	45
  7806  007DC6  2D                 	db	45
  7807  007DC7  2D                 	db	45
  7808  007DC8  2D                 	db	45
  7809  007DC9  2D                 	db	45
  7810  007DCA  2D                 	db	45
  7811  007DCB  2D                 	db	45
  7812  007DCC  2D                 	db	45
  7813  007DCD  2D                 	db	45
  7814  007DCE  2D                 	db	45
  7815  007DCF  2D                 	db	45
  7816  007DD0  2D                 	db	45
  7817  007DD1  2D                 	db	45
  7818  007DD2  2D                 	db	45
  7819  007DD3  2D                 	db	45
  7820  007DD4  2D                 	db	45
  7821  007DD5  2D                 	db	45
  7822  007DD6  2D                 	db	45
  7823  007DD7  2D                 	db	45
  7824  007DD8  2D                 	db	45
  7825  007DD9  2D                 	db	45
  7826  007DDA  2D                 	db	45
  7827  007DDB  2D                 	db	45
  7828  007DDC  2D                 	db	45
  7829  007DDD  2D                 	db	45
  7830  007DDE  2D                 	db	45
  7831  007DDF  50                 	db	80	;'P'
  7832  007DE0  72                 	db	114	;'r'
  7833  007DE1  65                 	db	101	;'e'
  7834  007DE2  64                 	db	100	;'d'
  7835  007DE3  69                 	db	105	;'i'
  7836  007DE4  63                 	db	99	;'c'
  7837  007DE5  74                 	db	116	;'t'
  7838  007DE6  69                 	db	105	;'i'
  7839  007DE7  6F                 	db	111	;'o'
  7840  007DE8  6E                 	db	110	;'n'
  7841  007DE9  20                 	db	32
  7842  007DEA  44                 	db	68	;'D'
  7843  007DEB  65                 	db	101	;'e'
  7844  007DEC  6D                 	db	109	;'m'
  7845  007DED  6F                 	db	111	;'o'
  7846  007DEE  6E                 	db	110	;'n'
  7847  007DEF  73                 	db	115	;'s'
  7848  007DF0  74                 	db	116	;'t'
  7849  007DF1  72                 	db	114	;'r'
  7850  007DF2  61                 	db	97	;'a'
  7851  007DF3  74                 	db	116	;'t'
  7852  007DF4  69                 	db	105	;'i'
  7853  007DF5  6F                 	db	111	;'o'
  7854  007DF6  6E                 	db	110	;'n'
  7855  007DF7  2D                 	db	45
  7856  007DF8  2D                 	db	45
  7857  007DF9  2D                 	db	45
  7858  007DFA  2D                 	db	45
  7859  007DFB  2D                 	db	45
  7860  007DFC  2D                 	db	45
  7861  007DFD  2D                 	db	45
  7862  007DFE  2D                 	db	45
  7863  007DFF  2D                 	db	45
  7864  007E00  2D                 	db	45
  7865  007E01  2D                 	db	45
  7866  007E02  2D                 	db	45
  7867  007E03  2D                 	db	45
  7868  007E04  2D                 	db	45
  7869  007E05  2D                 	db	45
  7870  007E06  2D                 	db	45
  7871  007E07  2D                 	db	45
  7872  007E08  2D                 	db	45
  7873  007E09  2D                 	db	45
  7874  007E0A  2D                 	db	45
  7875  007E0B  2D                 	db	45
  7876  007E0C  2D                 	db	45
  7877  007E0D  00                 	db	0
  7878  007E0E                     STR_4:
  7879  007E0E  0A                 	db	10
  7880  007E0F  2D                 	db	45
  7881  007E10  2D                 	db	45
  7882  007E11  2D                 	db	45
  7883  007E12  2D                 	db	45
  7884  007E13  2D                 	db	45
  7885  007E14  2D                 	db	45
  7886  007E15  2D                 	db	45
  7887  007E16  2D                 	db	45
  7888  007E17  2D                 	db	45
  7889  007E18  2D                 	db	45
  7890  007E19  2D                 	db	45
  7891  007E1A  2D                 	db	45
  7892  007E1B  2D                 	db	45
  7893  007E1C  2D                 	db	45
  7894  007E1D  2D                 	db	45
  7895  007E1E  2D                 	db	45
  7896  007E1F  2D                 	db	45
  7897  007E20  2D                 	db	45
  7898  007E21  4D                 	db	77	;'M'
  7899  007E22  65                 	db	101	;'e'
  7900  007E23  74                 	db	116	;'t'
  7901  007E24  72                 	db	114	;'r'
  7902  007E25  69                 	db	105	;'i'
  7903  007E26  63                 	db	99	;'c'
  7904  007E27  73                 	db	115	;'s'
  7905  007E28  20                 	db	32
  7906  007E29  66                 	db	102	;'f'
  7907  007E2A  6F                 	db	111	;'o'
  7908  007E2B  72                 	db	114	;'r'
  7909  007E2C  20                 	db	32
  7910  007E2D  74                 	db	116	;'t'
  7911  007E2E  68                 	db	104	;'h'
  7912  007E2F  65                 	db	101	;'e'
  7913  007E30  20                 	db	32
  7914  007E31  4D                 	db	77	;'M'
  7915  007E32  6F                 	db	111	;'o'
  7916  007E33  64                 	db	100	;'d'
  7917  007E34  65                 	db	101	;'e'
  7918  007E35  6C                 	db	108	;'l'
  7919  007E36  2D                 	db	45
  7920  007E37  2D                 	db	45
  7921  007E38  2D                 	db	45
  7922  007E39  2D                 	db	45
  7923  007E3A  2D                 	db	45
  7924  007E3B  2D                 	db	45
  7925  007E3C  2D                 	db	45
  7926  007E3D  2D                 	db	45
  7927  007E3E  2D                 	db	45
  7928  007E3F  2D                 	db	45
  7929  007E40  2D                 	db	45
  7930  007E41  2D                 	db	45
  7931  007E42  2D                 	db	45
  7932  007E43  2D                 	db	45
  7933  007E44  2D                 	db	45
  7934  007E45  2D                 	db	45
  7935  007E46  2D                 	db	45
  7936  007E47  2D                 	db	45
  7937  007E48  2D                 	db	45
  7938  007E49  2D                 	db	45
  7939  007E4A  2D                 	db	45
  7940  007E4B  2D                 	db	45
  7941  007E4C  2D                 	db	45
  7942  007E4D  2D                 	db	45
  7943  007E4E  2D                 	db	45
  7944  007E4F  2D                 	db	45
  7945  007E50  2D                 	db	45
  7946  007E51  0A                 	db	10
  7947  007E52  00                 	db	0
  7948  007E53                     STR_16:
  7949  007E53  2D                 	db	45
  7950  007E54  2D                 	db	45
  7951  007E55  2D                 	db	45
  7952  007E56  2D                 	db	45
  7953  007E57  2D                 	db	45
  7954  007E58  2D                 	db	45
  7955  007E59  2D                 	db	45
  7956  007E5A  2D                 	db	45
  7957  007E5B  2D                 	db	45
  7958  007E5C  2D                 	db	45
  7959  007E5D  2D                 	db	45
  7960  007E5E  2D                 	db	45
  7961  007E5F  2D                 	db	45
  7962  007E60  2D                 	db	45
  7963  007E61  2D                 	db	45
  7964  007E62  2D                 	db	45
  7965  007E63  2D                 	db	45
  7966  007E64  2D                 	db	45
  7967  007E65  43                 	db	67	;'C'
  7968  007E66  6F                 	db	111	;'o'
  7969  007E67  6E                 	db	110	;'n'
  7970  007E68  66                 	db	102	;'f'
  7971  007E69  75                 	db	117	;'u'
  7972  007E6A  73                 	db	115	;'s'
  7973  007E6B  69                 	db	105	;'i'
  7974  007E6C  6F                 	db	111	;'o'
  7975  007E6D  6E                 	db	110	;'n'
  7976  007E6E  20                 	db	32
  7977  007E6F  4D                 	db	77	;'M'
  7978  007E70  61                 	db	97	;'a'
  7979  007E71  74                 	db	116	;'t'
  7980  007E72  72                 	db	114	;'r'
  7981  007E73  69                 	db	105	;'i'
  7982  007E74  78                 	db	120	;'x'
  7983  007E75  20                 	db	32
  7984  007E76  66                 	db	102	;'f'
  7985  007E77  6F                 	db	111	;'o'
  7986  007E78  72                 	db	114	;'r'
  7987  007E79  20                 	db	32
  7988  007E7A  74                 	db	116	;'t'
  7989  007E7B  68                 	db	104	;'h'
  7990  007E7C  65                 	db	101	;'e'
  7991  007E7D  20                 	db	32
  7992  007E7E  4D                 	db	77	;'M'
  7993  007E7F  6F                 	db	111	;'o'
  7994  007E80  64                 	db	100	;'d'
  7995  007E81  65                 	db	101	;'e'
  7996  007E82  6C                 	db	108	;'l'
  7997  007E83  2D                 	db	45
  7998  007E84  2D                 	db	45
  7999  007E85  2D                 	db	45
  8000  007E86  2D                 	db	45
  8001  007E87  2D                 	db	45
  8002  007E88  2D                 	db	45
  8003  007E89  2D                 	db	45
  8004  007E8A  2D                 	db	45
  8005  007E8B  2D                 	db	45
  8006  007E8C  2D                 	db	45
  8007  007E8D  2D                 	db	45
  8008  007E8E  2D                 	db	45
  8009  007E8F  2D                 	db	45
  8010  007E90  2D                 	db	45
  8011  007E91  2D                 	db	45
  8012  007E92  2D                 	db	45
  8013  007E93  2D                 	db	45
  8014  007E94  2D                 	db	45
  8015  007E95  0A                 	db	10
  8016  007E96  00                 	db	0
  8017  007E97                     STR_25:
  8018  007E97  0A                 	db	10
  8019  007E98  53                 	db	83	;'S'
  8020  007E99  68                 	db	104	;'h'
  8021  007E9A  6F                 	db	111	;'o'
  8022  007E9B  77                 	db	119	;'w'
  8023  007E9C  69                 	db	105	;'i'
  8024  007E9D  6E                 	db	110	;'n'
  8025  007E9E  67                 	db	103	;'g'
  8026  007E9F  20                 	db	32
  8027  007EA0  6F                 	db	111	;'o'
  8028  007EA1  66                 	db	102	;'f'
  8029  007EA2  66                 	db	102	;'f'
  8030  007EA3  20                 	db	32
  8031  007EA4  74                 	db	116	;'t'
  8032  007EA5  68                 	db	104	;'h'
  8033  007EA6  65                 	db	101	;'e'
  8034  007EA7  20                 	db	32
  8035  007EA8  70                 	db	112	;'p'
  8036  007EA9  72                 	db	114	;'r'
  8037  007EAA  65                 	db	101	;'e'
  8038  007EAB  64                 	db	100	;'d'
  8039  007EAC  69                 	db	105	;'i'
  8040  007EAD  63                 	db	99	;'c'
  8041  007EAE  74                 	db	116	;'t'
  8042  007EAF  69                 	db	105	;'i'
  8043  007EB0  6F                 	db	111	;'o'
  8044  007EB1  6E                 	db	110	;'n'
  8045  007EB2  20                 	db	32
  8046  007EB3  73                 	db	115	;'s'
  8047  007EB4  6B                 	db	107	;'k'
  8048  007EB5  69                 	db	105	;'i'
  8049  007EB6  6C                 	db	108	;'l'
  8050  007EB7  6C                 	db	108	;'l'
  8051  007EB8  73                 	db	115	;'s'
  8052  007EB9  20                 	db	32
  8053  007EBA  69                 	db	105	;'i'
  8054  007EBB  6E                 	db	110	;'n'
  8055  007EBC  20                 	db	32
  8056  007EBD  74                 	db	116	;'t'
  8057  007EBE  68                 	db	104	;'h'
  8058  007EBF  65                 	db	101	;'e'
  8059  007EC0  20                 	db	32
  8060  007EC1  69                 	db	105	;'i'
  8061  007EC2  6E                 	db	110	;'n'
  8062  007EC3  70                 	db	112	;'p'
  8063  007EC4  75                 	db	117	;'u'
  8064  007EC5  74                 	db	116	;'t'
  8065  007EC6  20                 	db	32
  8066  007EC7  76                 	db	118	;'v'
  8067  007EC8  65                 	db	101	;'e'
  8068  007EC9  63                 	db	99	;'c'
  8069  007ECA  74                 	db	116	;'t'
  8070  007ECB  6F                 	db	111	;'o'
  8071  007ECC  72                 	db	114	;'r'
  8072  007ECD  3A                 	db	58	;':'
  8073  007ECE  20                 	db	32
  8074  007ECF  0A                 	db	10
  8075  007ED0  00                 	db	0
  8076  007ED1                     STR_9:
  8077  007ED1  0A                 	db	10
  8078  007ED2  4D                 	db	77	;'M'
  8079  007ED3  6F                 	db	111	;'o'
  8080  007ED4  64                 	db	100	;'d'
  8081  007ED5  65                 	db	101	;'e'
  8082  007ED6  6C                 	db	108	;'l'
  8083  007ED7  20                 	db	32
  8084  007ED8  41                 	db	65	;'A'
  8085  007ED9  63                 	db	99	;'c'
  8086  007EDA  63                 	db	99	;'c'
  8087  007EDB  75                 	db	117	;'u'
  8088  007EDC  72                 	db	114	;'r'
  8089  007EDD  61                 	db	97	;'a'
  8090  007EDE  63                 	db	99	;'c'
  8091  007EDF  79                 	db	121	;'y'
  8092  007EE0  20                 	db	32
  8093  007EE1  63                 	db	99	;'c'
  8094  007EE2  6F                 	db	111	;'o'
  8095  007EE3  6E                 	db	110	;'n'
  8096  007EE4  73                 	db	115	;'s'
  8097  007EE5  69                 	db	105	;'i'
  8098  007EE6  64                 	db	100	;'d'
  8099  007EE7  65                 	db	101	;'e'
  8100  007EE8  72                 	db	114	;'r'
  8101  007EE9  69                 	db	105	;'i'
  8102  007EEA  6E                 	db	110	;'n'
  8103  007EEB  67                 	db	103	;'g'
  8104  007EEC  20                 	db	32
  8105  007EED  25                 	db	37
  8106  007EEE  64                 	db	100	;'d'
  8107  007EEF  20                 	db	32
  8108  007EF0  74                 	db	116	;'t'
  8109  007EF1  65                 	db	101	;'e'
  8110  007EF2  73                 	db	115	;'s'
  8111  007EF3  74                 	db	116	;'t'
  8112  007EF4  20                 	db	32
  8113  007EF5  65                 	db	101	;'e'
  8114  007EF6  6E                 	db	110	;'n'
  8115  007EF7  74                 	db	116	;'t'
  8116  007EF8  72                 	db	114	;'r'
  8117  007EF9  69                 	db	105	;'i'
  8118  007EFA  65                 	db	101	;'e'
  8119  007EFB  73                 	db	115	;'s'
  8120  007EFC  3A                 	db	58	;':'
  8121  007EFD  20                 	db	32
  8122  007EFE  25                 	db	37
  8123  007EFF  66                 	db	102	;'f'
  8124  007F00  25                 	db	37
  8125  007F01  25                 	db	37
  8126  007F02  0A                 	db	10
  8127  007F03  00                 	db	0
  8128  007F04                     STR_2:
  8129  007F04  50                 	db	80	;'P'
  8130  007F05  72                 	db	114	;'r'
  8131  007F06  69                 	db	105	;'i'
  8132  007F07  6E                 	db	110	;'n'
  8133  007F08  74                 	db	116	;'t'
  8134  007F09  69                 	db	105	;'i'
  8135  007F0A  6E                 	db	110	;'n'
  8136  007F0B  67                 	db	103	;'g'
  8137  007F0C  20                 	db	32
  8138  007F0D  63                 	db	99	;'c'
  8139  007F0E  6F                 	db	111	;'o'
  8140  007F0F  6E                 	db	110	;'n'
  8141  007F10  66                 	db	102	;'f'
  8142  007F11  75                 	db	117	;'u'
  8143  007F12  73                 	db	115	;'s'
  8144  007F13  69                 	db	105	;'i'
  8145  007F14  6F                 	db	111	;'o'
  8146  007F15  6E                 	db	110	;'n'
  8147  007F16  20                 	db	32
  8148  007F17  6D                 	db	109	;'m'
  8149  007F18  61                 	db	97	;'a'
  8150  007F19  74                 	db	116	;'t'
  8151  007F1A  72                 	db	114	;'r'
  8152  007F1B  69                 	db	105	;'i'
  8153  007F1C  78                 	db	120	;'x'
  8154  007F1D  0A                 	db	10
  8155  007F1E  00                 	db	0
  8156  007F1F                     STR_5:
  8157  007F1F  4D                 	db	77	;'M'
  8158  007F20  65                 	db	101	;'e'
  8159  007F21  74                 	db	116	;'t'
  8160  007F22  72                 	db	114	;'r'
  8161  007F23  69                 	db	105	;'i'
  8162  007F24  63                 	db	99	;'c'
  8163  007F25  73                 	db	115	;'s'
  8164  007F26  20                 	db	32
  8165  007F27  66                 	db	102	;'f'
  8166  007F28  6F                 	db	111	;'o'
  8167  007F29  72                 	db	114	;'r'
  8168  007F2A  20                 	db	32
  8169  007F2B  43                 	db	67	;'C'
  8170  007F2C  6C                 	db	108	;'l'
  8171  007F2D  61                 	db	97	;'a'
  8172  007F2E  73                 	db	115	;'s'
  8173  007F2F  73                 	db	115	;'s'
  8174  007F30  20                 	db	32
  8175  007F31  25                 	db	37
  8176  007F32  64                 	db	100	;'d'
  8177  007F33  0A                 	db	10
  8178  007F34  00                 	db	0
  8179  007F35  0A                 	db	10
  8180  007F36  50                 	db	80	;'P'
  8181  007F37  72                 	db	114	;'r'
  8182  007F38  65                 	db	101	;'e'
  8183  007F39  64                 	db	100	;'d'
  8184  007F3A  69                 	db	105	;'i'
  8185  007F3B  63                 	db	99	;'c'
  8186  007F3C  74                 	db	116	;'t'
  8187  007F3D  65                 	db	101	;'e'
  8188  007F3E  64                 	db	100	;'d'
  8189  007F3F  20                 	db	32
  8190  007F40  63                 	db	99	;'c'
  8191  007F41  6C                 	db	108	;'l'
  8192  007F42  61                 	db	97	;'a'
  8193  007F43  73                 	db	115	;'s'
  8194  007F44  73                 	db	115	;'s'
  8195  007F45  20                 	db	32
  8196  007F46  25                 	db	37
  8197  007F47  64                 	db	100	;'d'
  8198  007F48  0A                 	db	10
  8199  007F49  00                 	db	0
  8200  007F4A                     STR_1:
  8201  007F4A  43                 	db	67	;'C'
  8202  007F4B  61                 	db	97	;'a'
  8203  007F4C  6C                 	db	108	;'l'
  8204  007F4D  63                 	db	99	;'c'
  8205  007F4E  75                 	db	117	;'u'
  8206  007F4F  6C                 	db	108	;'l'
  8207  007F50  61                 	db	97	;'a'
  8208  007F51  74                 	db	116	;'t'
  8209  007F52  69                 	db	105	;'i'
  8210  007F53  6E                 	db	110	;'n'
  8211  007F54  67                 	db	103	;'g'
  8212  007F55  20                 	db	32
  8213  007F56  6D                 	db	109	;'m'
  8214  007F57  65                 	db	101	;'e'
  8215  007F58  74                 	db	116	;'t'
  8216  007F59  72                 	db	114	;'r'
  8217  007F5A  69                 	db	105	;'i'
  8218  007F5B  63                 	db	99	;'c'
  8219  007F5C  73                 	db	115	;'s'
  8220  007F5D  0A                 	db	10
  8221  007F5E  00                 	db	0
  8222  007F5F  28                 	db	40
  8223  007F60  25                 	db	37
  8224  007F61  31                 	db	49	;'1'
  8225  007F62  31                 	db	49	;'1'
  8226  007F63  2E                 	db	46
  8227  007F64  36                 	db	54	;'6'
  8228  007F65  66                 	db	102	;'f'
  8229  007F66  2C                 	db	44
  8230  007F67  20                 	db	32
  8231  007F68  25                 	db	37
  8232  007F69  31                 	db	49	;'1'
  8233  007F6A  31                 	db	49	;'1'
  8234  007F6B  2E                 	db	46
  8235  007F6C  36                 	db	54	;'6'
  8236  007F6D  66                 	db	102	;'f'
  8237  007F6E  29                 	db	41
  8238  007F6F  0A                 	db	10
  8239  007F70  00                 	db	0
  8240  007F71                     STR_3:
  8241  007F71  50                 	db	80	;'P'
  8242  007F72  72                 	db	114	;'r'
  8243  007F73  69                 	db	105	;'i'
  8244  007F74  6E                 	db	110	;'n'
  8245  007F75  74                 	db	116	;'t'
  8246  007F76  69                 	db	105	;'i'
  8247  007F77  6E                 	db	110	;'n'
  8248  007F78  67                 	db	103	;'g'
  8249  007F79  20                 	db	32
  8250  007F7A  6D                 	db	109	;'m'
  8251  007F7B  65                 	db	101	;'e'
  8252  007F7C  74                 	db	116	;'t'
  8253  007F7D  72                 	db	114	;'r'
  8254  007F7E  69                 	db	105	;'i'
  8255  007F7F  63                 	db	99	;'c'
  8256  007F80  73                 	db	115	;'s'
  8257  007F81  0A                 	db	10
  8258  007F82  00                 	db	0
  8259  007F83                     STR_6:
  8260  007F83  50                 	db	80	;'P'
  8261  007F84  72                 	db	114	;'r'
  8262  007F85  65                 	db	101	;'e'
  8263  007F86  63                 	db	99	;'c'
  8264  007F87  69                 	db	105	;'i'
  8265  007F88  73                 	db	115	;'s'
  8266  007F89  69                 	db	105	;'i'
  8267  007F8A  6F                 	db	111	;'o'
  8268  007F8B  6E                 	db	110	;'n'
  8269  007F8C  20                 	db	32
  8270  007F8D  25                 	db	37
  8271  007F8E  32                 	db	50	;'2'
  8272  007F8F  2E                 	db	46
  8273  007F90  32                 	db	50	;'2'
  8274  007F91  66                 	db	102	;'f'
  8275  007F92  0A                 	db	10
  8276  007F93  00                 	db	0
  8277  007F94  49                 	db	73	;'I'
  8278  007F95  74                 	db	116	;'t'
  8279  007F96  27                 	db	39
  8280  007F97  73                 	db	115	;'s'
  8281  007F98  20                 	db	32
  8282  007F99  61                 	db	97	;'a'
  8283  007F9A  20                 	db	32
  8284  007F9B  6D                 	db	109	;'m'
  8285  007F9C  69                 	db	105	;'i'
  8286  007F9D  73                 	db	115	;'s'
  8287  007F9E  73                 	db	115	;'s'
  8288  007F9F  20                 	db	32
  8289  007FA0  3A                 	db	58	;':'
  8290  007FA1  28                 	db	40
  8291  007FA2  0A                 	db	10
  8292  007FA3  00                 	db	0
  8293  007FA4  49                 	db	73	;'I'
  8294  007FA5  74                 	db	116	;'t'
  8295  007FA6  27                 	db	39
  8296  007FA7  73                 	db	115	;'s'
  8297  007FA8  20                 	db	32
  8298  007FA9  61                 	db	97	;'a'
  8299  007FAA  20                 	db	32
  8300  007FAB  68                 	db	104	;'h'
  8301  007FAC  69                 	db	105	;'i'
  8302  007FAD  74                 	db	116	;'t'
  8303  007FAE  20                 	db	32
  8304  007FAF  3A                 	db	58	;':'
  8305  007FB0  29                 	db	41
  8306  007FB1  0A                 	db	10
  8307  007FB2  00                 	db	0
  8308  007FB3                     STR_7:
  8309  007FB3  52                 	db	82	;'R'
  8310  007FB4  65                 	db	101	;'e'
  8311  007FB5  63                 	db	99	;'c'
  8312  007FB6  61                 	db	97	;'a'
  8313  007FB7  6C                 	db	108	;'l'
  8314  007FB8  6C                 	db	108	;'l'
  8315  007FB9  20                 	db	32
  8316  007FBA  25                 	db	37
  8317  007FBB  32                 	db	50	;'2'
  8318  007FBC  2E                 	db	46
  8319  007FBD  32                 	db	50	;'2'
  8320  007FBE  66                 	db	102	;'f'
  8321  007FBF  0A                 	db	10
  8322  007FC0  00                 	db	0
  8323  007FC1  43                 	db	67	;'C'
  8324  007FC2  6C                 	db	108	;'l'
  8325  007FC3  61                 	db	97	;'a'
  8326  007FC4  73                 	db	115	;'s'
  8327  007FC5  73                 	db	115	;'s'
  8328  007FC6  65                 	db	101	;'e'
  8329  007FC7  20                 	db	32
  8330  007FC8  25                 	db	37
  8331  007FC9  64                 	db	100	;'d'
  8332  007FCA  3A                 	db	58	;':'
  8333  007FCB  0A                 	db	10
  8334  007FCC  00                 	db	0
  8335  007FCD                     STR_17:
  8336  007FCD  20                 	db	32
  8337  007FCE  20                 	db	32
  8338  007FCF  20                 	db	32
  8339  007FD0  20                 	db	32
  8340  007FD1  20                 	db	32
  8341  007FD2  20                 	db	32
  8342  007FD3  20                 	db	32
  8343  007FD4  20                 	db	32
  8344  007FD5  20                 	db	32
  8345  007FD6  20                 	db	32
  8346  007FD7  00                 	db	0
  8347  007FD8                     STR_20:
  8348  007FD8  43                 	db	67	;'C'
  8349  007FD9  6C                 	db	108	;'l'
  8350  007FDA  61                 	db	97	;'a'
  8351  007FDB  73                 	db	115	;'s'
  8352  007FDC  73                 	db	115	;'s'
  8353  007FDD  20                 	db	32
  8354  007FDE  25                 	db	37
  8355  007FDF  64                 	db	100	;'d'
  8356  007FE0  20                 	db	32
  8357  007FE1  7C                 	db	124
  8358  007FE2  00                 	db	0
  8359  007FE3                     STR_21:
  8360  007FE3  20                 	db	32
  8361  007FE4  20                 	db	32
  8362  007FE5  25                 	db	37
  8363  007FE6  64                 	db	100	;'d'
  8364  007FE7  20                 	db	32
  8365  007FE8  20                 	db	32
  8366  007FE9  20                 	db	32
  8367  007FEA  00                 	db	0
  8368  007FEB                     STR_18:
  8369  007FEB  20                 	db	32
  8370  007FEC  43                 	db	67	;'C'
  8371  007FED  25                 	db	37
  8372  007FEE  64                 	db	100	;'d'
  8373  007FEF  20                 	db	32
  8374  007FF0  20                 	db	32
  8375  007FF1  20                 	db	32
  8376  007FF2  00                 	db	0
  8377  007FF3                     STR_23:
  8378  007FF3  25                 	db	37
  8379  007FF4  32                 	db	50	;'2'
  8380  007FF5  2E                 	db	46
  8381  007FF6  32                 	db	50	;'2'
  8382  007FF7  66                 	db	102	;'f'
  8383  007FF8  2C                 	db	44
  8384  007FF9  20                 	db	32
  8385  007FFA  00                 	db	0
  8386  007FFB  25                 	db	37
  8387  007FFC  66                 	db	102	;'f'
  8388  007FFD  00                 	db	0
  8389  0000                     
  8390                           ; #config settings
  8391  007FFE  00                 	db	0	; dummy byte at the end
  8392  0000                     
  8393                           	psect	nvCOMRAM
  8394  00005F                     __pnvCOMRAM:
  8395                           	opt stack 0
  8396  00005F                     _UART1Config:
  8397                           	opt stack 0
  8398  00005F                     	ds	1
  8399                           
  8400                           	psect	nvBANK1
  8401  00013F                     __pnvBANK1:
  8402                           	opt stack 0
  8403  00013F                     _baud:
  8404                           	opt stack 0
  8405  00013F                     	ds	1
  8406  0000                     _PIE1bits	set	3997
  8407  0000                     _PIR1bits	set	3998
  8408  0000                     _RCSTA	set	4011
  8409  0000                     _RCSTAbits	set	4011
  8410  0000                     _SPBRG	set	4015
  8411  0000                     _SPBRGH	set	4016
  8412  0000                     _TRISCbits	set	3988
  8413  0000                     _TXREG	set	4013
  8414  0000                     _TXSTA	set	4012
  8415  0000                     _TXSTAbits	set	4012
  8416                           
  8417                           	psect	cinit
  8418  0002AE                     __pcinit:
  8419                           	opt stack 0
  8420  0002AE                     start_initialization:
  8421                           	opt stack 0
  8422  0002AE                     __initialization:
  8423                           	opt stack 0
  8424                           
  8425                           ; Clear objects allocated to BANK2 (200 bytes)
  8426  0002AE  EE02  F000         	lfsr	0,__pbssBANK2
  8427  0002B2  0EC8               	movlw	200
  8428  0002B4                     clear_0:
  8429  0002B4  6AEE               	clrf	postinc0,c
  8430  0002B6  06E8               	decf	wreg,f,c
  8431  0002B8  E1FD               	bnz	clear_0
  8432                           
  8433                           ; Clear objects allocated to BANK1 (2 bytes)
  8434  0002BA  0101               	movlb	1
  8435  0002BC  6B3E               	clrf	(__pbssBANK1+1)& (0+255),b
  8436  0002BE  6B3D               	clrf	__pbssBANK1& (0+255),b
  8437  0002C0                     end_of_initialization:
  8438                           	opt stack 0
  8439  0002C0                     __end_of__initialization:
  8440                           	opt stack 0
  8441  0002C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  8442  0002C2  6EF8               	movwf	tblptru,c
  8443  0002C4  0100               	movlb	0
  8444  0002C6  EF9E  F001         	goto	_main	;jump to C main() function
  8445                           tblptru	equ	0xFF8
  8446                           postinc0	equ	0xFEE
  8447                           wreg	equ	0xFE8
  8448                           
  8449                           	psect	bssBANK1
  8450  00013D                     __pbssBANK1:
  8451                           	opt stack 0
  8452  00013D                     _errno:
  8453                           	opt stack 0
  8454  00013D                     	ds	2
  8455                           tblptru	equ	0xFF8
  8456                           postinc0	equ	0xFEE
  8457                           wreg	equ	0xFE8
  8458                           
  8459                           	psect	bssBANK2
  8460  000200                     __pbssBANK2:
  8461                           	opt stack 0
  8462  000200                     _confusionMatrix:
  8463                           	opt stack 0
  8464  000200                     	ds	200
  8465                           tblptru	equ	0xFF8
  8466                           postinc0	equ	0xFEE
  8467                           wreg	equ	0xFE8
  8468                           
  8469                           	psect	cstackBANK1
  8470  000100                     __pcstackBANK1:
  8471                           	opt stack 0
  8472  000100                     calculateMetrics@prediction:
  8473                           	opt stack 0
  8474  000100                     getAccuracy@prediction:
  8475                           	opt stack 0
  8476                           
  8477                           ; 2 bytes @ 0x0
  8478  000100                     	ds	2
  8479  000102                     _calculateMetrics$1382:
  8480                           	opt stack 0
  8481  000102                     _getAccuracy$1384:
  8482                           	opt stack 0
  8483                           
  8484                           ; 2 bytes @ 0x2
  8485  000102                     	ds	2
  8486  000104                     getAccuracy@correct:
  8487                           	opt stack 0
  8488  000104                     _calculateMetrics$1383:
  8489                           	opt stack 0
  8490                           
  8491                           ; 2 bytes @ 0x4
  8492  000104                     	ds	2
  8493  000106                     calculateMetrics@j:
  8494                           	opt stack 0
  8495  000106                     getAccuracy@i:
  8496                           	opt stack 0
  8497                           
  8498                           ; 2 bytes @ 0x6
  8499  000106                     	ds	2
  8500  000108                     ?_printf:
  8501                           	opt stack 0
  8502  000108                     calculateMetrics@i:
  8503                           	opt stack 0
  8504  000108                     printf@f:
  8505                           	opt stack 0
  8506                           
  8507                           ; 2 bytes @ 0x8
  8508  000108                     	ds	10
  8509  000112                     ??_printf:
  8510                           
  8511                           ; 1 bytes @ 0x12
  8512  000112                     	ds	4
  8513  000116                     _printf$1394:
  8514                           	opt stack 0
  8515                           
  8516                           ; 4 bytes @ 0x16
  8517  000116                     	ds	4
  8518  00011A                     printf@cp:
  8519                           	opt stack 0
  8520                           
  8521                           ; 2 bytes @ 0x1A
  8522  00011A                     	ds	2
  8523  00011C                     printf@ap:
  8524                           	opt stack 0
  8525                           
  8526                           ; 2 bytes @ 0x1C
  8527  00011C                     	ds	2
  8528  00011E                     printf@len:
  8529                           	opt stack 0
  8530                           
  8531                           ; 2 bytes @ 0x1E
  8532  00011E                     	ds	2
  8533  000120                     printf@flag:
  8534                           	opt stack 0
  8535                           
  8536                           ; 2 bytes @ 0x20
  8537  000120                     	ds	2
  8538  000122                     printf@tmpval:
  8539                           	opt stack 0
  8540                           
  8541                           ; 4 bytes @ 0x22
  8542  000122                     	ds	4
  8543  000126                     printf@val:
  8544                           	opt stack 0
  8545                           
  8546                           ; 4 bytes @ 0x26
  8547  000126                     	ds	4
  8548  00012A                     printf@exp:
  8549                           	opt stack 0
  8550                           
  8551                           ; 2 bytes @ 0x2A
  8552  00012A                     	ds	2
  8553  00012C                     printf@width:
  8554                           	opt stack 0
  8555                           
  8556                           ; 2 bytes @ 0x2C
  8557  00012C                     	ds	2
  8558  00012E                     printf@fval:
  8559                           	opt stack 0
  8560                           
  8561                           ; 4 bytes @ 0x2E
  8562  00012E                     	ds	4
  8563  000132                     printf@prec:
  8564                           	opt stack 0
  8565                           
  8566                           ; 2 bytes @ 0x32
  8567  000132                     	ds	2
  8568  000134                     printf@c:
  8569                           	opt stack 0
  8570                           
  8571                           ; 1 bytes @ 0x34
  8572  000134                     	ds	1
  8573  000135                     ??_printConfusionMatrix:
  8574  000135                     printMetrics@i:
  8575                           	opt stack 0
  8576                           
  8577                           ; 2 bytes @ 0x35
  8578  000135                     	ds	2
  8579  000137                     _printConfusionMatrix$1388:
  8580                           	opt stack 0
  8581                           
  8582                           ; 2 bytes @ 0x37
  8583  000137                     	ds	2
  8584  000139                     printConfusionMatrix@j:
  8585                           	opt stack 0
  8586                           
  8587                           ; 2 bytes @ 0x39
  8588  000139                     	ds	2
  8589  00013B                     printConfusionMatrix@i:
  8590                           	opt stack 0
  8591                           
  8592                           ; 2 bytes @ 0x3B
  8593  00013B                     	ds	2
  8594                           tblptru	equ	0xFF8
  8595                           postinc0	equ	0xFEE
  8596                           wreg	equ	0xFE8
  8597                           
  8598                           	psect	cstackBANK0
  8599  000060                     __pcstackBANK0:
  8600                           	opt stack 0
  8601  000060                     ??___fltol:
  8602  000060                     ?___fladd:
  8603                           	opt stack 0
  8604  000060                     ___fladd@b:
  8605                           	opt stack 0
  8606                           
  8607                           ; 4 bytes @ 0x0
  8608  000060                     	ds	4
  8609  000064                     ___fladd@a:
  8610                           	opt stack 0
  8611                           
  8612                           ; 4 bytes @ 0x4
  8613  000064                     	ds	4
  8614  000068                     ??___fladd:
  8615                           
  8616                           ; 1 bytes @ 0x8
  8617  000068                     	ds	8
  8618  000070                     ___fladd@signs:
  8619                           	opt stack 0
  8620                           
  8621                           ; 1 bytes @ 0x10
  8622  000070                     	ds	1
  8623  000071                     ___fladd@aexp:
  8624                           	opt stack 0
  8625                           
  8626                           ; 1 bytes @ 0x11
  8627  000071                     	ds	1
  8628  000072                     ___fladd@bexp:
  8629                           	opt stack 0
  8630                           
  8631                           ; 1 bytes @ 0x12
  8632  000072                     	ds	1
  8633  000073                     ___fladd@grs:
  8634                           	opt stack 0
  8635                           
  8636                           ; 1 bytes @ 0x13
  8637  000073                     	ds	1
  8638  000074                     ?___flsub:
  8639                           	opt stack 0
  8640  000074                     ?_floor:
  8641                           	opt stack 0
  8642  000074                     ?_eval_poly:
  8643                           	opt stack 0
  8644  000074                     floor@x:
  8645                           	opt stack 0
  8646  000074                     ___flsub@b:
  8647                           	opt stack 0
  8648  000074                     eval_poly@x:
  8649                           	opt stack 0
  8650                           
  8651                           ; 4 bytes @ 0x14
  8652  000074                     	ds	4
  8653  000078                     eval_poly@d:
  8654                           	opt stack 0
  8655  000078                     floor@i:
  8656                           	opt stack 0
  8657  000078                     ___flsub@a:
  8658                           	opt stack 0
  8659                           
  8660                           ; 4 bytes @ 0x18
  8661  000078                     	ds	2
  8662  00007A                     eval_poly@n:
  8663                           	opt stack 0
  8664                           
  8665                           ; 2 bytes @ 0x1A
  8666  00007A                     	ds	2
  8667  00007C                     ??_eval_poly:
  8668  00007C                     floor@expon:
  8669                           	opt stack 0
  8670                           
  8671                           ; 2 bytes @ 0x1C
  8672  00007C                     	ds	4
  8673  000080                     eval_poly@res:
  8674                           	opt stack 0
  8675                           
  8676                           ; 4 bytes @ 0x20
  8677  000080                     	ds	4
  8678  000084                     ?_log:
  8679                           	opt stack 0
  8680  000084                     ?_ldexp:
  8681                           	opt stack 0
  8682  000084                     ldexp@value:
  8683                           	opt stack 0
  8684  000084                     log@x:
  8685                           	opt stack 0
  8686                           
  8687                           ; 4 bytes @ 0x24
  8688  000084                     	ds	4
  8689  000088                     ldexp@newexp:
  8690                           	opt stack 0
  8691                           
  8692                           ; 2 bytes @ 0x28
  8693  000088                     	ds	2
  8694  00008A                     ?_exp:
  8695                           	opt stack 0
  8696  00008A                     exp@x:
  8697                           	opt stack 0
  8698                           
  8699                           ; 4 bytes @ 0x2A
  8700  00008A                     	ds	4
  8701  00008E                     _exp$1395:
  8702                           	opt stack 0
  8703                           
  8704                           ; 4 bytes @ 0x2E
  8705  00008E                     	ds	4
  8706  000092                     exp@exponent:
  8707                           	opt stack 0
  8708                           
  8709                           ; 2 bytes @ 0x32
  8710  000092                     	ds	2
  8711  000094                     exp@sign:
  8712                           	opt stack 0
  8713                           
  8714                           ; 1 bytes @ 0x34
  8715  000094                     	ds	1
  8716  000095                     ?_pow:
  8717                           	opt stack 0
  8718  000095                     pow@x:
  8719                           	opt stack 0
  8720                           
  8721                           ; 4 bytes @ 0x35
  8722  000095                     	ds	4
  8723  000099                     pow@y:
  8724                           	opt stack 0
  8725                           
  8726                           ; 4 bytes @ 0x39
  8727  000099                     	ds	4
  8728  00009D                     _pow$1397:
  8729                           	opt stack 0
  8730                           
  8731                           ; 4 bytes @ 0x3D
  8732  00009D                     	ds	4
  8733  0000A1                     _pow$1398:
  8734                           	opt stack 0
  8735                           
  8736                           ; 4 bytes @ 0x41
  8737  0000A1                     	ds	4
  8738  0000A5                     pow@sign:
  8739                           	opt stack 0
  8740                           
  8741                           ; 1 bytes @ 0x45
  8742  0000A5                     	ds	1
  8743  0000A6                     pow@yi:
  8744                           	opt stack 0
  8745                           
  8746                           ; 4 bytes @ 0x46
  8747  0000A6                     	ds	4
  8748  0000AA                     ?_calculateProbability:
  8749                           	opt stack 0
  8750  0000AA                     calculateProbability@x:
  8751                           	opt stack 0
  8752                           
  8753                           ; 4 bytes @ 0x4A
  8754  0000AA                     	ds	4
  8755  0000AE                     calculateProbability@mean:
  8756                           	opt stack 0
  8757                           
  8758                           ; 4 bytes @ 0x4E
  8759  0000AE                     	ds	4
  8760  0000B2                     calculateProbability@stdev:
  8761                           	opt stack 0
  8762                           
  8763                           ; 4 bytes @ 0x52
  8764  0000B2                     	ds	4
  8765  0000B6                     calculateProbability@exponent:
  8766                           	opt stack 0
  8767                           
  8768                           ; 4 bytes @ 0x56
  8769  0000B6                     	ds	4
  8770  0000BA                     _calculateProbability$1376:
  8771                           	opt stack 0
  8772                           
  8773                           ; 4 bytes @ 0x5A
  8774  0000BA                     	ds	4
  8775  0000BE                     _calculateProbability$1377:
  8776                           	opt stack 0
  8777                           
  8778                           ; 4 bytes @ 0x5E
  8779  0000BE                     	ds	4
  8780  0000C2                     _calculateProbability$1378:
  8781                           	opt stack 0
  8782                           
  8783                           ; 4 bytes @ 0x62
  8784  0000C2                     	ds	4
  8785  0000C6                     _calculateProbability$1379:
  8786                           	opt stack 0
  8787                           
  8788                           ; 4 bytes @ 0x66
  8789  0000C6                     	ds	4
  8790  0000CA                     _calculateProbability$1380:
  8791                           	opt stack 0
  8792                           
  8793                           ; 4 bytes @ 0x6A
  8794  0000CA                     	ds	4
  8795  0000CE                     calculateProbability@res:
  8796                           	opt stack 0
  8797                           
  8798                           ; 4 bytes @ 0x6E
  8799  0000CE                     	ds	4
  8800  0000D2                     ?_calculateClassProbability:
  8801                           	opt stack 0
  8802  0000D2                     calculateClassProbability@classNumber:
  8803                           	opt stack 0
  8804                           
  8805                           ; 2 bytes @ 0x72
  8806  0000D2                     	ds	2
  8807  0000D4                     calculateClassProbability@inputVector:
  8808                           	opt stack 0
  8809                           
  8810                           ; 2 bytes @ 0x74
  8811  0000D4                     	ds	2
  8812  0000D6                     ??_calculateClassProbability:
  8813                           
  8814                           ; 1 bytes @ 0x76
  8815  0000D6                     	ds	12
  8816  0000E2                     _calculateClassProbability$1381:
  8817                           	opt stack 0
  8818                           
  8819                           ; 4 bytes @ 0x82
  8820  0000E2                     	ds	4
  8821  0000E6                     calculateClassProbability@classProbability:
  8822                           	opt stack 0
  8823                           
  8824                           ; 4 bytes @ 0x86
  8825  0000E6                     	ds	4
  8826  0000EA                     calculateClassProbability@i:
  8827                           	opt stack 0
  8828                           
  8829                           ; 2 bytes @ 0x8A
  8830  0000EA                     	ds	2
  8831  0000EC                     ?_predict:
  8832                           	opt stack 0
  8833  0000EC                     predict@inputVector:
  8834                           	opt stack 0
  8835                           
  8836                           ; 2 bytes @ 0x8C
  8837  0000EC                     	ds	2
  8838  0000EE                     predict@bestProb:
  8839                           	opt stack 0
  8840                           
  8841                           ; 4 bytes @ 0x8E
  8842  0000EE                     	ds	4
  8843  0000F2                     predict@classProb:
  8844                           	opt stack 0
  8845                           
  8846                           ; 4 bytes @ 0x92
  8847  0000F2                     	ds	4
  8848  0000F6                     predict@bestLabel:
  8849                           	opt stack 0
  8850                           
  8851                           ; 2 bytes @ 0x96
  8852  0000F6                     	ds	2
  8853  0000F8                     predict@i:
  8854                           	opt stack 0
  8855                           
  8856                           ; 2 bytes @ 0x98
  8857  0000F8                     	ds	2
  8858  0000FA                     ??_calculateMetrics:
  8859  0000FA                     ?_getAccuracy:
  8860                           	opt stack 0
  8861                           
  8862                           ; 4 bytes @ 0x9A
  8863  0000FA                     	ds	4
  8864  0000FE                     ??_getAccuracy:
  8865                           
  8866                           ; 1 bytes @ 0x9E
  8867  0000FE                     	ds	2
  8868                           tblptru	equ	0xFF8
  8869                           postinc0	equ	0xFEE
  8870                           wreg	equ	0xFE8
  8871                           
  8872                           	psect	cstackCOMRAM
  8873  000001                     __pcstackCOMRAM:
  8874                           	opt stack 0
  8875  000001                     ??_isdigit:
  8876  000001                     ?___wmul:
  8877                           	opt stack 0
  8878  000001                     ?___awmod:
  8879                           	opt stack 0
  8880  000001                     ?_sqrt:
  8881                           	opt stack 0
  8882  000001                     ?__tdiv_to_l_:
  8883                           	opt stack 0
  8884  000001                     ?__div_to_l_:
  8885                           	opt stack 0
  8886  000001                     ?_frexp:
  8887                           	opt stack 0
  8888  000001                     ?___flneg:
  8889                           	opt stack 0
  8890  000001                     ?___lldiv:
  8891                           	opt stack 0
  8892  000001                     putch@data:
  8893                           	opt stack 0
  8894  000001                     OpenUSART@spbrg:
  8895                           	opt stack 0
  8896  000001                     ___wmul@multiplier:
  8897                           	opt stack 0
  8898  000001                     ___awmod@dividend:
  8899                           	opt stack 0
  8900  000001                     __div_to_l_@f1:
  8901                           	opt stack 0
  8902  000001                     ___flge@ff1:
  8903                           	opt stack 0
  8904  000001                     ___flneg@f1:
  8905                           	opt stack 0
  8906  000001                     frexp@value:
  8907                           	opt stack 0
  8908  000001                     __tdiv_to_l_@f1:
  8909                           	opt stack 0
  8910  000001                     ___lldiv@dividend:
  8911                           	opt stack 0
  8912  000001                     sqrt@a:
  8913                           	opt stack 0
  8914                           
  8915                           ; 4 bytes @ 0x0
  8916  000001                     	ds	1
  8917  000002                     _isdigit$959:
  8918                           	opt stack 0
  8919                           
  8920                           ; 1 bytes @ 0x1
  8921  000002                     	ds	1
  8922  000003                     OpenUSART@config:
  8923                           	opt stack 0
  8924  000003                     isdigit@c:
  8925                           	opt stack 0
  8926  000003                     ___wmul@multiplicand:
  8927                           	opt stack 0
  8928  000003                     ___awmod@divisor:
  8929                           	opt stack 0
  8930                           
  8931                           ; 2 bytes @ 0x2
  8932  000003                     	ds	1
  8933  000004                     
  8934                           ; 1 bytes @ 0x3
  8935  000004                     	ds	1
  8936  000005                     ??_sqrt:
  8937  000005                     ___awmod@counter:
  8938                           	opt stack 0
  8939  000005                     ___wmul@product:
  8940                           	opt stack 0
  8941  000005                     frexp@eptr:
  8942                           	opt stack 0
  8943  000005                     __div_to_l_@f2:
  8944                           	opt stack 0
  8945  000005                     ___flge@ff2:
  8946                           	opt stack 0
  8947  000005                     __tdiv_to_l_@f2:
  8948                           	opt stack 0
  8949  000005                     ___lldiv@divisor:
  8950                           	opt stack 0
  8951                           
  8952                           ; 4 bytes @ 0x4
  8953  000005                     	ds	1
  8954  000006                     ___awmod@sign:
  8955                           	opt stack 0
  8956                           
  8957                           ; 1 bytes @ 0x5
  8958  000006                     	ds	1
  8959  000007                     ??_frexp:
  8960  000007                     ?___awdiv:
  8961                           	opt stack 0
  8962  000007                     ?___xxtofl:
  8963                           	opt stack 0
  8964  000007                     ___awdiv@dividend:
  8965                           	opt stack 0
  8966  000007                     ___xxtofl@val:
  8967                           	opt stack 0
  8968                           
  8969                           ; 4 bytes @ 0x6
  8970  000007                     	ds	2
  8971  000009                     ??__tdiv_to_l_:
  8972  000009                     ??___flge:
  8973  000009                     sqrt@sign:
  8974                           	opt stack 0
  8975  000009                     ___awdiv@divisor:
  8976                           	opt stack 0
  8977  000009                     __div_to_l_@quot:
  8978                           	opt stack 0
  8979  000009                     ___lldiv@quotient:
  8980                           	opt stack 0
  8981                           
  8982                           ; 4 bytes @ 0x8
  8983  000009                     	ds	1
  8984  00000A                     sqrt@i:
  8985                           	opt stack 0
  8986                           
  8987                           ; 1 bytes @ 0x9
  8988  00000A                     	ds	1
  8989  00000B                     ??___xxtofl:
  8990  00000B                     ___awdiv@counter:
  8991                           	opt stack 0
  8992  00000B                     sqrt@tfrac:
  8993                           	opt stack 0
  8994                           
  8995                           ; 4 bytes @ 0xA
  8996  00000B                     	ds	1
  8997  00000C                     ___awdiv@sign:
  8998                           	opt stack 0
  8999  00000C                     __tdiv_to_l_@quot:
  9000                           	opt stack 0
  9001                           
  9002                           ; 4 bytes @ 0xB
  9003  00000C                     	ds	1
  9004  00000D                     __div_to_l_@cntr:
  9005                           	opt stack 0
  9006  00000D                     ___lldiv@counter:
  9007                           	opt stack 0
  9008  00000D                     ___awdiv@quotient:
  9009                           	opt stack 0
  9010                           
  9011                           ; 2 bytes @ 0xC
  9012  00000D                     	ds	1
  9013  00000E                     ?___llmod:
  9014                           	opt stack 0
  9015  00000E                     __div_to_l_@exp1:
  9016                           	opt stack 0
  9017  00000E                     ___llmod@dividend:
  9018                           	opt stack 0
  9019                           
  9020                           ; 4 bytes @ 0xD
  9021  00000E                     	ds	1
  9022  00000F                     sqrt@p:
  9023                           	opt stack 0
  9024  00000F                     ___xxtofl@sign:
  9025                           	opt stack 0
  9026                           
  9027                           ; 1 bytes @ 0xE
  9028  00000F                     	ds	1
  9029  000010                     __tdiv_to_l_@cntr:
  9030                           	opt stack 0
  9031  000010                     ___xxtofl@exp:
  9032                           	opt stack 0
  9033  000010                     sqrt@grs:
  9034                           	opt stack 0
  9035                           
  9036                           ; 4 bytes @ 0xF
  9037  000010                     	ds	1
  9038  000011                     __tdiv_to_l_@exp1:
  9039                           	opt stack 0
  9040  000011                     ___xxtofl@arg:
  9041                           	opt stack 0
  9042                           
  9043                           ; 4 bytes @ 0x10
  9044  000011                     	ds	1
  9045  000012                     ___llmod@divisor:
  9046                           	opt stack 0
  9047                           
  9048                           ; 4 bytes @ 0x11
  9049  000012                     	ds	2
  9050  000014                     sqrt@exp:
  9051                           	opt stack 0
  9052                           
  9053                           ; 2 bytes @ 0x13
  9054  000014                     	ds	2
  9055  000016                     ___llmod@counter:
  9056                           	opt stack 0
  9057  000016                     sqrt@root:
  9058                           	opt stack 0
  9059                           
  9060                           ; 4 bytes @ 0x15
  9061  000016                     	ds	4
  9062  00001A                     sqrt@frac:
  9063                           	opt stack 0
  9064                           
  9065                           ; 4 bytes @ 0x19
  9066  00001A                     	ds	4
  9067  00001E                     ?___fldiv:
  9068                           	opt stack 0
  9069  00001E                     ___fldiv@b:
  9070                           	opt stack 0
  9071                           
  9072                           ; 4 bytes @ 0x1D
  9073  00001E                     	ds	4
  9074  000022                     ___fldiv@a:
  9075                           	opt stack 0
  9076                           
  9077                           ; 4 bytes @ 0x21
  9078  000022                     	ds	4
  9079  000026                     ??___fldiv:
  9080                           
  9081                           ; 1 bytes @ 0x25
  9082  000026                     	ds	4
  9083  00002A                     ___fldiv@sign:
  9084                           	opt stack 0
  9085                           
  9086                           ; 1 bytes @ 0x29
  9087  00002A                     	ds	1
  9088  00002B                     ___fldiv@rem:
  9089                           	opt stack 0
  9090                           
  9091                           ; 4 bytes @ 0x2A
  9092  00002B                     	ds	4
  9093  00002F                     ___fldiv@new_exp:
  9094                           	opt stack 0
  9095                           
  9096                           ; 2 bytes @ 0x2E
  9097  00002F                     	ds	2
  9098  000031                     ___fldiv@grs:
  9099                           	opt stack 0
  9100                           
  9101                           ; 4 bytes @ 0x30
  9102  000031                     	ds	4
  9103  000035                     ___fldiv@bexp:
  9104                           	opt stack 0
  9105                           
  9106                           ; 1 bytes @ 0x34
  9107  000035                     	ds	1
  9108  000036                     ___fldiv@aexp:
  9109                           	opt stack 0
  9110                           
  9111                           ; 1 bytes @ 0x35
  9112  000036                     	ds	1
  9113  000037                     ?___flmul:
  9114                           	opt stack 0
  9115  000037                     ?_getRecall:
  9116                           	opt stack 0
  9117  000037                     ?_getPrecision:
  9118                           	opt stack 0
  9119  000037                     getRecall@class:
  9120                           	opt stack 0
  9121  000037                     getPrecision@class:
  9122                           	opt stack 0
  9123  000037                     ___flmul@b:
  9124                           	opt stack 0
  9125                           
  9126                           ; 4 bytes @ 0x36
  9127  000037                     	ds	4
  9128  00003B                     ??_getRecall:
  9129  00003B                     ??_getPrecision:
  9130  00003B                     ___flmul@a:
  9131                           	opt stack 0
  9132                           
  9133                           ; 4 bytes @ 0x3A
  9134  00003B                     	ds	4
  9135  00003F                     ??___flmul:
  9136  00003F                     getRecall@sum:
  9137                           	opt stack 0
  9138  00003F                     getPrecision@sum:
  9139                           	opt stack 0
  9140                           
  9141                           ; 2 bytes @ 0x3E
  9142  00003F                     	ds	2
  9143  000041                     getRecall@i:
  9144                           	opt stack 0
  9145  000041                     getPrecision@i:
  9146                           	opt stack 0
  9147                           
  9148                           ; 2 bytes @ 0x40
  9149  000041                     	ds	2
  9150  000043                     ___flmul@sign:
  9151                           	opt stack 0
  9152                           
  9153                           ; 1 bytes @ 0x42
  9154  000043                     	ds	1
  9155  000044                     ___flmul@grs:
  9156                           	opt stack 0
  9157                           
  9158                           ; 4 bytes @ 0x43
  9159  000044                     	ds	4
  9160  000048                     ___flmul@aexp:
  9161                           	opt stack 0
  9162                           
  9163                           ; 1 bytes @ 0x47
  9164  000048                     	ds	1
  9165  000049                     ___flmul@bexp:
  9166                           	opt stack 0
  9167                           
  9168                           ; 1 bytes @ 0x48
  9169  000049                     	ds	1
  9170  00004A                     ___flmul@prod:
  9171                           	opt stack 0
  9172                           
  9173                           ; 4 bytes @ 0x49
  9174  00004A                     	ds	4
  9175  00004E                     ___flmul@temp:
  9176                           	opt stack 0
  9177                           
  9178                           ; 2 bytes @ 0x4D
  9179  00004E                     	ds	2
  9180  000050                     ?_fround:
  9181                           	opt stack 0
  9182  000050                     ?_scale:
  9183                           	opt stack 0
  9184                           
  9185                           ; 4 bytes @ 0x4F
  9186  000050                     	ds	4
  9187  000054                     _fround$1392:
  9188                           	opt stack 0
  9189  000054                     _scale$1393:
  9190                           	opt stack 0
  9191                           
  9192                           ; 4 bytes @ 0x53
  9193  000054                     	ds	4
  9194  000058                     scale@scl:
  9195                           	opt stack 0
  9196  000058                     _fround$1391:
  9197                           	opt stack 0
  9198                           
  9199                           ; 4 bytes @ 0x57
  9200  000058                     	ds	1
  9201  000059                     ?___fltol:
  9202                           	opt stack 0
  9203  000059                     ___fltol@f1:
  9204                           	opt stack 0
  9205                           
  9206                           ; 4 bytes @ 0x58
  9207  000059                     	ds	3
  9208  00005C                     fround@prec:
  9209                           	opt stack 0
  9210                           
  9211                           ; 1 bytes @ 0x5B
  9212  00005C                     	ds	1
  9213  00005D                     ??_ldexp:
  9214  00005D                     ___fltol@sign1:
  9215                           	opt stack 0
  9216  00005D                     log@exponent:
  9217                           	opt stack 0
  9218                           
  9219                           ; 2 bytes @ 0x5C
  9220  00005D                     	ds	1
  9221  00005E                     ___fltol@exp1:
  9222                           	opt stack 0
  9223                           
  9224                           ; 1 bytes @ 0x5D
  9225  00005E                     	ds	1
  9226  00005F                     tblptru	equ	0xFF8
  9227                           postinc0	equ	0xFEE
  9228                           wreg	equ	0xFE8
  9229                           
  9230                           ; 1 bytes @ 0x5E
  9231 ;;
  9232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9233 ;;
  9234 ;; *************** function _main *****************
  9235 ;; Defined at:
  9236 ;;		line 40 in file "src/main.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9253 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9254 ;;Total ram usage:        0 bytes
  9255 ;; Hardware stack levels required when called:    9
  9256 ;; This function calls:
  9257 ;;		_calculateMetrics
  9258 ;;		_init_uart
  9259 ;;		_printConfusionMatrix
  9260 ;;		_printMetrics
  9261 ;;		_printf
  9262 ;; This function is called by:
  9263 ;;		Startup code after reset
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text0
  9268  00033C                     __ptext0:
  9269                           	opt stack 0
  9270  00033C                     _main:
  9271                           	opt stack 22
  9272                           
  9273                           ;main.c: 42: init_uart();
  9274                           
  9275                           ;incstack = 0
  9276  00033C  EC49  F001         	call	_init_uart	;wreg free
  9277                           
  9278                           ;main.c: 45: printf("Calculating metrics\n");
  9279  000340  0E4A               	movlw	low STR_1
  9280  000342  0101               	movlb	1	; () banked
  9281  000344  6F08               	movwf	printf@f& (0+255),b
  9282  000346  0E7F               	movlw	high STR_1
  9283  000348  0101               	movlb	1	; () banked
  9284  00034A  6F09               	movwf	(printf@f+1)& (0+255),b
  9285  00034C  ECD0  F01A         	call	_printf	;wreg free
  9286                           
  9287                           ;main.c: 46: calculateMetrics();
  9288  000350  ECAC  F00B         	call	_calculateMetrics	;wreg free
  9289                           
  9290                           ;main.c: 49: printf("Printing confusion matrix\n");
  9291  000354  0E04               	movlw	low STR_2
  9292  000356  0101               	movlb	1	; () banked
  9293  000358  6F08               	movwf	printf@f& (0+255),b
  9294  00035A  0E7F               	movlw	high STR_2
  9295  00035C  0101               	movlb	1	; () banked
  9296  00035E  6F09               	movwf	(printf@f+1)& (0+255),b
  9297  000360  ECD0  F01A         	call	_printf	;wreg free
  9298                           
  9299                           ;main.c: 51: printConfusionMatrix();
  9300  000364  EC3D  F00A         	call	_printConfusionMatrix	;wreg free
  9301                           
  9302                           ;main.c: 55: printf("Printing metrics\n");
  9303  000368  0E71               	movlw	low STR_3
  9304  00036A  0101               	movlb	1	; () banked
  9305  00036C  6F08               	movwf	printf@f& (0+255),b
  9306  00036E  0E7F               	movlw	high STR_3
  9307  000370  0101               	movlb	1	; () banked
  9308  000372  6F09               	movwf	(printf@f+1)& (0+255),b
  9309  000374  ECD0  F01A         	call	_printf	;wreg free
  9310                           
  9311                           ;main.c: 56: printMetrics();
  9312  000378  EC22  F004         	call	_printMetrics	;wreg free
  9313  00037C                     l42:
  9314  00037C  D7FF               	goto	l42
  9315  00037E                     __end_of_main:
  9316                           	opt stack 0
  9317                           tblptru	equ	0xFF8
  9318                           postinc0	equ	0xFEE
  9319                           wreg	equ	0xFE8
  9320                           
  9321 ;; *************** function _printMetrics *****************
  9322 ;; Defined at:
  9323 ;;		line 200 in file "src/prediction.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;		None
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  i               2   53[BANK1 ] int 
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  2   18[None  ] int 
  9330 ;; Registers used:
  9331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9337 ;;      Params:         0       0       0       0       0       0       0       0       0
  9338 ;;      Locals:         0       0       2       0       0       0       0       0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9340 ;;      Totals:         0       0       2       0       0       0       0       0       0
  9341 ;;Total ram usage:        2 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; Hardware stack levels required when called:    8
  9344 ;; This function calls:
  9345 ;;		_getAccuracy
  9346 ;;		_getPrecision
  9347 ;;		_getRecall
  9348 ;;		_printf
  9349 ;; This function is called by:
  9350 ;;		_main
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text1
  9355  000844                     __ptext1:
  9356                           	opt stack 0
  9357  000844                     _printMetrics:
  9358                           	opt stack 22
  9359                           
  9360                           ;prediction.c: 202: printf("\n------------------Metrics for the Model-------------------
      +                          --------\n");
  9361                           
  9362                           ;incstack = 0
  9363  000844  0E0E               	movlw	low STR_4
  9364  000846  0101               	movlb	1	; () banked
  9365  000848  6F08               	movwf	printf@f& (0+255),b
  9366  00084A  0E7E               	movlw	high STR_4
  9367  00084C  0101               	movlb	1	; () banked
  9368  00084E  6F09               	movwf	(printf@f+1)& (0+255),b
  9369  000850  ECD0  F01A         	call	_printf	;wreg free
  9370                           
  9371                           ;prediction.c: 203: int i;
  9372                           ;prediction.c: 204: for(i = 0; i<10; i++)
  9373  000854  0E00               	movlw	0
  9374  000856  0101               	movlb	1	; () banked
  9375  000858  6F36               	movwf	(printMetrics@i+1)& (0+255),b
  9376  00085A  0E00               	movlw	0
  9377  00085C  6F35               	movwf	printMetrics@i& (0+255),b
  9378  00085E                     l4727:
  9379                           
  9380                           ; BSR set to: 1
  9381  00085E  0101               	movlb	1	; () banked
  9382  000860  BF36               	btfsc	(printMetrics@i+1)& (0+255),7,b
  9383  000862  D008               	goto	l4731
  9384  000864  0101               	movlb	1	; () banked
  9385  000866  5136               	movf	(printMetrics@i+1)& (0+255),w,b
  9386  000868  E149               	bnz	l4737
  9387  00086A  0E0A               	movlw	10
  9388  00086C  0101               	movlb	1	; () banked
  9389  00086E  5D35               	subwf	printMetrics@i& (0+255),w,b
  9390  000870  B0D8               	btfsc	status,0,c
  9391  000872  D044               	goto	l4737
  9392  000874                     l4731:
  9393                           
  9394                           ; BSR set to: 1
  9395                           ;prediction.c: 205: {
  9396                           ;prediction.c: 206: printf("Metrics for Class %d\n", i);
  9397  000874  0E1F               	movlw	low STR_5
  9398  000876  0101               	movlb	1	; () banked
  9399  000878  6F08               	movwf	printf@f& (0+255),b
  9400  00087A  0E7F               	movlw	high STR_5
  9401  00087C  0101               	movlb	1	; () banked
  9402  00087E  6F09               	movwf	(printf@f+1)& (0+255),b
  9403  000880  C135  F10A         	movff	printMetrics@i,?_printf+2
  9404  000884  C136  F10B         	movff	printMetrics@i+1,?_printf+3
  9405  000888  ECD0  F01A         	call	_printf	;wreg free
  9406                           
  9407                           ;prediction.c: 207: printf("Precision %2.2f\n", getPrecision(i));
  9408  00088C  0E83               	movlw	low STR_6
  9409  00088E  0101               	movlb	1	; () banked
  9410  000890  6F08               	movwf	printf@f& (0+255),b
  9411  000892  0E7F               	movlw	high STR_6
  9412  000894  0101               	movlb	1	; () banked
  9413  000896  6F09               	movwf	(printf@f+1)& (0+255),b
  9414  000898  C135  F037         	movff	printMetrics@i,getPrecision@class
  9415  00089C  C136  F038         	movff	printMetrics@i+1,getPrecision@class+1
  9416  0008A0  EC96  F004         	call	_getPrecision	;wreg free
  9417  0008A4  C037  F10A         	movff	?_getPrecision,?_printf+2
  9418  0008A8  C038  F10B         	movff	?_getPrecision+1,?_printf+3
  9419  0008AC  C039  F10C         	movff	?_getPrecision+2,?_printf+4
  9420  0008B0  C03A  F10D         	movff	?_getPrecision+3,?_printf+5
  9421  0008B4  ECD0  F01A         	call	_printf	;wreg free
  9422                           
  9423                           ;prediction.c: 208: printf("Recall %2.2f\n",getRecall(i) );
  9424  0008B8  0EB3               	movlw	low STR_7
  9425  0008BA  0101               	movlb	1	; () banked
  9426  0008BC  6F08               	movwf	printf@f& (0+255),b
  9427  0008BE  0E7F               	movlw	high STR_7
  9428  0008C0  0101               	movlb	1	; () banked
  9429  0008C2  6F09               	movwf	(printf@f+1)& (0+255),b
  9430  0008C4  C135  F037         	movff	printMetrics@i,getRecall@class
  9431  0008C8  C136  F038         	movff	printMetrics@i+1,getRecall@class+1
  9432  0008CC  EC17  F005         	call	_getRecall	;wreg free
  9433  0008D0  C037  F10A         	movff	?_getRecall,?_printf+2
  9434  0008D4  C038  F10B         	movff	?_getRecall+1,?_printf+3
  9435  0008D8  C039  F10C         	movff	?_getRecall+2,?_printf+4
  9436  0008DC  C03A  F10D         	movff	?_getRecall+3,?_printf+5
  9437  0008E0  ECD0  F01A         	call	_printf	;wreg free
  9438                           
  9439                           ;prediction.c: 209: printf("\n");
  9440  0008E4  0ECF               	movlw	low (STR_25+56)
  9441  0008E6  0101               	movlb	1	; () banked
  9442  0008E8  6F08               	movwf	printf@f& (0+255),b
  9443  0008EA  0E7E               	movlw	high (STR_25+56)
  9444  0008EC  0101               	movlb	1	; () banked
  9445  0008EE  6F09               	movwf	(printf@f+1)& (0+255),b
  9446  0008F0  ECD0  F01A         	call	_printf	;wreg free
  9447  0008F4  0101               	movlb	1	; () banked
  9448  0008F6  4B35               	infsnz	printMetrics@i& (0+255),f,b
  9449  0008F8  2B36               	incf	(printMetrics@i+1)& (0+255),f,b
  9450  0008FA  D7B1               	goto	l4727
  9451  0008FC                     l4737:
  9452                           
  9453                           ; BSR set to: 1
  9454                           ;prediction.c: 210: }
  9455                           ;prediction.c: 212: printf("\nModel Accuracy considering %d test entries: %f%%\n", getAc
      +                          curacy(),30);
  9456  0008FC  0ED1               	movlw	low STR_9
  9457  0008FE  0101               	movlb	1	; () banked
  9458  000900  6F08               	movwf	printf@f& (0+255),b
  9459  000902  0E7E               	movlw	high STR_9
  9460  000904  0101               	movlb	1	; () banked
  9461  000906  6F09               	movwf	(printf@f+1)& (0+255),b
  9462  000908  ECF1  F008         	call	_getAccuracy	;wreg free
  9463  00090C  C0FA  F10A         	movff	?_getAccuracy,?_printf+2
  9464  000910  C0FB  F10B         	movff	?_getAccuracy+1,?_printf+3
  9465  000914  C0FC  F10C         	movff	?_getAccuracy+2,?_printf+4
  9466  000918  C0FD  F10D         	movff	?_getAccuracy+3,?_printf+5
  9467  00091C  0E00               	movlw	0
  9468  00091E  0101               	movlb	1	; () banked
  9469  000920  6F0F               	movwf	(?_printf+7)& (0+255),b
  9470  000922  0E1E               	movlw	30
  9471  000924  6F0E               	movwf	(?_printf+6)& (0+255),b
  9472  000926  ECD0  F01A         	call	_printf	;wreg free
  9473  00092A  0012               	return		;funcret
  9474  00092C                     __end_of_printMetrics:
  9475                           	opt stack 0
  9476                           tblptru	equ	0xFF8
  9477                           postinc0	equ	0xFEE
  9478                           wreg	equ	0xFE8
  9479                           status	equ	0xFD8
  9480                           
  9481 ;; *************** function _getRecall *****************
  9482 ;; Defined at:
  9483 ;;		line 167 in file "src/prediction.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  class           2   54[COMRAM] int 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  i               2   64[COMRAM] int 
  9488 ;;  sum             2   62[COMRAM] int 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  4   54[COMRAM] float 
  9491 ;; Registers used:
  9492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9498 ;;      Params:         4       0       0       0       0       0       0       0       0
  9499 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9500 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9501 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9502 ;;Total ram usage:       12 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:    1
  9505 ;; This function calls:
  9506 ;;		___fldiv
  9507 ;;		___wmul
  9508 ;;		___xxtofl
  9509 ;; This function is called by:
  9510 ;;		_printMetrics
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text2
  9515  000A2E                     __ptext2:
  9516                           	opt stack 0
  9517  000A2E                     _getRecall:
  9518                           	opt stack 28
  9519                           
  9520                           ;prediction.c: 169: int i;
  9521                           ;prediction.c: 170: int sum = 0;
  9522                           
  9523                           ;incstack = 0
  9524  000A2E  0E00               	movlw	0
  9525  000A30  6E40               	movwf	getRecall@sum+1,c
  9526  000A32  0E00               	movlw	0
  9527  000A34  6E3F               	movwf	getRecall@sum,c
  9528                           
  9529                           ;prediction.c: 171: for(i = 0; i<10;i++)
  9530  000A36  0E00               	movlw	0
  9531  000A38  6E42               	movwf	getRecall@i+1,c
  9532  000A3A  0E00               	movlw	0
  9533  000A3C  6E41               	movwf	getRecall@i,c
  9534  000A3E                     l4605:
  9535  000A3E  BE42               	btfsc	getRecall@i+1,7,c
  9536  000A40  D006               	goto	l4609
  9537  000A42  5042               	movf	getRecall@i+1,w,c
  9538  000A44  E126               	bnz	l4615
  9539  000A46  0E0A               	movlw	10
  9540  000A48  5C41               	subwf	getRecall@i,w,c
  9541  000A4A  B0D8               	btfsc	status,0,c
  9542  000A4C  D022               	goto	l4615
  9543  000A4E                     l4609:
  9544                           
  9545                           ;prediction.c: 172: {
  9546                           ;prediction.c: 173: sum+=confusionMatrix[class][i];
  9547  000A4E  C037  F001         	movff	getRecall@class,___wmul@multiplier
  9548  000A52  C038  F002         	movff	getRecall@class+1,___wmul@multiplier+1
  9549  000A56  0E00               	movlw	0
  9550  000A58  6E04               	movwf	___wmul@multiplicand+1,c
  9551  000A5A  0E14               	movlw	20
  9552  000A5C  6E03               	movwf	___wmul@multiplicand,c
  9553  000A5E  EC74  F001         	call	___wmul	;wreg free
  9554  000A62  0E00               	movlw	low _confusionMatrix
  9555  000A64  6E3B               	movwf	??_getRecall& (0+255),c
  9556  000A66  0E02               	movlw	high _confusionMatrix
  9557  000A68  6E3C               	movwf	(??_getRecall+1)& (0+255),c
  9558  000A6A  5001               	movf	?___wmul,w,c
  9559  000A6C  263B               	addwf	??_getRecall,f,c
  9560  000A6E  5002               	movf	?___wmul+1,w,c
  9561  000A70  223C               	addwfc	??_getRecall+1,f,c
  9562  000A72  90D8               	bcf	status,0,c
  9563  000A74  3441               	rlcf	getRecall@i,w,c
  9564  000A76  6ED9               	movwf	fsr2l,c
  9565  000A78  3442               	rlcf	getRecall@i+1,w,c
  9566  000A7A  6EDA               	movwf	fsr2h,c
  9567  000A7C  503B               	movf	??_getRecall,w,c
  9568  000A7E  26D9               	addwf	fsr2l,f,c
  9569  000A80  503C               	movf	??_getRecall+1,w,c
  9570  000A82  22DA               	addwfc	fsr2h,f,c
  9571  000A84  50DE               	movf	postinc2,w,c
  9572  000A86  263F               	addwf	getRecall@sum,f,c
  9573  000A88  50DD               	movf	postdec2,w,c
  9574  000A8A  2240               	addwfc	getRecall@sum+1,f,c
  9575  000A8C  4A41               	infsnz	getRecall@i,f,c
  9576  000A8E  2A42               	incf	getRecall@i+1,f,c
  9577  000A90  D7D6               	goto	l4605
  9578  000A92                     l4615:
  9579                           
  9580                           ;prediction.c: 174: }
  9581                           ;prediction.c: 176: return (confusionMatrix[class][class]/(float)sum);
  9582  000A92  C037  F001         	movff	getRecall@class,___wmul@multiplier
  9583  000A96  C038  F002         	movff	getRecall@class+1,___wmul@multiplier+1
  9584  000A9A  0E00               	movlw	0
  9585  000A9C  6E04               	movwf	___wmul@multiplicand+1,c
  9586  000A9E  0E14               	movlw	20
  9587  000AA0  6E03               	movwf	___wmul@multiplicand,c
  9588  000AA2  EC74  F001         	call	___wmul	;wreg free
  9589  000AA6  0E00               	movlw	low _confusionMatrix
  9590  000AA8  6E3B               	movwf	??_getRecall& (0+255),c
  9591  000AAA  0E02               	movlw	high _confusionMatrix
  9592  000AAC  6E3C               	movwf	(??_getRecall+1)& (0+255),c
  9593  000AAE  5001               	movf	?___wmul,w,c
  9594  000AB0  263B               	addwf	??_getRecall,f,c
  9595  000AB2  5002               	movf	?___wmul+1,w,c
  9596  000AB4  223C               	addwfc	??_getRecall+1,f,c
  9597  000AB6  90D8               	bcf	status,0,c
  9598  000AB8  3437               	rlcf	getRecall@class,w,c
  9599  000ABA  6ED9               	movwf	fsr2l,c
  9600  000ABC  3438               	rlcf	getRecall@class+1,w,c
  9601  000ABE  6EDA               	movwf	fsr2h,c
  9602  000AC0  503B               	movf	??_getRecall,w,c
  9603  000AC2  26D9               	addwf	fsr2l,f,c
  9604  000AC4  503C               	movf	??_getRecall+1,w,c
  9605  000AC6  22DA               	addwfc	fsr2h,f,c
  9606  000AC8  CFDE F03D          	movff	postinc2,??_getRecall+2
  9607  000ACC  CFDD F03E          	movff	postdec2,??_getRecall+3
  9608  000AD0  C03D  F007         	movff	??_getRecall+2,___xxtofl@val
  9609  000AD4  C03E  F008         	movff	??_getRecall+3,___xxtofl@val+1
  9610  000AD8  6A09               	clrf	___xxtofl@val+2,c
  9611  000ADA  6A0A               	clrf	___xxtofl@val+3,c
  9612  000ADC  0E00               	movlw	0
  9613  000ADE  EC95  F009         	call	___xxtofl
  9614  000AE2  C007  F01E         	movff	?___xxtofl,___fldiv@b
  9615  000AE6  C008  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  9616  000AEA  C009  F020         	movff	?___xxtofl+2,___fldiv@b+2
  9617  000AEE  C00A  F021         	movff	?___xxtofl+3,___fldiv@b+3
  9618  000AF2  C03F  F007         	movff	getRecall@sum,___xxtofl@val
  9619  000AF6  C040  F008         	movff	getRecall@sum+1,___xxtofl@val+1
  9620  000AFA  0E00               	movlw	0
  9621  000AFC  BE08               	btfsc	___xxtofl@val+1,7,c
  9622  000AFE  0EFF               	movlw	-1
  9623  000B00  6E09               	movwf	___xxtofl@val+2,c
  9624  000B02  6E0A               	movwf	___xxtofl@val+3,c
  9625  000B04  0E01               	movlw	1
  9626  000B06  EC95  F009         	call	___xxtofl
  9627  000B0A  C007  F022         	movff	?___xxtofl,___fldiv@a
  9628  000B0E  C008  F023         	movff	?___xxtofl+1,___fldiv@a+1
  9629  000B12  C009  F024         	movff	?___xxtofl+2,___fldiv@a+2
  9630  000B16  C00A  F025         	movff	?___xxtofl+3,___fldiv@a+3
  9631  000B1A  EC0C  F012         	call	___fldiv	;wreg free
  9632  000B1E  C01E  F037         	movff	?___fldiv,?_getRecall
  9633  000B22  C01F  F038         	movff	?___fldiv+1,?_getRecall+1
  9634  000B26  C020  F039         	movff	?___fldiv+2,?_getRecall+2
  9635  000B2A  C021  F03A         	movff	?___fldiv+3,?_getRecall+3
  9636  000B2E  0012               	return	
  9637  000B30                     __end_of_getRecall:
  9638                           	opt stack 0
  9639                           tblptru	equ	0xFF8
  9640                           postinc0	equ	0xFEE
  9641                           wreg	equ	0xFE8
  9642                           postinc2	equ	0xFDE
  9643                           postdec2	equ	0xFDD
  9644                           fsr2h	equ	0xFDA
  9645                           fsr2l	equ	0xFD9
  9646                           status	equ	0xFD8
  9647                           
  9648 ;; *************** function _getPrecision *****************
  9649 ;; Defined at:
  9650 ;;		line 186 in file "src/prediction.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;  class           2   54[COMRAM] int 
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;  i               2   64[COMRAM] int 
  9655 ;;  sum             2   62[COMRAM] int 
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  4   54[COMRAM] float 
  9658 ;; Registers used:
  9659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9665 ;;      Params:         4       0       0       0       0       0       0       0       0
  9666 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9667 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9668 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9669 ;;Total ram usage:       12 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:    1
  9672 ;; This function calls:
  9673 ;;		___fldiv
  9674 ;;		___wmul
  9675 ;;		___xxtofl
  9676 ;; This function is called by:
  9677 ;;		_printMetrics
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text3
  9682  00092C                     __ptext3:
  9683                           	opt stack 0
  9684  00092C                     _getPrecision:
  9685                           	opt stack 28
  9686                           
  9687                           ;prediction.c: 187: int i;
  9688                           ;prediction.c: 188: int sum = 0;
  9689                           
  9690                           ;incstack = 0
  9691  00092C  0E00               	movlw	0
  9692  00092E  6E40               	movwf	getPrecision@sum+1,c
  9693  000930  0E00               	movlw	0
  9694  000932  6E3F               	movwf	getPrecision@sum,c
  9695                           
  9696                           ;prediction.c: 189: for(i = 0; i<10;i++)
  9697  000934  0E00               	movlw	0
  9698  000936  6E42               	movwf	getPrecision@i+1,c
  9699  000938  0E00               	movlw	0
  9700  00093A  6E41               	movwf	getPrecision@i,c
  9701  00093C                     l4621:
  9702  00093C  BE42               	btfsc	getPrecision@i+1,7,c
  9703  00093E  D006               	goto	l4625
  9704  000940  5042               	movf	getPrecision@i+1,w,c
  9705  000942  E126               	bnz	l4631
  9706  000944  0E0A               	movlw	10
  9707  000946  5C41               	subwf	getPrecision@i,w,c
  9708  000948  B0D8               	btfsc	status,0,c
  9709  00094A  D022               	goto	l4631
  9710  00094C                     l4625:
  9711                           
  9712                           ;prediction.c: 190: {
  9713                           ;prediction.c: 191: sum+=confusionMatrix[i][class];
  9714  00094C  C041  F001         	movff	getPrecision@i,___wmul@multiplier
  9715  000950  C042  F002         	movff	getPrecision@i+1,___wmul@multiplier+1
  9716  000954  0E00               	movlw	0
  9717  000956  6E04               	movwf	___wmul@multiplicand+1,c
  9718  000958  0E14               	movlw	20
  9719  00095A  6E03               	movwf	___wmul@multiplicand,c
  9720  00095C  EC74  F001         	call	___wmul	;wreg free
  9721  000960  0E00               	movlw	low _confusionMatrix
  9722  000962  6E3B               	movwf	??_getPrecision& (0+255),c
  9723  000964  0E02               	movlw	high _confusionMatrix
  9724  000966  6E3C               	movwf	(??_getPrecision+1)& (0+255),c
  9725  000968  5001               	movf	?___wmul,w,c
  9726  00096A  263B               	addwf	??_getPrecision,f,c
  9727  00096C  5002               	movf	?___wmul+1,w,c
  9728  00096E  223C               	addwfc	??_getPrecision+1,f,c
  9729  000970  90D8               	bcf	status,0,c
  9730  000972  3437               	rlcf	getPrecision@class,w,c
  9731  000974  6ED9               	movwf	fsr2l,c
  9732  000976  3438               	rlcf	getPrecision@class+1,w,c
  9733  000978  6EDA               	movwf	fsr2h,c
  9734  00097A  503B               	movf	??_getPrecision,w,c
  9735  00097C  26D9               	addwf	fsr2l,f,c
  9736  00097E  503C               	movf	??_getPrecision+1,w,c
  9737  000980  22DA               	addwfc	fsr2h,f,c
  9738  000982  50DE               	movf	postinc2,w,c
  9739  000984  263F               	addwf	getPrecision@sum,f,c
  9740  000986  50DD               	movf	postdec2,w,c
  9741  000988  2240               	addwfc	getPrecision@sum+1,f,c
  9742  00098A  4A41               	infsnz	getPrecision@i,f,c
  9743  00098C  2A42               	incf	getPrecision@i+1,f,c
  9744  00098E  D7D6               	goto	l4621
  9745  000990                     l4631:
  9746                           
  9747                           ;prediction.c: 192: }
  9748                           ;prediction.c: 193: return (confusionMatrix[class][class]/(float)sum);
  9749  000990  C037  F001         	movff	getPrecision@class,___wmul@multiplier
  9750  000994  C038  F002         	movff	getPrecision@class+1,___wmul@multiplier+1
  9751  000998  0E00               	movlw	0
  9752  00099A  6E04               	movwf	___wmul@multiplicand+1,c
  9753  00099C  0E14               	movlw	20
  9754  00099E  6E03               	movwf	___wmul@multiplicand,c
  9755  0009A0  EC74  F001         	call	___wmul	;wreg free
  9756  0009A4  0E00               	movlw	low _confusionMatrix
  9757  0009A6  6E3B               	movwf	??_getPrecision& (0+255),c
  9758  0009A8  0E02               	movlw	high _confusionMatrix
  9759  0009AA  6E3C               	movwf	(??_getPrecision+1)& (0+255),c
  9760  0009AC  5001               	movf	?___wmul,w,c
  9761  0009AE  263B               	addwf	??_getPrecision,f,c
  9762  0009B0  5002               	movf	?___wmul+1,w,c
  9763  0009B2  223C               	addwfc	??_getPrecision+1,f,c
  9764  0009B4  90D8               	bcf	status,0,c
  9765  0009B6  3437               	rlcf	getPrecision@class,w,c
  9766  0009B8  6ED9               	movwf	fsr2l,c
  9767  0009BA  3438               	rlcf	getPrecision@class+1,w,c
  9768  0009BC  6EDA               	movwf	fsr2h,c
  9769  0009BE  503B               	movf	??_getPrecision,w,c
  9770  0009C0  26D9               	addwf	fsr2l,f,c
  9771  0009C2  503C               	movf	??_getPrecision+1,w,c
  9772  0009C4  22DA               	addwfc	fsr2h,f,c
  9773  0009C6  CFDE F03D          	movff	postinc2,??_getPrecision+2
  9774  0009CA  CFDD F03E          	movff	postdec2,??_getPrecision+3
  9775  0009CE  C03D  F007         	movff	??_getPrecision+2,___xxtofl@val
  9776  0009D2  C03E  F008         	movff	??_getPrecision+3,___xxtofl@val+1
  9777  0009D6  6A09               	clrf	___xxtofl@val+2,c
  9778  0009D8  6A0A               	clrf	___xxtofl@val+3,c
  9779  0009DA  0E00               	movlw	0
  9780  0009DC  EC95  F009         	call	___xxtofl
  9781  0009E0  C007  F01E         	movff	?___xxtofl,___fldiv@b
  9782  0009E4  C008  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  9783  0009E8  C009  F020         	movff	?___xxtofl+2,___fldiv@b+2
  9784  0009EC  C00A  F021         	movff	?___xxtofl+3,___fldiv@b+3
  9785  0009F0  C03F  F007         	movff	getPrecision@sum,___xxtofl@val
  9786  0009F4  C040  F008         	movff	getPrecision@sum+1,___xxtofl@val+1
  9787  0009F8  0E00               	movlw	0
  9788  0009FA  BE08               	btfsc	___xxtofl@val+1,7,c
  9789  0009FC  0EFF               	movlw	-1
  9790  0009FE  6E09               	movwf	___xxtofl@val+2,c
  9791  000A00  6E0A               	movwf	___xxtofl@val+3,c
  9792  000A02  0E01               	movlw	1
  9793  000A04  EC95  F009         	call	___xxtofl
  9794  000A08  C007  F022         	movff	?___xxtofl,___fldiv@a
  9795  000A0C  C008  F023         	movff	?___xxtofl+1,___fldiv@a+1
  9796  000A10  C009  F024         	movff	?___xxtofl+2,___fldiv@a+2
  9797  000A14  C00A  F025         	movff	?___xxtofl+3,___fldiv@a+3
  9798  000A18  EC0C  F012         	call	___fldiv	;wreg free
  9799  000A1C  C01E  F037         	movff	?___fldiv,?_getPrecision
  9800  000A20  C01F  F038         	movff	?___fldiv+1,?_getPrecision+1
  9801  000A24  C020  F039         	movff	?___fldiv+2,?_getPrecision+2
  9802  000A28  C021  F03A         	movff	?___fldiv+3,?_getPrecision+3
  9803  000A2C  0012               	return	
  9804  000A2E                     __end_of_getPrecision:
  9805                           	opt stack 0
  9806                           tblptru	equ	0xFF8
  9807                           postinc0	equ	0xFEE
  9808                           wreg	equ	0xFE8
  9809                           postinc2	equ	0xFDE
  9810                           postdec2	equ	0xFDD
  9811                           fsr2h	equ	0xFDA
  9812                           fsr2l	equ	0xFD9
  9813                           status	equ	0xFD8
  9814                           
  9815 ;; *************** function _getAccuracy *****************
  9816 ;; Defined at:
  9817 ;;		line 136 in file "src/prediction.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;  i               2    6[BANK1 ] int 
  9822 ;;  correct         2    4[BANK1 ] int 
  9823 ;;  prediction      2    0[BANK1 ] int 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  4  154[BANK0 ] float 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9833 ;;      Params:         0       4       0       0       0       0       0       0       0
  9834 ;;      Locals:         0       0       8       0       0       0       0       0       0
  9835 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9836 ;;      Totals:         0       6       8       0       0       0       0       0       0
  9837 ;;Total ram usage:       14 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:    7
  9840 ;; This function calls:
  9841 ;;		___fldiv
  9842 ;;		___flmul
  9843 ;;		___fltol
  9844 ;;		___wmul
  9845 ;;		___xxtofl
  9846 ;;		_predict
  9847 ;; This function is called by:
  9848 ;;		_printMetrics
  9849 ;;		_getCrossAccuracy
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853                           	psect	text4
  9854  0011E2                     __ptext4:
  9855                           	opt stack 0
  9856  0011E2                     _getAccuracy:
  9857                           	opt stack 22
  9858                           
  9859                           ;prediction.c: 138: int i;
  9860                           ;prediction.c: 141: int correct = 0;
  9861                           
  9862                           ;incstack = 0
  9863  0011E2  0E00               	movlw	0
  9864  0011E4  0101               	movlb	1	; () banked
  9865  0011E6  6F05               	movwf	(getAccuracy@correct+1)& (0+255),b
  9866  0011E8  0E00               	movlw	0
  9867  0011EA  6F04               	movwf	getAccuracy@correct& (0+255),b
  9868                           
  9869                           ;prediction.c: 144: int prediction;
  9870                           ;prediction.c: 146: for(i = 0; i < 30; i++) {
  9871  0011EC  0E00               	movlw	0
  9872  0011EE  0101               	movlb	1	; () banked
  9873  0011F0  6F07               	movwf	(getAccuracy@i+1)& (0+255),b
  9874  0011F2  0E00               	movlw	0
  9875  0011F4  6F06               	movwf	getAccuracy@i& (0+255),b
  9876  0011F6                     l4585:
  9877                           
  9878                           ; BSR set to: 1
  9879  0011F6  0101               	movlb	1	; () banked
  9880  0011F8  BF07               	btfsc	(getAccuracy@i+1)& (0+255),7,b
  9881  0011FA  D008               	goto	l4589
  9882  0011FC  0101               	movlb	1	; () banked
  9883  0011FE  5107               	movf	(getAccuracy@i+1)& (0+255),w,b
  9884  001200  E15B               	bnz	l4599
  9885  001202  0E1E               	movlw	30
  9886  001204  0101               	movlb	1	; () banked
  9887  001206  5D06               	subwf	getAccuracy@i& (0+255),w,b
  9888  001208  B0D8               	btfsc	status,0,c
  9889  00120A  D056               	goto	l4599
  9890  00120C                     l4589:
  9891                           
  9892                           ; BSR set to: 1
  9893                           ;prediction.c: 147: prediction = predict(testSet[i]);
  9894  00120C  C106  F001         	movff	getAccuracy@i,___wmul@multiplier
  9895  001210  C107  F002         	movff	getAccuracy@i+1,___wmul@multiplier+1
  9896  001214  0E01               	movlw	1
  9897  001216  6E04               	movwf	___wmul@multiplicand+1,c
  9898  001218  0E30               	movlw	48
  9899  00121A  6E03               	movwf	___wmul@multiplicand,c
  9900  00121C  EC74  F001         	call	___wmul	;wreg free
  9901  001220  0ED7               	movlw	low _testSet
  9902  001222  2401               	addwf	?___wmul,w,c
  9903  001224  0101               	movlb	1	; () banked
  9904  001226  6F02               	movwf	_getAccuracy$1384& (0+255),b
  9905  001228  0E59               	movlw	high _testSet
  9906  00122A  2002               	addwfc	?___wmul+1,w,c
  9907  00122C  0101               	movlb	1	; () banked
  9908  00122E  6F03               	movwf	(_getAccuracy$1384+1)& (0+255),b
  9909                           
  9910                           ; BSR set to: 1
  9911                           ;prediction.c: 147: prediction = predict(testSet[i]);
  9912  001230  C102  F0EC         	movff	_getAccuracy$1384,predict@inputVector
  9913  001234  C103  F0ED         	movff	_getAccuracy$1384+1,predict@inputVector+1
  9914  001238  EC4E  F003         	call	_predict	;wreg free
  9915  00123C  C0EC  F100         	movff	?_predict,getAccuracy@prediction
  9916  001240  C0ED  F101         	movff	?_predict+1,getAccuracy@prediction+1
  9917                           
  9918                           ;prediction.c: 149: if(prediction == (int) testSet[i][77 - 1]) {
  9919  001244  0E30               	movlw	48
  9920  001246  0100               	movlb	0	; () banked
  9921  001248  6FFE               	movwf	??_getAccuracy& (0+255),b
  9922  00124A  0E01               	movlw	1
  9923  00124C  0100               	movlb	0	; () banked
  9924  00124E  6FFF               	movwf	(??_getAccuracy+1)& (0+255),b
  9925  001250  C106  F001         	movff	getAccuracy@i,___wmul@multiplier
  9926  001254  C107  F002         	movff	getAccuracy@i+1,___wmul@multiplier+1
  9927  001258  0E01               	movlw	1
  9928  00125A  6E04               	movwf	___wmul@multiplicand+1,c
  9929  00125C  0E30               	movlw	48
  9930  00125E  6E03               	movwf	___wmul@multiplicand,c
  9931  001260  EC74  F001         	call	___wmul	;wreg free
  9932  001264  0100               	movlb	0	; () banked
  9933  001266  51FE               	movf	??_getAccuracy& (0+255),w,b
  9934  001268  2601               	addwf	?___wmul,f,c
  9935  00126A  0100               	movlb	0	; () banked
  9936  00126C  51FF               	movf	(??_getAccuracy+1)& (0+255),w,b
  9937  00126E  2202               	addwfc	?___wmul+1,f,c
  9938  001270  0ED7               	movlw	low _testSet
  9939  001272  2401               	addwf	?___wmul,w,c
  9940  001274  6EF6               	movwf	tblptrl,c
  9941  001276  0E59               	movlw	high _testSet
  9942  001278  2002               	addwfc	?___wmul+1,w,c
  9943  00127A  6EF7               	movwf	tblptrh,c
  9944  00127C                     	if	0	;There are less than 3 active tblptr bytes
  9945  00127C                     	endif
  9946  00127C  0009               	tblrd		*+
  9947  00127E  CFF5 F059          	movff	tablat,___fltol@f1
  9948  001282  0009               	tblrd		*+
  9949  001284  CFF5 F05A          	movff	tablat,___fltol@f1+1
  9950  001288  0009               	tblrd		*+
  9951  00128A  CFF5 F05B          	movff	tablat,___fltol@f1+2
  9952  00128E  000A               	tblrd		*-
  9953  001290  CFF5 F05C          	movff	tablat,___fltol@f1+3
  9954  001294  ECB2  F003         	call	___fltol	;wreg free
  9955  001298  0101               	movlb	1	; () banked
  9956  00129A  5100               	movf	getAccuracy@prediction& (0+255),w,b
  9957  00129C  1859               	xorwf	?___fltol,w,c
  9958  00129E  E108               	bnz	l95
  9959  0012A0  0101               	movlb	1	; () banked
  9960  0012A2  5101               	movf	(getAccuracy@prediction+1)& (0+255),w,b
  9961  0012A4  185A               	xorwf	?___fltol+1,w,c
  9962  0012A6  A4D8               	btfss	status,2,c
  9963  0012A8  D003               	goto	l95
  9964                           
  9965                           ; BSR set to: 1
  9966                           ;prediction.c: 150: correct++;
  9967  0012AA  0101               	movlb	1	; () banked
  9968  0012AC  4B04               	infsnz	getAccuracy@correct& (0+255),f,b
  9969  0012AE  2B05               	incf	(getAccuracy@correct+1)& (0+255),f,b
  9970  0012B0                     l95:
  9971                           
  9972                           ; BSR set to: 1
  9973  0012B0  0101               	movlb	1	; () banked
  9974  0012B2  4B06               	infsnz	getAccuracy@i& (0+255),f,b
  9975  0012B4  2B07               	incf	(getAccuracy@i+1)& (0+255),f,b
  9976  0012B6  D79F               	goto	l4585
  9977  0012B8                     l4599:
  9978                           
  9979                           ; BSR set to: 1
  9980                           ;prediction.c: 151: }
  9981                           ;prediction.c: 152: }
  9982                           ;prediction.c: 155: return (((float) correct) / 30) * 100;
  9983  0012B8  0E00               	movlw	0
  9984  0012BA  6E22               	movwf	___fldiv@a,c
  9985  0012BC  0E00               	movlw	0
  9986  0012BE  6E23               	movwf	___fldiv@a+1,c
  9987  0012C0  0EF0               	movlw	240
  9988  0012C2  6E24               	movwf	___fldiv@a+2,c
  9989  0012C4  0E41               	movlw	65
  9990  0012C6  6E25               	movwf	___fldiv@a+3,c
  9991  0012C8  C104  F007         	movff	getAccuracy@correct,___xxtofl@val
  9992  0012CC  C105  F008         	movff	getAccuracy@correct+1,___xxtofl@val+1
  9993  0012D0  0E00               	movlw	0
  9994  0012D2  BE08               	btfsc	___xxtofl@val+1,7,c
  9995  0012D4  0EFF               	movlw	-1
  9996  0012D6  6E09               	movwf	___xxtofl@val+2,c
  9997  0012D8  6E0A               	movwf	___xxtofl@val+3,c
  9998  0012DA  0E01               	movlw	1
  9999  0012DC  EC95  F009         	call	___xxtofl
 10000  0012E0  C007  F01E         	movff	?___xxtofl,___fldiv@b
 10001  0012E4  C008  F01F         	movff	?___xxtofl+1,___fldiv@b+1
 10002  0012E8  C009  F020         	movff	?___xxtofl+2,___fldiv@b+2
 10003  0012EC  C00A  F021         	movff	?___xxtofl+3,___fldiv@b+3
 10004  0012F0  EC0C  F012         	call	___fldiv	;wreg free
 10005  0012F4  C01E  F037         	movff	?___fldiv,___flmul@b
 10006  0012F8  C01F  F038         	movff	?___fldiv+1,___flmul@b+1
 10007  0012FC  C020  F039         	movff	?___fldiv+2,___flmul@b+2
 10008  001300  C021  F03A         	movff	?___fldiv+3,___flmul@b+3
 10009  001304  0E00               	movlw	0
 10010  001306  6E3B               	movwf	___flmul@a,c
 10011  001308  0E00               	movlw	0
 10012  00130A  6E3C               	movwf	___flmul@a+1,c
 10013  00130C  0EC8               	movlw	200
 10014  00130E  6E3D               	movwf	___flmul@a+2,c
 10015  001310  0E42               	movlw	66
 10016  001312  6E3E               	movwf	___flmul@a+3,c
 10017  001314  ECC8  F014         	call	___flmul	;wreg free
 10018  001318  C037  F0FA         	movff	?___flmul,?_getAccuracy
 10019  00131C  C038  F0FB         	movff	?___flmul+1,?_getAccuracy+1
 10020  001320  C039  F0FC         	movff	?___flmul+2,?_getAccuracy+2
 10021  001324  C03A  F0FD         	movff	?___flmul+3,?_getAccuracy+3
 10022  001328  0012               	return	
 10023  00132A                     __end_of_getAccuracy:
 10024                           	opt stack 0
 10025                           tblptru	equ	0xFF8
 10026                           tblptrh	equ	0xFF7
 10027                           tblptrl	equ	0xFF6
 10028                           tablat	equ	0xFF5
 10029                           postinc0	equ	0xFEE
 10030                           wreg	equ	0xFE8
 10031                           postinc2	equ	0xFDE
 10032                           postdec2	equ	0xFDD
 10033                           fsr2h	equ	0xFDA
 10034                           fsr2l	equ	0xFD9
 10035                           status	equ	0xFD8
 10036                           
 10037 ;; *************** function _printConfusionMatrix *****************
 10038 ;; Defined at:
 10039 ;;		line 51 in file "src/util.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;		None
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;  i               2   59[BANK1 ] int 
 10044 ;;  j               2   57[BANK1 ] int 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  2   16[None  ] int 
 10047 ;; Registers used:
 10048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10054 ;;      Params:         0       0       0       0       0       0       0       0       0
 10055 ;;      Locals:         0       0       6       0       0       0       0       0       0
 10056 ;;      Temps:          0       0       2       0       0       0       0       0       0
 10057 ;;      Totals:         0       0       8       0       0       0       0       0       0
 10058 ;;Total ram usage:        8 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:    3
 10061 ;; This function calls:
 10062 ;;		___wmul
 10063 ;;		_printf
 10064 ;; This function is called by:
 10065 ;;		_main
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           	psect	text5
 10070  00147A                     __ptext5:
 10071                           	opt stack 0
 10072  00147A                     _printConfusionMatrix:
 10073                           	opt stack 27
 10074                           
 10075                           ;util.c: 53: printf("------------------Confusion Matrix for the Model------------------\
      +                          n");
 10076                           
 10077                           ;incstack = 0
 10078  00147A  0E53               	movlw	low STR_16
 10079  00147C  0101               	movlb	1	; () banked
 10080  00147E  6F08               	movwf	printf@f& (0+255),b
 10081  001480  0E7E               	movlw	high STR_16
 10082  001482  0101               	movlb	1	; () banked
 10083  001484  6F09               	movwf	(printf@f+1)& (0+255),b
 10084  001486  ECD0  F01A         	call	_printf	;wreg free
 10085                           
 10086                           ;util.c: 54: int i, j;
 10087                           ;util.c: 56: printf("          ");
 10088  00148A  0ECD               	movlw	low STR_17
 10089  00148C  0101               	movlb	1	; () banked
 10090  00148E  6F08               	movwf	printf@f& (0+255),b
 10091  001490  0E7F               	movlw	high STR_17
 10092  001492  0101               	movlb	1	; () banked
 10093  001494  6F09               	movwf	(printf@f+1)& (0+255),b
 10094  001496  ECD0  F01A         	call	_printf	;wreg free
 10095                           
 10096                           ;util.c: 57: for(i = 0; i<10; i++)
 10097  00149A  0E00               	movlw	0
 10098  00149C  0101               	movlb	1	; () banked
 10099  00149E  6F3C               	movwf	(printConfusionMatrix@i+1)& (0+255),b
 10100  0014A0  0E00               	movlw	0
 10101  0014A2  6F3B               	movwf	printConfusionMatrix@i& (0+255),b
 10102  0014A4                     l4683:
 10103                           
 10104                           ; BSR set to: 1
 10105  0014A4  0101               	movlb	1	; () banked
 10106  0014A6  BF3C               	btfsc	(printConfusionMatrix@i+1)& (0+255),7,b
 10107  0014A8  D008               	goto	l4687
 10108  0014AA  0101               	movlb	1	; () banked
 10109  0014AC  513C               	movf	(printConfusionMatrix@i+1)& (0+255),w,b
 10110  0014AE  E115               	bnz	l4693
 10111  0014B0  0E0A               	movlw	10
 10112  0014B2  0101               	movlb	1	; () banked
 10113  0014B4  5D3B               	subwf	printConfusionMatrix@i& (0+255),w,b
 10114  0014B6  B0D8               	btfsc	status,0,c
 10115  0014B8  D010               	goto	l4693
 10116  0014BA                     l4687:
 10117                           
 10118                           ; BSR set to: 1
 10119                           ;util.c: 58: {
 10120                           ;util.c: 59: printf(" C%d   ",i);
 10121  0014BA  0EEB               	movlw	low STR_18
 10122  0014BC  0101               	movlb	1	; () banked
 10123  0014BE  6F08               	movwf	printf@f& (0+255),b
 10124  0014C0  0E7F               	movlw	high STR_18
 10125  0014C2  0101               	movlb	1	; () banked
 10126  0014C4  6F09               	movwf	(printf@f+1)& (0+255),b
 10127  0014C6  C13B  F10A         	movff	printConfusionMatrix@i,?_printf+2
 10128  0014CA  C13C  F10B         	movff	printConfusionMatrix@i+1,?_printf+3
 10129  0014CE  ECD0  F01A         	call	_printf	;wreg free
 10130  0014D2  0101               	movlb	1	; () banked
 10131  0014D4  4B3B               	infsnz	printConfusionMatrix@i& (0+255),f,b
 10132  0014D6  2B3C               	incf	(printConfusionMatrix@i+1)& (0+255),f,b
 10133  0014D8  D7E5               	goto	l4683
 10134  0014DA                     l4693:
 10135                           
 10136                           ; BSR set to: 1
 10137                           ;util.c: 60: }
 10138                           ;util.c: 61: printf("\n");
 10139  0014DA  0ECF               	movlw	low (STR_25+56)
 10140  0014DC  0101               	movlb	1	; () banked
 10141  0014DE  6F08               	movwf	printf@f& (0+255),b
 10142  0014E0  0E7E               	movlw	high (STR_25+56)
 10143  0014E2  0101               	movlb	1	; () banked
 10144  0014E4  6F09               	movwf	(printf@f+1)& (0+255),b
 10145  0014E6  ECD0  F01A         	call	_printf	;wreg free
 10146                           
 10147                           ;util.c: 62: for(i = 0; i<10;i++)
 10148  0014EA  0E00               	movlw	0
 10149  0014EC  0101               	movlb	1	; () banked
 10150  0014EE  6F3C               	movwf	(printConfusionMatrix@i+1)& (0+255),b
 10151  0014F0  0E00               	movlw	0
 10152  0014F2  6F3B               	movwf	printConfusionMatrix@i& (0+255),b
 10153                           
 10154                           ; BSR set to: 1
 10155  0014F4  0101               	movlb	1	; () banked
 10156  0014F6  BF3C               	btfsc	(printConfusionMatrix@i+1)& (0+255),7,b
 10157  0014F8  D00A               	goto	l4701
 10158  0014FA  0101               	movlb	1	; () banked
 10159  0014FC  513C               	movf	(printConfusionMatrix@i+1)& (0+255),w,b
 10160  0014FE  E106               	bnz	u5660
 10161  001500  0E0A               	movlw	10
 10162  001502  0101               	movlb	1	; () banked
 10163  001504  5D3B               	subwf	printConfusionMatrix@i& (0+255),w,b
 10164  001506  B0D8               	btfsc	status,0,c
 10165  001508  0012               	return	
 10166  00150A  D001               	goto	l4701
 10167  00150C                     u5660:
 10168                           
 10169                           ; BSR set to: 1
 10170  00150C  0012               	return	
 10171  00150E                     l4701:
 10172                           
 10173                           ; BSR set to: 1
 10174                           ;util.c: 63: {
 10175                           ;util.c: 64: printf("Class %d |",i);
 10176  00150E  0ED8               	movlw	low STR_20
 10177  001510  0101               	movlb	1	; () banked
 10178  001512  6F08               	movwf	printf@f& (0+255),b
 10179  001514  0E7F               	movlw	high STR_20
 10180  001516  0101               	movlb	1	; () banked
 10181  001518  6F09               	movwf	(printf@f+1)& (0+255),b
 10182  00151A  C13B  F10A         	movff	printConfusionMatrix@i,?_printf+2
 10183  00151E  C13C  F10B         	movff	printConfusionMatrix@i+1,?_printf+3
 10184  001522  ECD0  F01A         	call	_printf	;wreg free
 10185                           
 10186                           ;util.c: 65: for(j = 0; j<10;j++)
 10187  001526  0E00               	movlw	0
 10188  001528  0101               	movlb	1	; () banked
 10189  00152A  6F3A               	movwf	(printConfusionMatrix@j+1)& (0+255),b
 10190  00152C  0E00               	movlw	0
 10191  00152E  6F39               	movwf	printConfusionMatrix@j& (0+255),b
 10192  001530                     l4705:
 10193                           
 10194                           ; BSR set to: 1
 10195  001530  0101               	movlb	1	; () banked
 10196  001532  BF3A               	btfsc	(printConfusionMatrix@j+1)& (0+255),7,b
 10197  001534  D008               	goto	l4709
 10198  001536  0101               	movlb	1	; () banked
 10199  001538  513A               	movf	(printConfusionMatrix@j+1)& (0+255),w,b
 10200  00153A  E13C               	bnz	l4717
 10201  00153C  0E0A               	movlw	10
 10202  00153E  0101               	movlb	1	; () banked
 10203  001540  5D39               	subwf	printConfusionMatrix@j& (0+255),w,b
 10204  001542  B0D8               	btfsc	status,0,c
 10205  001544  D037               	goto	l4717
 10206  001546                     l4709:
 10207                           
 10208                           ; BSR set to: 1
 10209                           ;util.c: 66: printf("  %d   ",confusionMatrix[i][j] );
 10210  001546  C13B  F001         	movff	printConfusionMatrix@i,___wmul@multiplier
 10211  00154A  C13C  F002         	movff	printConfusionMatrix@i+1,___wmul@multiplier+1
 10212  00154E  0E00               	movlw	0
 10213  001550  6E04               	movwf	___wmul@multiplicand+1,c
 10214  001552  0E14               	movlw	20
 10215  001554  6E03               	movwf	___wmul@multiplicand,c
 10216  001556  EC74  F001         	call	___wmul	;wreg free
 10217  00155A  0E00               	movlw	low _confusionMatrix
 10218  00155C  0101               	movlb	1	; () banked
 10219  00155E  6F35               	movwf	??_printConfusionMatrix& (0+255),b
 10220  001560  0E02               	movlw	high _confusionMatrix
 10221  001562  0101               	movlb	1	; () banked
 10222  001564  6F36               	movwf	(??_printConfusionMatrix+1)& (0+255),b
 10223  001566  5001               	movf	?___wmul,w,c
 10224  001568  0101               	movlb	1	; () banked
 10225  00156A  2735               	addwf	??_printConfusionMatrix& (0+255),f,b
 10226  00156C  5002               	movf	?___wmul+1,w,c
 10227  00156E  0101               	movlb	1	; () banked
 10228  001570  2336               	addwfc	(??_printConfusionMatrix+1)& (0+255),f,b
 10229  001572  90D8               	bcf	status,0,c
 10230  001574  0101               	movlb	1	; () banked
 10231  001576  3539               	rlcf	printConfusionMatrix@j& (0+255),w,b
 10232  001578  6ED9               	movwf	fsr2l,c
 10233  00157A  0101               	movlb	1	; () banked
 10234  00157C  353A               	rlcf	(printConfusionMatrix@j+1)& (0+255),w,b
 10235  00157E  6EDA               	movwf	fsr2h,c
 10236  001580  0101               	movlb	1	; () banked
 10237  001582  5135               	movf	??_printConfusionMatrix& (0+255),w,b
 10238  001584  26D9               	addwf	fsr2l,f,c
 10239  001586  0101               	movlb	1	; () banked
 10240  001588  5136               	movf	(??_printConfusionMatrix+1)& (0+255),w,b
 10241  00158A  22DA               	addwfc	fsr2h,f,c
 10242  00158C  CFDE F137          	movff	postinc2,_printConfusionMatrix$1388
 10243  001590  CFDD F138          	movff	postdec2,_printConfusionMatrix$1388+1
 10244                           
 10245                           ; BSR set to: 1
 10246                           ;util.c: 66: printf("  %d   ",confusionMatrix[i][j] );
 10247  001594  0EE3               	movlw	low STR_21
 10248  001596  0101               	movlb	1	; () banked
 10249  001598  6F08               	movwf	printf@f& (0+255),b
 10250  00159A  0E7F               	movlw	high STR_21
 10251  00159C  0101               	movlb	1	; () banked
 10252  00159E  6F09               	movwf	(printf@f+1)& (0+255),b
 10253  0015A0  C137  F10A         	movff	_printConfusionMatrix$1388,?_printf+2
 10254  0015A4  C138  F10B         	movff	_printConfusionMatrix$1388+1,?_printf+3
 10255  0015A8  ECD0  F01A         	call	_printf	;wreg free
 10256  0015AC  0101               	movlb	1	; () banked
 10257  0015AE  4B39               	infsnz	printConfusionMatrix@j& (0+255),f,b
 10258  0015B0  2B3A               	incf	(printConfusionMatrix@j+1)& (0+255),f,b
 10259  0015B2  D7BE               	goto	l4705
 10260  0015B4                     l4717:
 10261                           
 10262                           ; BSR set to: 1
 10263                           ;util.c: 67: printf("\n");
 10264  0015B4  0ECF               	movlw	low (STR_25+56)
 10265  0015B6  0101               	movlb	1	; () banked
 10266  0015B8  6F08               	movwf	printf@f& (0+255),b
 10267  0015BA  0E7E               	movlw	high (STR_25+56)
 10268  0015BC  0101               	movlb	1	; () banked
 10269  0015BE  6F09               	movwf	(printf@f+1)& (0+255),b
 10270  0015C0  ECD0  F01A         	call	_printf	;wreg free
 10271  0015C4  0101               	movlb	1	; () banked
 10272  0015C6  4B3B               	infsnz	printConfusionMatrix@i& (0+255),f,b
 10273  0015C8  2B3C               	incf	(printConfusionMatrix@i+1)& (0+255),f,b
 10274                           
 10275                           ; BSR set to: 1
 10276  0015CA  0101               	movlb	1	; () banked
 10277  0015CC  BF3C               	btfsc	(printConfusionMatrix@i+1)& (0+255),7,b
 10278  0015CE  D79F               	goto	l4701
 10279  0015D0  0101               	movlb	1	; () banked
 10280  0015D2  513C               	movf	(printConfusionMatrix@i+1)& (0+255),w,b
 10281  0015D4  E101               	bnz	l145
 10282  0015D6  D794               	goto	L1
 10283  0015D8                     l145:
 10284                           
 10285                           ; BSR set to: 1
 10286  0015D8  0012               	return		;funcret
 10287  0015DA                     __end_of_printConfusionMatrix:
 10288                           	opt stack 0
 10289                           tblptru	equ	0xFF8
 10290                           tblptrh	equ	0xFF7
 10291                           tblptrl	equ	0xFF6
 10292                           tablat	equ	0xFF5
 10293                           postinc0	equ	0xFEE
 10294                           wreg	equ	0xFE8
 10295                           postinc2	equ	0xFDE
 10296                           postdec2	equ	0xFDD
 10297                           fsr2h	equ	0xFDA
 10298                           fsr2l	equ	0xFD9
 10299                           status	equ	0xFD8
 10300                           
 10301 ;; *************** function _printf *****************
 10302 ;; Defined at:
 10303 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  f               2    8[BANK1 ] PTR const unsigned char 
 10306 ;;		 -> STR_29(7), STR_28(16), STR_27(15), STR_26(21), 
 10307 ;;		 -> STR_25(58), STR_24(75), STR_23(8), STR_22(2), 
 10308 ;;		 -> STR_21(8), STR_20(11), STR_19(2), STR_18(8), 
 10309 ;;		 -> STR_17(11), STR_16(68), STR_15(2), STR_14(18), 
 10310 ;;		 -> STR_13(12), STR_12(2), STR_11(3), STR_10(3), 
 10311 ;;		 -> STR_9(51), STR_8(2), STR_7(14), STR_6(17), 
 10312 ;;		 -> STR_5(22), STR_4(69), STR_3(18), STR_2(27), 
 10313 ;;		 -> STR_1(21), 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;  fval            4   46[BANK1 ] PTR const unsigned char 
 10316 ;;  val             4   38[BANK1 ] unsigned long 
 10317 ;;  tmpval          4   34[BANK1 ] struct .
 10318 ;;  prec            2   50[BANK1 ] int 
 10319 ;;  width           2   44[BANK1 ] int 
 10320 ;;  exp             2   42[BANK1 ] int 
 10321 ;;  flag            2   32[BANK1 ] unsigned short 
 10322 ;;  len             2   30[BANK1 ] unsigned int 
 10323 ;;  ap              2   28[BANK1 ] PTR void [1]
 10324 ;;		 -> ?_printf(2), 
 10325 ;;  cp              2   26[BANK1 ] PTR const unsigned char 
 10326 ;;		 -> printf@c(1), 
 10327 ;;  c               1   52[BANK1 ] char 
 10328 ;;  d               1    0        unsigned char 
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  2    8[BANK1 ] int 
 10331 ;; Registers used:
 10332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10338 ;;      Params:         0       0      10       0       0       0       0       0       0
 10339 ;;      Locals:         0       0      31       0       0       0       0       0       0
 10340 ;;      Temps:          0       0       4       0       0       0       0       0       0
 10341 ;;      Totals:         0       0      45       0       0       0       0       0       0
 10342 ;;Total ram usage:       45 bytes
 10343 ;; Hardware stack levels used:    1
 10344 ;; Hardware stack levels required when called:    2
 10345 ;; This function calls:
 10346 ;;		___awdiv
 10347 ;;		___fladd
 10348 ;;		___flge
 10349 ;;		___flmul
 10350 ;;		___flneg
 10351 ;;		___flsub
 10352 ;;		___fltol
 10353 ;;		___lldiv
 10354 ;;		___llmod
 10355 ;;		___wmul
 10356 ;;		___xxtofl
 10357 ;;		__div_to_l_
 10358 ;;		__tdiv_to_l_
 10359 ;;		_fround
 10360 ;;		_isdigit
 10361 ;;		_putch
 10362 ;;		_scale
 10363 ;; This function is called by:
 10364 ;;		_main
 10365 ;;		_printMetrics
 10366 ;;		_printConfusionMatrix
 10367 ;;		_printTestset
 10368 ;;		_printSummaries
 10369 ;;		_printTestSetLine
 10370 ;;		_showOff
 10371 ;;		_getCrossAccuracy
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           	psect	text6
 10376  0035A0                     __ptext6:
 10377                           	opt stack 0
 10378  0035A0                     _printf:
 10379                           	opt stack 28
 10380                           
 10381                           ;doprnt.c: 466: va_list ap;
 10382                           ;doprnt.c: 499: signed char c;
 10383                           ;doprnt.c: 501: int width;
 10384                           ;doprnt.c: 504: int prec;
 10385                           ;doprnt.c: 508: unsigned short flag;
 10386                           ;doprnt.c: 515: char d;
 10387                           ;doprnt.c: 516: double fval;
 10388                           ;doprnt.c: 517: int exp;
 10389                           ;doprnt.c: 523: union {
 10390                           ;doprnt.c: 524: unsigned long vd;
 10391                           ;doprnt.c: 525: double integ;
 10392                           ;doprnt.c: 526: } tmpval;
 10393                           ;doprnt.c: 528: unsigned long val;
 10394                           ;doprnt.c: 529: unsigned len;
 10395                           ;doprnt.c: 530: const char * cp;
 10396                           ;doprnt.c: 533: *ap = __va_start();
 10397                           
 10398                           ; BSR set to: 1
 10399                           ;incstack = 0
 10400  0035A0  0E0A               	movlw	low (?_printf+2)
 10401  0035A2  0101               	movlb	1	; () banked
 10402  0035A4  6F1C               	movwf	printf@ap& (0+255),b
 10403  0035A6  0E01               	movlw	high (?_printf+2)
 10404  0035A8  0101               	movlb	1	; () banked
 10405  0035AA  6F1D               	movwf	(printf@ap+1)& (0+255),b
 10406                           
 10407                           ;doprnt.c: 536: while(c = *f++) {
 10408  0035AC  EFB3  F020         	goto	l4581
 10409  0035B0                     l4293:
 10410                           
 10411                           ; BSR set to: 1
 10412                           ;doprnt.c: 538: if(c != '%')
 10413  0035B0  0E25               	movlw	37
 10414  0035B2  0101               	movlb	1	; () banked
 10415  0035B4  1934               	xorwf	printf@c& (0+255),w,b
 10416  0035B6  B4D8               	btfsc	status,2,c
 10417  0035B8  D006               	goto	l4297
 10418                           
 10419                           ; BSR set to: 1
 10420                           ;doprnt.c: 540: {
 10421                           ;doprnt.c: 541: (putch(c) );
 10422  0035BA  0101               	movlb	1	; () banked
 10423  0035BC  5134               	movf	printf@c& (0+255),w,b
 10424  0035BE  EC43  F001         	call	_putch
 10425                           
 10426                           ;doprnt.c: 542: continue;
 10427  0035C2  EFB3  F020         	goto	l4581
 10428  0035C6                     l4297:
 10429                           
 10430                           ;doprnt.c: 543: }
 10431                           ;doprnt.c: 546: width = 0;
 10432  0035C6  0E00               	movlw	0
 10433  0035C8  0101               	movlb	1	; () banked
 10434  0035CA  6F2D               	movwf	(printf@width+1)& (0+255),b
 10435  0035CC  0E00               	movlw	0
 10436  0035CE  6F2C               	movwf	printf@width& (0+255),b
 10437                           
 10438                           ;doprnt.c: 548: flag = 0;
 10439  0035D0  0E00               	movlw	0
 10440  0035D2  0101               	movlb	1	; () banked
 10441  0035D4  6F21               	movwf	(printf@flag+1)& (0+255),b
 10442  0035D6  0E00               	movlw	0
 10443  0035D8  6F20               	movwf	printf@flag& (0+255),b
 10444                           
 10445                           ; BSR set to: 1
 10446                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10447  0035DA  C108  FFF6         	movff	printf@f,tblptrl
 10448  0035DE  C109  FFF7         	movff	printf@f+1,tblptrh
 10449  0035E2                     	if	0	;tblptru may be non-zero
 10450  0035E2                     	endif
 10451  0035E2                     	if	0	;tblptru may be non-zero
 10452  0035E2                     	endif
 10453  0035E2  0008               	tblrd		*
 10454  0035E4  50F5               	movf	tablat,w,c
 10455  0035E6  EC65  F001         	call	_isdigit
 10456  0035EA  A0D8               	btfss	status,0,c
 10457  0035EC  D03F               	goto	l4311
 10458                           
 10459                           ;doprnt.c: 598: width = 0;
 10460  0035EE  0E00               	movlw	0
 10461  0035F0  0101               	movlb	1	; () banked
 10462  0035F2  6F2D               	movwf	(printf@width+1)& (0+255),b
 10463  0035F4  0E00               	movlw	0
 10464  0035F6  6F2C               	movwf	printf@width& (0+255),b
 10465  0035F8                     l4303:
 10466                           
 10467                           ;doprnt.c: 600: width *= 10;
 10468  0035F8  C12C  F001         	movff	printf@width,___wmul@multiplier
 10469  0035FC  C12D  F002         	movff	printf@width+1,___wmul@multiplier+1
 10470  003600  0E00               	movlw	0
 10471  003602  6E04               	movwf	___wmul@multiplicand+1,c
 10472  003604  0E0A               	movlw	10
 10473  003606  6E03               	movwf	___wmul@multiplicand,c
 10474  003608  EC74  F001         	call	___wmul	;wreg free
 10475  00360C  C001  F12C         	movff	?___wmul,printf@width
 10476  003610  C002  F12D         	movff	?___wmul+1,printf@width+1
 10477                           
 10478                           ;doprnt.c: 601: width += *f++ - '0';
 10479  003614  0ED0               	movlw	208
 10480  003616  0101               	movlb	1	; () banked
 10481  003618  6F12               	movwf	??_printf& (0+255),b
 10482  00361A  0EFF               	movlw	255
 10483  00361C  0101               	movlb	1	; () banked
 10484  00361E  6F13               	movwf	(??_printf+1)& (0+255),b
 10485  003620  C108  FFF6         	movff	printf@f,tblptrl
 10486  003624  C109  FFF7         	movff	printf@f+1,tblptrh
 10487  003628                     	if	0	;tblptru may be non-zero
 10488  003628                     	endif
 10489  003628                     	if	0	;tblptru may be non-zero
 10490  003628                     	endif
 10491  003628  0008               	tblrd		*
 10492  00362A  50F5               	movf	tablat,w,c
 10493  00362C  0101               	movlb	1	; () banked
 10494  00362E  6F14               	movwf	(??_printf+2)& (0+255),b
 10495  003630  6B15               	clrf	(??_printf+3)& (0+255),b
 10496  003632  0101               	movlb	1	; () banked
 10497  003634  5112               	movf	??_printf& (0+255),w,b
 10498  003636  0101               	movlb	1	; () banked
 10499  003638  2714               	addwf	(??_printf+2)& (0+255),f,b
 10500  00363A  0101               	movlb	1	; () banked
 10501  00363C  5113               	movf	(??_printf+1)& (0+255),w,b
 10502  00363E  0101               	movlb	1	; () banked
 10503  003640  2315               	addwfc	(??_printf+3)& (0+255),f,b
 10504  003642  0101               	movlb	1	; () banked
 10505  003644  5114               	movf	(??_printf+2)& (0+255),w,b
 10506  003646  0101               	movlb	1	; () banked
 10507  003648  272C               	addwf	printf@width& (0+255),f,b
 10508  00364A  0101               	movlb	1	; () banked
 10509  00364C  5115               	movf	(??_printf+3)& (0+255),w,b
 10510  00364E  0101               	movlb	1	; () banked
 10511  003650  232D               	addwfc	(printf@width+1)& (0+255),f,b
 10512                           
 10513                           ; BSR set to: 1
 10514  003652  0101               	movlb	1	; () banked
 10515  003654  4B08               	infsnz	printf@f& (0+255),f,b
 10516  003656  2B09               	incf	(printf@f+1)& (0+255),f,b
 10517                           
 10518                           ; BSR set to: 1
 10519                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10520  003658  C108  FFF6         	movff	printf@f,tblptrl
 10521  00365C  C109  FFF7         	movff	printf@f+1,tblptrh
 10522  003660                     	if	0	;tblptru may be non-zero
 10523  003660                     	endif
 10524  003660                     	if	0	;tblptru may be non-zero
 10525  003660                     	endif
 10526  003660  0008               	tblrd		*
 10527  003662  50F5               	movf	tablat,w,c
 10528  003664  EC65  F001         	call	_isdigit
 10529  003668  B0D8               	btfsc	status,0,c
 10530  00366A  D7C6               	goto	l4303
 10531  00366C                     l4311:
 10532                           
 10533                           ;doprnt.c: 608: }
 10534                           ;doprnt.c: 611: if(*f == '.') {
 10535  00366C  C108  FFF6         	movff	printf@f,tblptrl
 10536  003670  C109  FFF7         	movff	printf@f+1,tblptrh
 10537  003674                     	if	0	;tblptru may be non-zero
 10538  003674                     	endif
 10539  003674                     	if	0	;tblptru may be non-zero
 10540  003674                     	endif
 10541  003674  0008               	tblrd		*
 10542  003676  50F5               	movf	tablat,w,c
 10543  003678  0A2E               	xorlw	46
 10544  00367A  A4D8               	btfss	status,2,c
 10545  00367C  D034               	goto	l4323
 10546                           
 10547                           ;doprnt.c: 612: flag |= 0x4000;
 10548  00367E  0101               	movlb	1	; () banked
 10549  003680  8D21               	bsf	(printf@flag+1)& (0+255),6,b
 10550                           
 10551                           ;doprnt.c: 613: f++;
 10552  003682  0101               	movlb	1	; () banked
 10553  003684  4B08               	infsnz	printf@f& (0+255),f,b
 10554  003686  2B09               	incf	(printf@f+1)& (0+255),f,b
 10555                           
 10556                           ; BSR set to: 1
 10557                           ;doprnt.c: 620: {
 10558                           ;doprnt.c: 621: prec = 0;
 10559  003688  0E00               	movlw	0
 10560  00368A  0101               	movlb	1	; () banked
 10561  00368C  6F33               	movwf	(printf@prec+1)& (0+255),b
 10562  00368E  0E00               	movlw	0
 10563  003690  6F32               	movwf	printf@prec& (0+255),b
 10564                           
 10565                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 10566  003692  D01E               	goto	l4321
 10567  003694                     l4317:
 10568                           
 10569                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 10570  003694  C132  F001         	movff	printf@prec,___wmul@multiplier
 10571  003698  C133  F002         	movff	printf@prec+1,___wmul@multiplier+1
 10572  00369C  0E00               	movlw	0
 10573  00369E  6E04               	movwf	___wmul@multiplicand+1,c
 10574  0036A0  0E0A               	movlw	10
 10575  0036A2  6E03               	movwf	___wmul@multiplicand,c
 10576  0036A4  EC74  F001         	call	___wmul	;wreg free
 10577  0036A8  C108  FFF6         	movff	printf@f,tblptrl
 10578  0036AC  C109  FFF7         	movff	printf@f+1,tblptrh
 10579  0036B0                     	if	0	;tblptru may be non-zero
 10580  0036B0                     	endif
 10581  0036B0                     	if	0	;tblptru may be non-zero
 10582  0036B0                     	endif
 10583  0036B0  0008               	tblrd		*
 10584  0036B2  50F5               	movf	tablat,w,c
 10585  0036B4  2601               	addwf	?___wmul,f,c
 10586  0036B6  0E00               	movlw	0
 10587  0036B8  2202               	addwfc	?___wmul+1,f,c
 10588  0036BA  0ED0               	movlw	208
 10589  0036BC  2401               	addwf	?___wmul,w,c
 10590  0036BE  0101               	movlb	1	; () banked
 10591  0036C0  6F32               	movwf	printf@prec& (0+255),b
 10592  0036C2  0EFF               	movlw	255
 10593  0036C4  2002               	addwfc	?___wmul+1,w,c
 10594  0036C6  0101               	movlb	1	; () banked
 10595  0036C8  6F33               	movwf	(printf@prec+1)& (0+255),b
 10596                           
 10597                           ; BSR set to: 1
 10598  0036CA  0101               	movlb	1	; () banked
 10599  0036CC  4B08               	infsnz	printf@f& (0+255),f,b
 10600  0036CE  2B09               	incf	(printf@f+1)& (0+255),f,b
 10601  0036D0                     l4321:
 10602                           
 10603                           ; BSR set to: 1
 10604  0036D0  C108  FFF6         	movff	printf@f,tblptrl
 10605  0036D4  C109  FFF7         	movff	printf@f+1,tblptrh
 10606  0036D8                     	if	0	;tblptru may be non-zero
 10607  0036D8                     	endif
 10608  0036D8                     	if	0	;tblptru may be non-zero
 10609  0036D8                     	endif
 10610  0036D8  0008               	tblrd		*
 10611  0036DA  50F5               	movf	tablat,w,c
 10612  0036DC  EC65  F001         	call	_isdigit
 10613  0036E0  A0D8               	btfss	status,0,c
 10614  0036E2  D06B               	goto	l4357
 10615  0036E4  D7D7               	goto	l4317
 10616  0036E6                     l4323:
 10617                           
 10618                           ;doprnt.c: 626: prec = 0;
 10619  0036E6  0E00               	movlw	0
 10620  0036E8  0101               	movlb	1	; () banked
 10621  0036EA  6F33               	movwf	(printf@prec+1)& (0+255),b
 10622  0036EC  0E00               	movlw	0
 10623  0036EE  6F32               	movwf	printf@prec& (0+255),b
 10624                           
 10625                           ; BSR set to: 1
 10626                           ;doprnt.c: 628: flag |= 0x1000;
 10627  0036F0  0101               	movlb	1	; () banked
 10628  0036F2  8921               	bsf	(printf@flag+1)& (0+255),4,b
 10629                           
 10630                           ; BSR set to: 1
 10631                           ;doprnt.c: 630: }
 10632                           ;doprnt.c: 635: switch(c = *f++) {
 10633  0036F4  D062               	goto	l4357
 10634  0036F6                     l4327:
 10635                           
 10636                           ; BSR set to: 1
 10637                           ;doprnt.c: 663: flag |= 0x400;
 10638  0036F6  0101               	movlb	1	; () banked
 10639  0036F8  8521               	bsf	(printf@flag+1)& (0+255),2,b
 10640                           
 10641                           ; BSR set to: 1
 10642                           ;doprnt.c: 698: case 'i':
 10643                           ;doprnt.c: 699: break;
 10644                           
 10645                           ; BSR set to: 1
 10646                           
 10647                           ;doprnt.c: 697: case 'd':
 10648                           
 10649                           ;doprnt.c: 664: break;
 10650  0036FA  D077               	goto	l4359
 10651  0036FC                     l4329:
 10652                           
 10653                           ; BSR set to: 1
 10654                           ;doprnt.c: 753: if(prec && prec < len)
 10655  0036FC  0101               	movlb	1	; () banked
 10656  0036FE  5132               	movf	printf@prec& (0+255),w,b
 10657  003700  0101               	movlb	1	; () banked
 10658  003702  1133               	iorwf	(printf@prec+1)& (0+255),w,b
 10659  003704  B4D8               	btfsc	status,2,c
 10660  003706  D00E               	goto	l4335
 10661                           
 10662                           ; BSR set to: 1
 10663  003708  0101               	movlb	1	; () banked
 10664  00370A  511E               	movf	printf@len& (0+255),w,b
 10665  00370C  0101               	movlb	1	; () banked
 10666  00370E  5D32               	subwf	printf@prec& (0+255),w,b
 10667  003710  0101               	movlb	1	; () banked
 10668  003712  511F               	movf	(printf@len+1)& (0+255),w,b
 10669  003714  0101               	movlb	1	; () banked
 10670  003716  5933               	subwfb	(printf@prec+1)& (0+255),w,b
 10671  003718  B0D8               	btfsc	status,0,c
 10672  00371A  D004               	goto	l4335
 10673                           
 10674                           ; BSR set to: 1
 10675                           ;doprnt.c: 754: len = prec;
 10676  00371C  C132  F11E         	movff	printf@prec,printf@len
 10677  003720  C133  F11F         	movff	printf@prec+1,printf@len+1
 10678  003724                     l4335:
 10679                           
 10680                           ; BSR set to: 1
 10681                           ;doprnt.c: 757: if(width > len)
 10682  003724  0101               	movlb	1	; () banked
 10683  003726  512C               	movf	printf@width& (0+255),w,b
 10684  003728  0101               	movlb	1	; () banked
 10685  00372A  5D1E               	subwf	printf@len& (0+255),w,b
 10686  00372C  0101               	movlb	1	; () banked
 10687  00372E  512D               	movf	(printf@width+1)& (0+255),w,b
 10688  003730  0101               	movlb	1	; () banked
 10689  003732  591F               	subwfb	(printf@len+1)& (0+255),w,b
 10690  003734  B0D8               	btfsc	status,0,c
 10691  003736  D009               	goto	l4339
 10692                           
 10693                           ; BSR set to: 1
 10694                           ;doprnt.c: 758: width -= len;
 10695  003738  0101               	movlb	1	; () banked
 10696  00373A  511E               	movf	printf@len& (0+255),w,b
 10697  00373C  0101               	movlb	1	; () banked
 10698  00373E  5F2C               	subwf	printf@width& (0+255),f,b
 10699  003740  0101               	movlb	1	; () banked
 10700  003742  511F               	movf	(printf@len+1)& (0+255),w,b
 10701  003744  0101               	movlb	1	; () banked
 10702  003746  5B2D               	subwfb	(printf@width+1)& (0+255),f,b
 10703  003748  D009               	goto	l4343
 10704  00374A                     l4339:
 10705                           
 10706                           ; BSR set to: 1
 10707                           ;doprnt.c: 759: else
 10708                           ;doprnt.c: 760: width = 0;
 10709  00374A  0E00               	movlw	0
 10710  00374C  0101               	movlb	1	; () banked
 10711  00374E  6F2D               	movwf	(printf@width+1)& (0+255),b
 10712  003750  0E00               	movlw	0
 10713  003752  6F2C               	movwf	printf@width& (0+255),b
 10714                           
 10715                           ; BSR set to: 1
 10716                           ;doprnt.c: 764: while(width--)
 10717  003754  D003               	goto	l4343
 10718  003756                     l4341:
 10719                           
 10720                           ; BSR set to: 1
 10721                           ;doprnt.c: 765: (putch(' ') );
 10722  003756  0E20               	movlw	32
 10723  003758  EC43  F001         	call	_putch
 10724  00375C                     l4343:
 10725  00375C  0101               	movlb	1	; () banked
 10726  00375E  072C               	decf	printf@width& (0+255),f,b
 10727  003760  A0D8               	btfss	status,0,c
 10728  003762  072D               	decf	(printf@width+1)& (0+255),f,b
 10729  003764  0101               	movlb	1	; () banked
 10730  003766  292C               	incf	printf@width& (0+255),w,b
 10731  003768  E1F6               	bnz	l4341
 10732  00376A  0101               	movlb	1	; () banked
 10733  00376C  292D               	incf	(printf@width+1)& (0+255),w,b
 10734  00376E  B4D8               	btfsc	status,2,c
 10735  003770  D00B               	goto	l4349
 10736  003772  D7F1               	goto	l4341
 10737  003774                     l4345:
 10738                           
 10739                           ; BSR set to: 1
 10740                           ;doprnt.c: 768: (putch(*cp++) );
 10741  003774  C11A  FFD9         	movff	printf@cp,fsr2l
 10742  003778  C11B  FFDA         	movff	printf@cp+1,fsr2h
 10743  00377C  50DF               	movf	indf2,w,c
 10744  00377E  EC43  F001         	call	_putch
 10745  003782  0101               	movlb	1	; () banked
 10746  003784  4B1A               	infsnz	printf@cp& (0+255),f,b
 10747  003786  2B1B               	incf	(printf@cp+1)& (0+255),f,b
 10748  003788                     l4349:
 10749                           
 10750                           ; BSR set to: 1
 10751  003788  0101               	movlb	1	; () banked
 10752  00378A  071E               	decf	printf@len& (0+255),f,b
 10753  00378C  A0D8               	btfss	status,0,c
 10754  00378E  071F               	decf	(printf@len+1)& (0+255),f,b
 10755  003790  0101               	movlb	1	; () banked
 10756  003792  291E               	incf	printf@len& (0+255),w,b
 10757  003794  E1EF               	bnz	l4345
 10758  003796  0101               	movlb	1	; () banked
 10759  003798  291F               	incf	(printf@len+1)& (0+255),w,b
 10760  00379A  B4D8               	btfsc	status,2,c
 10761  00379C  EFB3  F020         	goto	l4581
 10762  0037A0  D7E9               	goto	l4345
 10763  0037A2                     l4351:
 10764                           
 10765                           ; BSR set to: 1
 10766                           ;doprnt.c: 805: cp = (char *)&c;
 10767  0037A2  0E34               	movlw	low printf@c
 10768  0037A4  0101               	movlb	1	; () banked
 10769  0037A6  6F1A               	movwf	printf@cp& (0+255),b
 10770  0037A8  0E01               	movlw	high printf@c
 10771  0037AA  0101               	movlb	1	; () banked
 10772  0037AC  6F1B               	movwf	(printf@cp+1)& (0+255),b
 10773                           
 10774                           ; BSR set to: 1
 10775                           ;doprnt.c: 806: len = 1;
 10776  0037AE  0E00               	movlw	0
 10777  0037B0  0101               	movlb	1	; () banked
 10778  0037B2  6F1F               	movwf	(printf@len+1)& (0+255),b
 10779  0037B4  0E01               	movlw	1
 10780  0037B6  6F1E               	movwf	printf@len& (0+255),b
 10781                           
 10782                           ;doprnt.c: 807: goto dostring;
 10783  0037B8  D7A1               	goto	l4329
 10784  0037BA                     l4357:
 10785  0037BA  C108  FFF6         	movff	printf@f,tblptrl
 10786  0037BE  C109  FFF7         	movff	printf@f+1,tblptrh
 10787  0037C2  0101               	movlb	1	; () banked
 10788  0037C4  4B08               	infsnz	printf@f& (0+255),f,b
 10789  0037C6  2B09               	incf	(printf@f+1)& (0+255),f,b
 10790  0037C8                     	if	0	;tblptru may be non-zero
 10791  0037C8                     	endif
 10792  0037C8                     	if	0	;tblptru may be non-zero
 10793  0037C8                     	endif
 10794  0037C8  0008               	tblrd		*
 10795  0037CA  CFF5 F134          	movff	tablat,printf@c
 10796  0037CE  0101               	movlb	1	; () banked
 10797  0037D0  5134               	movf	printf@c& (0+255),w,b
 10798                           
 10799                           ; Switch size 1, requested type "space"
 10800                           ; Number of cases is 4, Range of values is 0 to 105
 10801                           ; switch strategies available:
 10802                           ; Name         Instructions Cycles
 10803                           ; simple_byte           13     7 (average)
 10804                           ;	Chosen strategy is simple_byte
 10805  0037D2  0A00               	xorlw	0	; case 0
 10806  0037D4  B4D8               	btfsc	status,2,c
 10807  0037D6  0012               	return	
 10808  0037D8  0A64               	xorlw	100	; case 100
 10809  0037DA  B4D8               	btfsc	status,2,c
 10810  0037DC  D006               	goto	l4359
 10811  0037DE  0A02               	xorlw	2	; case 102
 10812  0037E0  B4D8               	btfsc	status,2,c
 10813  0037E2  D789               	goto	l4327
 10814  0037E4  0A0F               	xorlw	15	; case 105
 10815  0037E6  A4D8               	btfss	status,2,c
 10816  0037E8  D7DC               	goto	l4351
 10817  0037EA                     l4359:
 10818                           
 10819                           ; BSR set to: 1
 10820                           ;doprnt.c: 825: if(flag & (0x700)) {
 10821  0037EA  0E07               	movlw	7
 10822  0037EC  0101               	movlb	1	; () banked
 10823  0037EE  1521               	andwf	(printf@flag+1)& (0+255),w,b
 10824  0037F0  B4D8               	btfsc	status,2,c
 10825  0037F2  D361               	goto	l4507
 10826                           
 10827                           ; BSR set to: 1
 10828                           ;doprnt.c: 827: if(flag & 0x1000)
 10829  0037F4  0101               	movlb	1	; () banked
 10830  0037F6  A921               	btfss	(printf@flag+1)& (0+255),4,b
 10831  0037F8  D005               	goto	l4365
 10832                           
 10833                           ; BSR set to: 1
 10834                           ;doprnt.c: 829: prec = 6;
 10835  0037FA  0E00               	movlw	0
 10836  0037FC  0101               	movlb	1	; () banked
 10837  0037FE  6F33               	movwf	(printf@prec+1)& (0+255),b
 10838  003800  0E06               	movlw	6
 10839  003802  6F32               	movwf	printf@prec& (0+255),b
 10840  003804                     l4365:
 10841                           
 10842                           ; BSR set to: 1
 10843                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10844  003804  C11C  FFD9         	movff	printf@ap,fsr2l
 10845  003808  C11D  FFDA         	movff	printf@ap+1,fsr2h
 10846  00380C  CFDE F12E          	movff	postinc2,printf@fval
 10847  003810  CFDE F12F          	movff	postinc2,printf@fval+1
 10848  003814  CFDE F130          	movff	postinc2,printf@fval+2
 10849  003818  CFDE F131          	movff	postinc2,printf@fval+3
 10850                           
 10851                           ; BSR set to: 1
 10852  00381C  0E04               	movlw	4
 10853  00381E  0101               	movlb	1	; () banked
 10854  003820  271C               	addwf	printf@ap& (0+255),f,b
 10855  003822  0E00               	movlw	0
 10856  003824  231D               	addwfc	(printf@ap+1)& (0+255),f,b
 10857                           
 10858                           ; BSR set to: 1
 10859                           ;doprnt.c: 831: if(fval < 0.0) {
 10860  003826  0101               	movlb	1	; () banked
 10861  003828  AF31               	btfss	(printf@fval+3)& (0+255),7,b
 10862  00382A  D015               	goto	l4375
 10863                           
 10864                           ; BSR set to: 1
 10865                           ;doprnt.c: 832: fval = -fval;
 10866  00382C  C12E  F001         	movff	printf@fval,___flneg@f1
 10867  003830  C12F  F002         	movff	printf@fval+1,___flneg@f1+1
 10868  003834  C130  F003         	movff	printf@fval+2,___flneg@f1+2
 10869  003838  C131  F004         	movff	printf@fval+3,___flneg@f1+3
 10870  00383C  EC87  F001         	call	___flneg	;wreg free
 10871  003840  C001  F12E         	movff	?___flneg,printf@fval
 10872  003844  C002  F12F         	movff	?___flneg+1,printf@fval+1
 10873  003848  C003  F130         	movff	?___flneg+2,printf@fval+2
 10874  00384C  C004  F131         	movff	?___flneg+3,printf@fval+3
 10875                           
 10876                           ;doprnt.c: 833: flag |= 0x03;
 10877  003850  0E03               	movlw	3
 10878  003852  0101               	movlb	1	; () banked
 10879  003854  1320               	iorwf	printf@flag& (0+255),f,b
 10880  003856                     l4375:
 10881                           
 10882                           ; BSR set to: 1
 10883                           ;doprnt.c: 834: }
 10884                           ;doprnt.c: 835: exp = 0;
 10885  003856  0E00               	movlw	0
 10886  003858  0101               	movlb	1	; () banked
 10887  00385A  6F2B               	movwf	(printf@exp+1)& (0+255),b
 10888  00385C  0E00               	movlw	0
 10889  00385E  6F2A               	movwf	printf@exp& (0+255),b
 10890                           
 10891                           ; BSR set to: 1
 10892                           ;doprnt.c: 836: if( fval!=0) {
 10893  003860  0101               	movlb	1	; () banked
 10894  003862  512E               	movf	printf@fval& (0+255),w,b
 10895  003864  0101               	movlb	1	; () banked
 10896  003866  112F               	iorwf	(printf@fval+1)& (0+255),w,b
 10897  003868  0101               	movlb	1	; () banked
 10898  00386A  1130               	iorwf	(printf@fval+2)& (0+255),w,b
 10899  00386C  0101               	movlb	1	; () banked
 10900  00386E  1131               	iorwf	(printf@fval+3)& (0+255),w,b
 10901  003870  B4D8               	btfsc	status,2,c
 10902  003872  D088               	goto	l4403
 10903                           
 10904                           ; BSR set to: 1
 10905                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 10906  003874  0101               	movlb	1	; () banked
 10907  003876  3530               	rlcf	(printf@fval+2)& (0+255),w,b
 10908  003878  3531               	rlcf	(printf@fval+3)& (0+255),w,b
 10909  00387A  0F82               	addlw	130
 10910  00387C  0101               	movlb	1	; () banked
 10911  00387E  6F2A               	movwf	printf@exp& (0+255),b
 10912  003880  0101               	movlb	1	; () banked
 10913  003882  6B2B               	clrf	(printf@exp+1)& (0+255),b
 10914  003884  0EFF               	movlw	255
 10915  003886  232B               	addwfc	(printf@exp+1)& (0+255),f,b
 10916                           
 10917                           ; BSR set to: 1
 10918                           ;doprnt.c: 838: exp--;
 10919  003888  0101               	movlb	1	; () banked
 10920  00388A  072A               	decf	printf@exp& (0+255),f,b
 10921  00388C  A0D8               	btfss	status,0,c
 10922  00388E  072B               	decf	(printf@exp+1)& (0+255),f,b
 10923                           
 10924                           ; BSR set to: 1
 10925                           ;doprnt.c: 839: exp *= 3;
 10926  003890  C12A  F001         	movff	printf@exp,___wmul@multiplier
 10927  003894  C12B  F002         	movff	printf@exp+1,___wmul@multiplier+1
 10928  003898  0E00               	movlw	0
 10929  00389A  6E04               	movwf	___wmul@multiplicand+1,c
 10930  00389C  0E03               	movlw	3
 10931  00389E  6E03               	movwf	___wmul@multiplicand,c
 10932  0038A0  EC74  F001         	call	___wmul	;wreg free
 10933  0038A4  C001  F12A         	movff	?___wmul,printf@exp
 10934  0038A8  C002  F12B         	movff	?___wmul+1,printf@exp+1
 10935                           
 10936                           ;doprnt.c: 840: exp /= 10;
 10937  0038AC  C12A  F007         	movff	printf@exp,___awdiv@dividend
 10938  0038B0  C12B  F008         	movff	printf@exp+1,___awdiv@dividend+1
 10939  0038B4  0E00               	movlw	0
 10940  0038B6  6E0A               	movwf	___awdiv@divisor+1,c
 10941  0038B8  0E0A               	movlw	10
 10942  0038BA  6E09               	movwf	___awdiv@divisor,c
 10943  0038BC  ECBF  F002         	call	___awdiv	;wreg free
 10944  0038C0  C007  F12A         	movff	?___awdiv,printf@exp
 10945  0038C4  C008  F12B         	movff	?___awdiv+1,printf@exp+1
 10946                           
 10947                           ;doprnt.c: 841: if(exp < 0)
 10948  0038C8  0101               	movlb	1	; () banked
 10949  0038CA  AF2B               	btfss	(printf@exp+1)& (0+255),7,b
 10950  0038CC  D004               	goto	l4391
 10951                           
 10952                           ; BSR set to: 1
 10953                           ;doprnt.c: 842: exp--;
 10954  0038CE  0101               	movlb	1	; () banked
 10955  0038D0  072A               	decf	printf@exp& (0+255),f,b
 10956  0038D2  A0D8               	btfss	status,0,c
 10957  0038D4  072B               	decf	(printf@exp+1)& (0+255),f,b
 10958  0038D6                     l4391:
 10959                           
 10960                           ; BSR set to: 1
 10961                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 10962  0038D6  0101               	movlb	1	; () banked
 10963  0038D8  512A               	movf	printf@exp& (0+255),w,b
 10964  0038DA  0800               	sublw	0
 10965  0038DC  EC70  F016         	call	_scale
 10966  0038E0  C050  F122         	movff	?_scale,printf@tmpval
 10967  0038E4  C051  F123         	movff	?_scale+1,printf@tmpval+1
 10968  0038E8  C052  F124         	movff	?_scale+2,printf@tmpval+2
 10969  0038EC  C053  F125         	movff	?_scale+3,printf@tmpval+3
 10970                           
 10971                           ;doprnt.c: 847: tmpval.integ *= fval;
 10972  0038F0  C122  F037         	movff	printf@tmpval,___flmul@b
 10973  0038F4  C123  F038         	movff	printf@tmpval+1,___flmul@b+1
 10974  0038F8  C124  F039         	movff	printf@tmpval+2,___flmul@b+2
 10975  0038FC  C125  F03A         	movff	printf@tmpval+3,___flmul@b+3
 10976  003900  C12E  F03B         	movff	printf@fval,___flmul@a
 10977  003904  C12F  F03C         	movff	printf@fval+1,___flmul@a+1
 10978  003908  C130  F03D         	movff	printf@fval+2,___flmul@a+2
 10979  00390C  C131  F03E         	movff	printf@fval+3,___flmul@a+3
 10980  003910  ECC8  F014         	call	___flmul	;wreg free
 10981  003914  C037  F122         	movff	?___flmul,printf@tmpval
 10982  003918  C038  F123         	movff	?___flmul+1,printf@tmpval+1
 10983  00391C  C039  F124         	movff	?___flmul+2,printf@tmpval+2
 10984  003920  C03A  F125         	movff	?___flmul+3,printf@tmpval+3
 10985                           
 10986                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 10987  003924  C122  F001         	movff	printf@tmpval,___flge@ff1
 10988  003928  C123  F002         	movff	printf@tmpval+1,___flge@ff1+1
 10989  00392C  C124  F003         	movff	printf@tmpval+2,___flge@ff1+2
 10990  003930  C125  F004         	movff	printf@tmpval+3,___flge@ff1+3
 10991  003934  0E00               	movlw	0
 10992  003936  6E05               	movwf	___flge@ff2,c
 10993  003938  0E00               	movlw	0
 10994  00393A  6E06               	movwf	___flge@ff2+1,c
 10995  00393C  0E80               	movlw	128
 10996  00393E  6E07               	movwf	___flge@ff2+2,c
 10997  003940  0E3F               	movlw	63
 10998  003942  6E08               	movwf	___flge@ff2+3,c
 10999  003944  EC34  F007         	call	___flge	;wreg free
 11000  003948  B0D8               	btfsc	status,0,c
 11001  00394A  D005               	goto	l4399
 11002                           
 11003                           ;doprnt.c: 849: exp--;
 11004  00394C  0101               	movlb	1	; () banked
 11005  00394E  072A               	decf	printf@exp& (0+255),f,b
 11006  003950  A0D8               	btfss	status,0,c
 11007  003952  072B               	decf	(printf@exp+1)& (0+255),f,b
 11008  003954  D017               	goto	l4403
 11009  003956                     l4399:
 11010                           
 11011                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 11012  003956  C122  F001         	movff	printf@tmpval,___flge@ff1
 11013  00395A  C123  F002         	movff	printf@tmpval+1,___flge@ff1+1
 11014  00395E  C124  F003         	movff	printf@tmpval+2,___flge@ff1+2
 11015  003962  C125  F004         	movff	printf@tmpval+3,___flge@ff1+3
 11016  003966  0E00               	movlw	0
 11017  003968  6E05               	movwf	___flge@ff2,c
 11018  00396A  0E00               	movlw	0
 11019  00396C  6E06               	movwf	___flge@ff2+1,c
 11020  00396E  0E20               	movlw	32
 11021  003970  6E07               	movwf	___flge@ff2+2,c
 11022  003972  0E41               	movlw	65
 11023  003974  6E08               	movwf	___flge@ff2+3,c
 11024  003976  EC34  F007         	call	___flge	;wreg free
 11025  00397A  A0D8               	btfss	status,0,c
 11026  00397C  D003               	goto	l4403
 11027                           
 11028                           ;doprnt.c: 851: exp++;
 11029  00397E  0101               	movlb	1	; () banked
 11030  003980  4B2A               	infsnz	printf@exp& (0+255),f,b
 11031  003982  2B2B               	incf	(printf@exp+1)& (0+255),f,b
 11032  003984                     l4403:
 11033                           
 11034                           ;doprnt.c: 852: }
 11035                           ;doprnt.c: 1112: if(prec <= 12)
 11036  003984  0101               	movlb	1	; () banked
 11037  003986  BF33               	btfsc	(printf@prec+1)& (0+255),7,b
 11038  003988  D008               	goto	l4405
 11039  00398A  0101               	movlb	1	; () banked
 11040  00398C  5133               	movf	(printf@prec+1)& (0+255),w,b
 11041  00398E  E123               	bnz	l4407
 11042  003990  0E0D               	movlw	13
 11043  003992  0101               	movlb	1	; () banked
 11044  003994  5D32               	subwf	printf@prec& (0+255),w,b
 11045  003996  B0D8               	btfsc	status,0,c
 11046  003998  D01E               	goto	l4407
 11047  00399A                     l4405:
 11048                           
 11049                           ; BSR set to: 1
 11050                           ;doprnt.c: 1113: fval += fround(prec);
 11051  00399A  C12E  F060         	movff	printf@fval,___fladd@b
 11052  00399E  C12F  F061         	movff	printf@fval+1,___fladd@b+1
 11053  0039A2  C130  F062         	movff	printf@fval+2,___fladd@b+2
 11054  0039A6  C131  F063         	movff	printf@fval+3,___fladd@b+3
 11055  0039AA  0101               	movlb	1	; () banked
 11056  0039AC  5132               	movf	printf@prec& (0+255),w,b
 11057  0039AE  EC89  F00F         	call	_fround
 11058  0039B2  C050  F064         	movff	?_fround,___fladd@a
 11059  0039B6  C051  F065         	movff	?_fround+1,___fladd@a+1
 11060  0039BA  C052  F066         	movff	?_fround+2,___fladd@a+2
 11061  0039BE  C053  F067         	movff	?_fround+3,___fladd@a+3
 11062  0039C2  EC7C  F018         	call	___fladd	;wreg free
 11063  0039C6  C060  F12E         	movff	?___fladd,printf@fval
 11064  0039CA  C061  F12F         	movff	?___fladd+1,printf@fval+1
 11065  0039CE  C062  F130         	movff	?___fladd+2,printf@fval+2
 11066  0039D2  C063  F131         	movff	?___fladd+3,printf@fval+3
 11067  0039D6                     l4407:
 11068                           
 11069                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 11070  0039D6  0101               	movlb	1	; () banked
 11071  0039D8  BF2B               	btfsc	(printf@exp+1)& (0+255),7,b
 11072  0039DA  D008               	goto	l4409
 11073  0039DC  0101               	movlb	1	; () banked
 11074  0039DE  512B               	movf	(printf@exp+1)& (0+255),w,b
 11075  0039E0  E12A               	bnz	l4415
 11076  0039E2  0E0A               	movlw	10
 11077  0039E4  0101               	movlb	1	; () banked
 11078  0039E6  5D2A               	subwf	printf@exp& (0+255),w,b
 11079  0039E8  B0D8               	btfsc	status,0,c
 11080  0039EA  D025               	goto	l4415
 11081  0039EC                     l4409:
 11082                           
 11083                           ; BSR set to: 1
 11084  0039EC  0101               	movlb	1	; () banked
 11085  0039EE  512E               	movf	printf@fval& (0+255),w,b
 11086  0039F0  0101               	movlb	1	; () banked
 11087  0039F2  112F               	iorwf	(printf@fval+1)& (0+255),w,b
 11088  0039F4  0101               	movlb	1	; () banked
 11089  0039F6  1130               	iorwf	(printf@fval+2)& (0+255),w,b
 11090  0039F8  0101               	movlb	1	; () banked
 11091  0039FA  1131               	iorwf	(printf@fval+3)& (0+255),w,b
 11092  0039FC  B4D8               	btfsc	status,2,c
 11093  0039FE  D067               	goto	l4429
 11094                           
 11095                           ; BSR set to: 1
 11096  003A00  C12E  F059         	movff	printf@fval,___fltol@f1
 11097  003A04  C12F  F05A         	movff	printf@fval+1,___fltol@f1+1
 11098  003A08  C130  F05B         	movff	printf@fval+2,___fltol@f1+2
 11099  003A0C  C131  F05C         	movff	printf@fval+3,___fltol@f1+3
 11100  003A10  ECB2  F003         	call	___fltol	;wreg free
 11101  003A14  5059               	movf	?___fltol,w,c
 11102  003A16  105A               	iorwf	?___fltol+1,w,c
 11103  003A18  105B               	iorwf	?___fltol+2,w,c
 11104  003A1A  105C               	iorwf	?___fltol+3,w,c
 11105  003A1C  A4D8               	btfss	status,2,c
 11106  003A1E  D057               	goto	l4429
 11107  003A20  0101               	movlb	1	; () banked
 11108  003A22  BF2B               	btfsc	(printf@exp+1)& (0+255),7,b
 11109  003A24  D054               	goto	l4429
 11110  003A26  0101               	movlb	1	; () banked
 11111  003A28  512B               	movf	(printf@exp+1)& (0+255),w,b
 11112  003A2A  E105               	bnz	l4415
 11113  003A2C  0E02               	movlw	2
 11114  003A2E  0101               	movlb	1	; () banked
 11115  003A30  5D2A               	subwf	printf@exp& (0+255),w,b
 11116  003A32  A0D8               	btfss	status,0,c
 11117  003A34  D04C               	goto	l4429
 11118  003A36                     l4415:
 11119                           
 11120                           ; BSR set to: 1
 11121                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 11122  003A36  C122  F001         	movff	printf@tmpval,___flge@ff1
 11123  003A3A  C123  F002         	movff	printf@tmpval+1,___flge@ff1+1
 11124  003A3E  C124  F003         	movff	printf@tmpval+2,___flge@ff1+2
 11125  003A42  C125  F004         	movff	printf@tmpval+3,___flge@ff1+3
 11126  003A46  0E5F               	movlw	95
 11127  003A48  6E05               	movwf	___flge@ff2,c
 11128  003A4A  0E70               	movlw	112
 11129  003A4C  6E06               	movwf	___flge@ff2+1,c
 11130  003A4E  0E89               	movlw	137
 11131  003A50  6E07               	movwf	___flge@ff2+2,c
 11132  003A52  0E40               	movlw	64
 11133  003A54  6E08               	movwf	___flge@ff2+3,c
 11134  003A56  EC34  F007         	call	___flge	;wreg free
 11135  003A5A  B0D8               	btfsc	status,0,c
 11136  003A5C  D003               	goto	l4419
 11137                           
 11138                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 11139  003A5E  0101               	movlb	1	; () banked
 11140  003A60  0EF7               	movlw	247
 11141  003A62  D002               	goto	L2
 11142  003A64                     l4419:
 11143                           
 11144                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 11145  003A64  0101               	movlb	1	; () banked
 11146  003A66  0EF8               	movlw	248
 11147  003A68                     L2:
 11148  003A68  272A               	addwf	printf@exp& (0+255),f,b
 11149  003A6A  0EFF               	movlw	255
 11150  003A6C  232B               	addwfc	(printf@exp+1)& (0+255),f,b
 11151                           
 11152                           ; BSR set to: 1
 11153                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 11154                           
 11155                           ; BSR set to: 1
 11156  003A6E  0101               	movlb	1	; () banked
 11157  003A70  512A               	movf	printf@exp& (0+255),w,b
 11158  003A72  EC70  F016         	call	_scale
 11159  003A76  C050  F122         	movff	?_scale,printf@tmpval
 11160  003A7A  C051  F123         	movff	?_scale+1,printf@tmpval+1
 11161  003A7E  C052  F124         	movff	?_scale+2,printf@tmpval+2
 11162  003A82  C053  F125         	movff	?_scale+3,printf@tmpval+3
 11163  003A86  C12E  F001         	movff	printf@fval,__div_to_l_@f1
 11164  003A8A  C12F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
 11165  003A8E  C130  F003         	movff	printf@fval+2,__div_to_l_@f1+2
 11166  003A92  C131  F004         	movff	printf@fval+3,__div_to_l_@f1+3
 11167  003A96  C122  F005         	movff	printf@tmpval,__div_to_l_@f2
 11168  003A9A  C123  F006         	movff	printf@tmpval+1,__div_to_l_@f2+1
 11169  003A9E  C124  F007         	movff	printf@tmpval+2,__div_to_l_@f2+2
 11170  003AA2  C125  F008         	movff	printf@tmpval+3,__div_to_l_@f2+3
 11171  003AA6  ECC4  F007         	call	__div_to_l_	;wreg free
 11172  003AAA  C001  F126         	movff	?__div_to_l_,printf@val
 11173  003AAE  C002  F127         	movff	?__div_to_l_+1,printf@val+1
 11174  003AB2  C003  F128         	movff	?__div_to_l_+2,printf@val+2
 11175  003AB6  C004  F129         	movff	?__div_to_l_+3,printf@val+3
 11176                           
 11177                           ;doprnt.c: 1129: fval = 0.0;
 11178  003ABA  0E00               	movlw	0
 11179  003ABC  0101               	movlb	1	; () banked
 11180  003ABE  6F2E               	movwf	printf@fval& (0+255),b
 11181  003AC0  0E00               	movlw	0
 11182  003AC2  6F2F               	movwf	(printf@fval+1)& (0+255),b
 11183  003AC4  0E00               	movlw	0
 11184  003AC6  6F30               	movwf	(printf@fval+2)& (0+255),b
 11185  003AC8  0E00               	movlw	0
 11186  003ACA  6F31               	movwf	(printf@fval+3)& (0+255),b
 11187                           
 11188                           ;doprnt.c: 1130: } else {
 11189  003ACC  D03C               	goto	l4433
 11190  003ACE                     l4429:
 11191                           
 11192                           ;doprnt.c: 1131: val = (unsigned long)fval;
 11193  003ACE  C12E  F059         	movff	printf@fval,___fltol@f1
 11194  003AD2  C12F  F05A         	movff	printf@fval+1,___fltol@f1+1
 11195  003AD6  C130  F05B         	movff	printf@fval+2,___fltol@f1+2
 11196  003ADA  C131  F05C         	movff	printf@fval+3,___fltol@f1+3
 11197  003ADE  ECB2  F003         	call	___fltol	;wreg free
 11198  003AE2  C059  F126         	movff	?___fltol,printf@val
 11199  003AE6  C05A  F127         	movff	?___fltol+1,printf@val+1
 11200  003AEA  C05B  F128         	movff	?___fltol+2,printf@val+2
 11201  003AEE  C05C  F129         	movff	?___fltol+3,printf@val+3
 11202                           
 11203                           ;doprnt.c: 1132: fval -= (double)val;
 11204  003AF2  C12E  F074         	movff	printf@fval,___flsub@b
 11205  003AF6  C12F  F075         	movff	printf@fval+1,___flsub@b+1
 11206  003AFA  C130  F076         	movff	printf@fval+2,___flsub@b+2
 11207  003AFE  C131  F077         	movff	printf@fval+3,___flsub@b+3
 11208  003B02  C126  F007         	movff	printf@val,___xxtofl@val
 11209  003B06  C127  F008         	movff	printf@val+1,___xxtofl@val+1
 11210  003B0A  C128  F009         	movff	printf@val+2,___xxtofl@val+2
 11211  003B0E  C129  F00A         	movff	printf@val+3,___xxtofl@val+3
 11212  003B12  0E00               	movlw	0
 11213  003B14  EC95  F009         	call	___xxtofl
 11214  003B18  C007  F078         	movff	?___xxtofl,___flsub@a
 11215  003B1C  C008  F079         	movff	?___xxtofl+1,___flsub@a+1
 11216  003B20  C009  F07A         	movff	?___xxtofl+2,___flsub@a+2
 11217  003B24  C00A  F07B         	movff	?___xxtofl+3,___flsub@a+3
 11218  003B28  ECBF  F001         	call	___flsub	;wreg free
 11219  003B2C  C074  F12E         	movff	?___flsub,printf@fval
 11220  003B30  C075  F12F         	movff	?___flsub+1,printf@fval+1
 11221  003B34  C076  F130         	movff	?___flsub+2,printf@fval+2
 11222  003B38  C077  F131         	movff	?___flsub+3,printf@fval+3
 11223                           
 11224                           ;doprnt.c: 1133: exp = 0;
 11225  003B3C  0E00               	movlw	0
 11226  003B3E  0101               	movlb	1	; () banked
 11227  003B40  6F2B               	movwf	(printf@exp+1)& (0+255),b
 11228  003B42  0E00               	movlw	0
 11229  003B44  6F2A               	movwf	printf@exp& (0+255),b
 11230  003B46                     l4433:
 11231                           
 11232                           ; BSR set to: 1
 11233                           ;doprnt.c: 1134: }
 11234                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11235  003B46  0E01               	movlw	1
 11236  003B48  0101               	movlb	1	; () banked
 11237  003B4A  6F34               	movwf	printf@c& (0+255),b
 11238  003B4C                     l4435:
 11239                           
 11240                           ; BSR set to: 1
 11241  003B4C  0E0A               	movlw	10
 11242  003B4E  0101               	movlb	1	; () banked
 11243  003B50  1934               	xorwf	printf@c& (0+255),w,b
 11244  003B52  B4D8               	btfsc	status,2,c
 11245  003B54  D01E               	goto	l4447
 11246                           
 11247                           ; BSR set to: 1
 11248                           ;doprnt.c: 1137: if(val < dpowers[c])
 11249                           
 11250                           ; BSR set to: 1
 11251                           
 11252                           ; BSR set to: 1
 11253  003B56  0101               	movlb	1	; () banked
 11254  003B58  5134               	movf	printf@c& (0+255),w,b
 11255  003B5A  0D04               	mullw	4
 11256  003B5C  0EAF               	movlw	low _dpowers
 11257  003B5E  24F3               	addwf	prodl,w,c
 11258  003B60  6EF6               	movwf	tblptrl,c
 11259  003B62  0E59               	movlw	high _dpowers
 11260  003B64  20F4               	addwfc	prodh,w,c
 11261  003B66  6EF7               	movwf	tblptrh,c
 11262  003B68                     	if	0	;There are less than 3 active tblptr bytes
 11263  003B68                     	endif
 11264  003B68  0009               	tblrd		*+
 11265  003B6A  50F5               	movf	tablat,w,c
 11266  003B6C  0101               	movlb	1	; () banked
 11267  003B6E  5D26               	subwf	printf@val& (0+255),w,b
 11268  003B70  0009               	tblrd		*+
 11269  003B72  50F5               	movf	tablat,w,c
 11270  003B74  0101               	movlb	1	; () banked
 11271  003B76  5927               	subwfb	(printf@val+1)& (0+255),w,b
 11272  003B78  0009               	tblrd		*+
 11273  003B7A  50F5               	movf	tablat,w,c
 11274  003B7C  0101               	movlb	1	; () banked
 11275  003B7E  5928               	subwfb	(printf@val+2)& (0+255),w,b
 11276  003B80  0009               	tblrd		*+
 11277  003B82  50F5               	movf	tablat,w,c
 11278  003B84  0101               	movlb	1	; () banked
 11279  003B86  5929               	subwfb	(printf@val+3)& (0+255),w,b
 11280  003B88  A0D8               	btfss	status,0,c
 11281  003B8A  D003               	goto	l4447
 11282                           
 11283                           ; BSR set to: 1
 11284                           
 11285                           ; BSR set to: 1
 11286                           
 11287                           ; BSR set to: 1
 11288                           ;doprnt.c: 1138: break;
 11289  003B8C  0101               	movlb	1	; () banked
 11290  003B8E  2B34               	incf	printf@c& (0+255),f,b
 11291  003B90  D7DD               	goto	l4435
 11292  003B92                     l4447:
 11293                           
 11294                           ; BSR set to: 1
 11295                           ;doprnt.c: 1142: width -= prec + c + exp;
 11296  003B92  C134  F112         	movff	printf@c,??_printf
 11297  003B96  0101               	movlb	1	; () banked
 11298  003B98  6B13               	clrf	(??_printf+1)& (0+255),b
 11299  003B9A  BF12               	btfsc	??_printf& (0+255),7,b
 11300  003B9C  0713               	decf	(??_printf+1)& (0+255),f,b
 11301  003B9E  0101               	movlb	1	; () banked
 11302  003BA0  5132               	movf	printf@prec& (0+255),w,b
 11303  003BA2  0101               	movlb	1	; () banked
 11304  003BA4  2712               	addwf	??_printf& (0+255),f,b
 11305  003BA6  0101               	movlb	1	; () banked
 11306  003BA8  5133               	movf	(printf@prec+1)& (0+255),w,b
 11307  003BAA  0101               	movlb	1	; () banked
 11308  003BAC  2313               	addwfc	(??_printf+1)& (0+255),f,b
 11309  003BAE  0101               	movlb	1	; () banked
 11310  003BB0  512A               	movf	printf@exp& (0+255),w,b
 11311  003BB2  0101               	movlb	1	; () banked
 11312  003BB4  2712               	addwf	??_printf& (0+255),f,b
 11313  003BB6  0101               	movlb	1	; () banked
 11314  003BB8  512B               	movf	(printf@exp+1)& (0+255),w,b
 11315  003BBA  0101               	movlb	1	; () banked
 11316  003BBC  2313               	addwfc	(??_printf+1)& (0+255),f,b
 11317  003BBE  0101               	movlb	1	; () banked
 11318  003BC0  5112               	movf	??_printf& (0+255),w,b
 11319  003BC2  0101               	movlb	1	; () banked
 11320  003BC4  5F2C               	subwf	printf@width& (0+255),f,b
 11321  003BC6  0101               	movlb	1	; () banked
 11322  003BC8  5113               	movf	(??_printf+1)& (0+255),w,b
 11323  003BCA  0101               	movlb	1	; () banked
 11324  003BCC  5B2D               	subwfb	(printf@width+1)& (0+255),f,b
 11325                           
 11326                           ;doprnt.c: 1143: if(
 11327                           ;doprnt.c: 1147: prec)
 11328  003BCE  0101               	movlb	1	; () banked
 11329  003BD0  5132               	movf	printf@prec& (0+255),w,b
 11330  003BD2  0101               	movlb	1	; () banked
 11331  003BD4  1133               	iorwf	(printf@prec+1)& (0+255),w,b
 11332  003BD6  B4D8               	btfsc	status,2,c
 11333  003BD8  D004               	goto	l4451
 11334                           
 11335                           ; BSR set to: 1
 11336                           ;doprnt.c: 1148: width--;
 11337  003BDA  0101               	movlb	1	; () banked
 11338  003BDC  072C               	decf	printf@width& (0+255),f,b
 11339  003BDE  A0D8               	btfss	status,0,c
 11340  003BE0  072D               	decf	(printf@width+1)& (0+255),f,b
 11341  003BE2                     l4451:
 11342                           
 11343                           ; BSR set to: 1
 11344                           ;doprnt.c: 1149: if(flag & 0x03)
 11345  003BE2  0E03               	movlw	3
 11346  003BE4  0101               	movlb	1	; () banked
 11347  003BE6  1520               	andwf	printf@flag& (0+255),w,b
 11348  003BE8  0101               	movlb	1	; () banked
 11349  003BEA  6F12               	movwf	??_printf& (0+255),b
 11350  003BEC  0E00               	movlw	0
 11351  003BEE  0101               	movlb	1	; () banked
 11352  003BF0  1521               	andwf	(printf@flag+1)& (0+255),w,b
 11353  003BF2  0101               	movlb	1	; () banked
 11354  003BF4  6F13               	movwf	(??_printf+1)& (0+255),b
 11355  003BF6  0101               	movlb	1	; () banked
 11356  003BF8  5112               	movf	??_printf& (0+255),w,b
 11357  003BFA  0101               	movlb	1	; () banked
 11358  003BFC  1113               	iorwf	(??_printf+1)& (0+255),w,b
 11359  003BFE  B4D8               	btfsc	status,2,c
 11360  003C00  D008               	goto	l4459
 11361  003C02  D003               	goto	l4457
 11362  003C04                     l4455:
 11363                           
 11364                           ; BSR set to: 1
 11365                           ;doprnt.c: 1181: (putch(' ') );
 11366  003C04  0E20               	movlw	32
 11367  003C06  EC43  F001         	call	_putch
 11368  003C0A                     l4457:
 11369                           
 11370                           ;doprnt.c: 1182: width--;
 11371  003C0A  0101               	movlb	1	; () banked
 11372  003C0C  072C               	decf	printf@width& (0+255),f,b
 11373  003C0E  A0D8               	btfss	status,0,c
 11374  003C10  072D               	decf	(printf@width+1)& (0+255),f,b
 11375  003C12                     l4459:
 11376                           
 11377                           ; BSR set to: 1
 11378  003C12  0101               	movlb	1	; () banked
 11379  003C14  BF2D               	btfsc	(printf@width+1)& (0+255),7,b
 11380  003C16  D007               	goto	l4461
 11381  003C18  0101               	movlb	1	; () banked
 11382  003C1A  512D               	movf	(printf@width+1)& (0+255),w,b
 11383  003C1C  E1F3               	bnz	l4455
 11384  003C1E  0101               	movlb	1	; () banked
 11385  003C20  052C               	decf	printf@width& (0+255),w,b
 11386  003C22  B0D8               	btfsc	status,0,c
 11387  003C24  D7EF               	goto	l4455
 11388  003C26                     l4461:
 11389                           
 11390                           ; BSR set to: 1
 11391                           ;doprnt.c: 1183: }
 11392                           ;doprnt.c: 1188: if(flag & 0x03)
 11393  003C26  0E03               	movlw	3
 11394  003C28  0101               	movlb	1	; () banked
 11395  003C2A  1520               	andwf	printf@flag& (0+255),w,b
 11396  003C2C  0101               	movlb	1	; () banked
 11397  003C2E  6F12               	movwf	??_printf& (0+255),b
 11398  003C30  0E00               	movlw	0
 11399  003C32  0101               	movlb	1	; () banked
 11400  003C34  1521               	andwf	(printf@flag+1)& (0+255),w,b
 11401  003C36  0101               	movlb	1	; () banked
 11402  003C38  6F13               	movwf	(??_printf+1)& (0+255),b
 11403  003C3A  0101               	movlb	1	; () banked
 11404  003C3C  5112               	movf	??_printf& (0+255),w,b
 11405  003C3E  0101               	movlb	1	; () banked
 11406  003C40  1113               	iorwf	(??_printf+1)& (0+255),w,b
 11407  003C42  B4D8               	btfsc	status,2,c
 11408  003C44  D04A               	goto	l4471
 11409                           
 11410                           ; BSR set to: 1
 11411                           ;doprnt.c: 1190: (putch('-') );
 11412  003C46  0E2D               	movlw	45
 11413  003C48  EC43  F001         	call	_putch
 11414                           
 11415                           ;doprnt.c: 1195: }
 11416                           ;doprnt.c: 1196: while(c--) {
 11417  003C4C  D046               	goto	l4471
 11418  003C4E                     l4465:
 11419                           
 11420                           ;doprnt.c: 1200: {
 11421                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 11422  003C4E  C126  F001         	movff	printf@val,___lldiv@dividend
 11423  003C52  C127  F002         	movff	printf@val+1,___lldiv@dividend+1
 11424  003C56  C128  F003         	movff	printf@val+2,___lldiv@dividend+2
 11425  003C5A  C129  F004         	movff	printf@val+3,___lldiv@dividend+3
 11426  003C5E  0101               	movlb	1	; () banked
 11427  003C60  5134               	movf	printf@c& (0+255),w,b
 11428  003C62  0D04               	mullw	4
 11429  003C64  0EAF               	movlw	low _dpowers
 11430  003C66  24F3               	addwf	prodl,w,c
 11431  003C68  6EF6               	movwf	tblptrl,c
 11432  003C6A  0E59               	movlw	high _dpowers
 11433  003C6C  20F4               	addwfc	prodh,w,c
 11434  003C6E  6EF7               	movwf	tblptrh,c
 11435  003C70                     	if	0	;There are less than 3 active tblptr bytes
 11436  003C70                     	endif
 11437  003C70  0009               	tblrd		*+
 11438  003C72  CFF5 F005          	movff	tablat,___lldiv@divisor
 11439  003C76  0009               	tblrd		*+
 11440  003C78  CFF5 F006          	movff	tablat,___lldiv@divisor+1
 11441  003C7C  0009               	tblrd		*+
 11442  003C7E  CFF5 F007          	movff	tablat,___lldiv@divisor+2
 11443  003C82  000A               	tblrd		*-
 11444  003C84  CFF5 F008          	movff	tablat,___lldiv@divisor+3
 11445  003C88  EC7E  F002         	call	___lldiv	;wreg free
 11446  003C8C  C001  F122         	movff	?___lldiv,printf@tmpval
 11447  003C90  C002  F123         	movff	?___lldiv+1,printf@tmpval+1
 11448  003C94  C003  F124         	movff	?___lldiv+2,printf@tmpval+2
 11449  003C98  C004  F125         	movff	?___lldiv+3,printf@tmpval+3
 11450                           
 11451                           ;doprnt.c: 1202: tmpval.vd %= 10;
 11452  003C9C  C122  F00E         	movff	printf@tmpval,___llmod@dividend
 11453  003CA0  C123  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
 11454  003CA4  C124  F010         	movff	printf@tmpval+2,___llmod@dividend+2
 11455  003CA8  C125  F011         	movff	printf@tmpval+3,___llmod@dividend+3
 11456  003CAC  0E0A               	movlw	10
 11457  003CAE  6E12               	movwf	___llmod@divisor,c
 11458  003CB0  0E00               	movlw	0
 11459  003CB2  6E13               	movwf	___llmod@divisor+1,c
 11460  003CB4  0E00               	movlw	0
 11461  003CB6  6E14               	movwf	___llmod@divisor+2,c
 11462  003CB8  0E00               	movlw	0
 11463  003CBA  6E15               	movwf	___llmod@divisor+3,c
 11464  003CBC  EC13  F002         	call	___llmod	;wreg free
 11465  003CC0  C00E  F122         	movff	?___llmod,printf@tmpval
 11466  003CC4  C00F  F123         	movff	?___llmod+1,printf@tmpval+1
 11467  003CC8  C010  F124         	movff	?___llmod+2,printf@tmpval+2
 11468  003CCC  C011  F125         	movff	?___llmod+3,printf@tmpval+3
 11469                           
 11470                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 11471  003CD0  0101               	movlb	1	; () banked
 11472  003CD2  5122               	movf	printf@tmpval& (0+255),w,b
 11473  003CD4  0F30               	addlw	48
 11474  003CD6  EC43  F001         	call	_putch
 11475  003CDA                     l4471:
 11476  003CDA  0101               	movlb	1	; () banked
 11477  003CDC  0734               	decf	printf@c& (0+255),f,b
 11478  003CDE  0101               	movlb	1	; () banked
 11479  003CE0  2934               	incf	printf@c& (0+255),w,b
 11480  003CE2  B4D8               	btfsc	status,2,c
 11481  003CE4  D008               	goto	l4477
 11482  003CE6  D7B3               	goto	l4465
 11483  003CE8                     l4473:
 11484                           
 11485                           ; BSR set to: 1
 11486                           ;doprnt.c: 1208: (putch('0') );
 11487  003CE8  0E30               	movlw	48
 11488  003CEA  EC43  F001         	call	_putch
 11489                           
 11490                           ;doprnt.c: 1209: exp--;
 11491  003CEE  0101               	movlb	1	; () banked
 11492  003CF0  072A               	decf	printf@exp& (0+255),f,b
 11493  003CF2  A0D8               	btfss	status,0,c
 11494  003CF4  072B               	decf	(printf@exp+1)& (0+255),f,b
 11495  003CF6                     l4477:
 11496                           
 11497                           ; BSR set to: 1
 11498  003CF6  0101               	movlb	1	; () banked
 11499  003CF8  BF2B               	btfsc	(printf@exp+1)& (0+255),7,b
 11500  003CFA  D007               	goto	l4479
 11501  003CFC  0101               	movlb	1	; () banked
 11502  003CFE  512B               	movf	(printf@exp+1)& (0+255),w,b
 11503  003D00  E1F3               	bnz	l4473
 11504  003D02  0101               	movlb	1	; () banked
 11505  003D04  052A               	decf	printf@exp& (0+255),w,b
 11506  003D06  B0D8               	btfsc	status,0,c
 11507  003D08  D7EF               	goto	l4473
 11508  003D0A                     l4479:
 11509                           
 11510                           ; BSR set to: 1
 11511                           ;doprnt.c: 1210: }
 11512                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11513  003D0A  0101               	movlb	1	; () banked
 11514  003D0C  BF33               	btfsc	(printf@prec+1)& (0+255),7,b
 11515  003D0E  D00C               	goto	l277
 11516  003D10  0101               	movlb	1	; () banked
 11517  003D12  5133               	movf	(printf@prec+1)& (0+255),w,b
 11518  003D14  E105               	bnz	u5290
 11519  003D16  0E09               	movlw	9
 11520  003D18  0101               	movlb	1	; () banked
 11521  003D1A  5D32               	subwf	printf@prec& (0+255),w,b
 11522  003D1C  A0D8               	btfss	status,0,c
 11523  003D1E  D004               	goto	l277
 11524  003D20                     u5290:
 11525                           
 11526                           ; BSR set to: 1
 11527                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 11528  003D20  0E08               	movlw	8
 11529  003D22  0101               	movlb	1	; () banked
 11530  003D24  6F34               	movwf	printf@c& (0+255),b
 11531  003D26  D002               	goto	l4483
 11532  003D28                     l277:
 11533                           
 11534                           ; BSR set to: 1
 11535                           ;doprnt.c: 1213: else
 11536                           ;doprnt.c: 1214: c = prec;
 11537  003D28  C132  F134         	movff	printf@prec,printf@c
 11538  003D2C                     l4483:
 11539                           
 11540                           ; BSR set to: 1
 11541                           ;doprnt.c: 1215: prec -= c;
 11542  003D2C  0101               	movlb	1	; () banked
 11543  003D2E  5134               	movf	printf@c& (0+255),w,b
 11544  003D30  0101               	movlb	1	; () banked
 11545  003D32  5F32               	subwf	printf@prec& (0+255),f,b
 11546  003D34  0E00               	movlw	0
 11547  003D36  0101               	movlb	1	; () banked
 11548  003D38  BF34               	btfsc	printf@c& (0+255),7,b
 11549  003D3A  0EFF               	movlw	255
 11550  003D3C  0101               	movlb	1	; () banked
 11551  003D3E  5B33               	subwfb	(printf@prec+1)& (0+255),f,b
 11552                           
 11553                           ; BSR set to: 1
 11554                           ;doprnt.c: 1219: if(c)
 11555  003D40  0101               	movlb	1	; () banked
 11556  003D42  5134               	movf	printf@c& (0+255),w,b
 11557  003D44  0101               	movlb	1	; () banked
 11558  003D46  B4D8               	btfsc	status,2,c
 11559  003D48  D003               	goto	l4489
 11560                           
 11561                           ; BSR set to: 1
 11562                           ;doprnt.c: 1221: (putch('.') );
 11563  003D4A  0E2E               	movlw	46
 11564  003D4C  EC43  F001         	call	_putch
 11565  003D50                     l4489:
 11566                           
 11567                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11568  003D50  0101               	movlb	1	; () banked
 11569  003D52  5134               	movf	printf@c& (0+255),w,b
 11570  003D54  EC70  F016         	call	_scale
 11571  003D58  C050  F116         	movff	?_scale,_printf$1394
 11572  003D5C  C051  F117         	movff	?_scale+1,_printf$1394+1
 11573  003D60  C052  F118         	movff	?_scale+2,_printf$1394+2
 11574  003D64  C053  F119         	movff	?_scale+3,_printf$1394+3
 11575                           
 11576                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11577  003D68  C12E  F03B         	movff	printf@fval,___flmul@a
 11578  003D6C  C12F  F03C         	movff	printf@fval+1,___flmul@a+1
 11579  003D70  C130  F03D         	movff	printf@fval+2,___flmul@a+2
 11580  003D74  C131  F03E         	movff	printf@fval+3,___flmul@a+3
 11581  003D78  C116  F037         	movff	_printf$1394,___flmul@b
 11582  003D7C  C117  F038         	movff	_printf$1394+1,___flmul@b+1
 11583  003D80  C118  F039         	movff	_printf$1394+2,___flmul@b+2
 11584  003D84  C119  F03A         	movff	_printf$1394+3,___flmul@b+3
 11585  003D88  ECC8  F014         	call	___flmul	;wreg free
 11586  003D8C  C037  F059         	movff	?___flmul,___fltol@f1
 11587  003D90  C038  F05A         	movff	?___flmul+1,___fltol@f1+1
 11588  003D94  C039  F05B         	movff	?___flmul+2,___fltol@f1+2
 11589  003D98  C03A  F05C         	movff	?___flmul+3,___fltol@f1+3
 11590  003D9C  ECB2  F003         	call	___fltol	;wreg free
 11591  003DA0  C059  F126         	movff	?___fltol,printf@val
 11592  003DA4  C05A  F127         	movff	?___fltol+1,printf@val+1
 11593  003DA8  C05B  F128         	movff	?___fltol+2,printf@val+2
 11594  003DAC  C05C  F129         	movff	?___fltol+3,printf@val+3
 11595                           
 11596                           ;doprnt.c: 1228: while(c--) {
 11597  003DB0  D06D               	goto	l4499
 11598  003DB2                     l4493:
 11599                           
 11600                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 11601  003DB2  C126  F001         	movff	printf@val,___lldiv@dividend
 11602  003DB6  C127  F002         	movff	printf@val+1,___lldiv@dividend+1
 11603  003DBA  C128  F003         	movff	printf@val+2,___lldiv@dividend+2
 11604  003DBE  C129  F004         	movff	printf@val+3,___lldiv@dividend+3
 11605  003DC2  0101               	movlb	1	; () banked
 11606  003DC4  5134               	movf	printf@c& (0+255),w,b
 11607  003DC6  0D04               	mullw	4
 11608  003DC8  0EAF               	movlw	low _dpowers
 11609  003DCA  24F3               	addwf	prodl,w,c
 11610  003DCC  6EF6               	movwf	tblptrl,c
 11611  003DCE  0E59               	movlw	high _dpowers
 11612  003DD0  20F4               	addwfc	prodh,w,c
 11613  003DD2  6EF7               	movwf	tblptrh,c
 11614  003DD4                     	if	0	;There are less than 3 active tblptr bytes
 11615  003DD4                     	endif
 11616  003DD4  0009               	tblrd		*+
 11617  003DD6  CFF5 F005          	movff	tablat,___lldiv@divisor
 11618  003DDA  0009               	tblrd		*+
 11619  003DDC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
 11620  003DE0  0009               	tblrd		*+
 11621  003DE2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
 11622  003DE6  000A               	tblrd		*-
 11623  003DE8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
 11624  003DEC  EC7E  F002         	call	___lldiv	;wreg free
 11625  003DF0  C001  F122         	movff	?___lldiv,printf@tmpval
 11626  003DF4  C002  F123         	movff	?___lldiv+1,printf@tmpval+1
 11627  003DF8  C003  F124         	movff	?___lldiv+2,printf@tmpval+2
 11628  003DFC  C004  F125         	movff	?___lldiv+3,printf@tmpval+3
 11629                           
 11630                           ;doprnt.c: 1230: tmpval.vd %= 10;
 11631  003E00  C122  F00E         	movff	printf@tmpval,___llmod@dividend
 11632  003E04  C123  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
 11633  003E08  C124  F010         	movff	printf@tmpval+2,___llmod@dividend+2
 11634  003E0C  C125  F011         	movff	printf@tmpval+3,___llmod@dividend+3
 11635  003E10  0E0A               	movlw	10
 11636  003E12  6E12               	movwf	___llmod@divisor,c
 11637  003E14  0E00               	movlw	0
 11638  003E16  6E13               	movwf	___llmod@divisor+1,c
 11639  003E18  0E00               	movlw	0
 11640  003E1A  6E14               	movwf	___llmod@divisor+2,c
 11641  003E1C  0E00               	movlw	0
 11642  003E1E  6E15               	movwf	___llmod@divisor+3,c
 11643  003E20  EC13  F002         	call	___llmod	;wreg free
 11644  003E24  C00E  F122         	movff	?___llmod,printf@tmpval
 11645  003E28  C00F  F123         	movff	?___llmod+1,printf@tmpval+1
 11646  003E2C  C010  F124         	movff	?___llmod+2,printf@tmpval+2
 11647  003E30  C011  F125         	movff	?___llmod+3,printf@tmpval+3
 11648                           
 11649                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 11650  003E34  0101               	movlb	1	; () banked
 11651  003E36  5122               	movf	printf@tmpval& (0+255),w,b
 11652  003E38  0F30               	addlw	48
 11653  003E3A  EC43  F001         	call	_putch
 11654                           
 11655                           ;doprnt.c: 1232: val %= dpowers[c];
 11656  003E3E  C126  F00E         	movff	printf@val,___llmod@dividend
 11657  003E42  C127  F00F         	movff	printf@val+1,___llmod@dividend+1
 11658  003E46  C128  F010         	movff	printf@val+2,___llmod@dividend+2
 11659  003E4A  C129  F011         	movff	printf@val+3,___llmod@dividend+3
 11660  003E4E  0101               	movlb	1	; () banked
 11661  003E50  5134               	movf	printf@c& (0+255),w,b
 11662  003E52  0D04               	mullw	4
 11663  003E54  0EAF               	movlw	low _dpowers
 11664  003E56  24F3               	addwf	prodl,w,c
 11665  003E58  6EF6               	movwf	tblptrl,c
 11666  003E5A  0E59               	movlw	high _dpowers
 11667  003E5C  20F4               	addwfc	prodh,w,c
 11668  003E5E  6EF7               	movwf	tblptrh,c
 11669  003E60                     	if	0	;There are less than 3 active tblptr bytes
 11670  003E60                     	endif
 11671  003E60  0009               	tblrd		*+
 11672  003E62  CFF5 F012          	movff	tablat,___llmod@divisor
 11673  003E66  0009               	tblrd		*+
 11674  003E68  CFF5 F013          	movff	tablat,___llmod@divisor+1
 11675  003E6C  0009               	tblrd		*+
 11676  003E6E  CFF5 F014          	movff	tablat,___llmod@divisor+2
 11677  003E72  000A               	tblrd		*-
 11678  003E74  CFF5 F015          	movff	tablat,___llmod@divisor+3
 11679  003E78  EC13  F002         	call	___llmod	;wreg free
 11680  003E7C  C00E  F126         	movff	?___llmod,printf@val
 11681  003E80  C00F  F127         	movff	?___llmod+1,printf@val+1
 11682  003E84  C010  F128         	movff	?___llmod+2,printf@val+2
 11683  003E88  C011  F129         	movff	?___llmod+3,printf@val+3
 11684  003E8C                     l4499:
 11685  003E8C  0101               	movlb	1	; () banked
 11686  003E8E  0734               	decf	printf@c& (0+255),f,b
 11687  003E90  0101               	movlb	1	; () banked
 11688  003E92  2934               	incf	printf@c& (0+255),w,b
 11689  003E94  B4D8               	btfsc	status,2,c
 11690  003E96  D008               	goto	l4505
 11691  003E98  D78C               	goto	l4493
 11692  003E9A                     l4501:
 11693                           
 11694                           ; BSR set to: 1
 11695                           ;doprnt.c: 1236: (putch('0') );
 11696  003E9A  0E30               	movlw	48
 11697  003E9C  EC43  F001         	call	_putch
 11698                           
 11699                           ;doprnt.c: 1237: prec--;
 11700  003EA0  0101               	movlb	1	; () banked
 11701  003EA2  0732               	decf	printf@prec& (0+255),f,b
 11702  003EA4  A0D8               	btfss	status,0,c
 11703  003EA6  0733               	decf	(printf@prec+1)& (0+255),f,b
 11704  003EA8                     l4505:
 11705                           
 11706                           ; BSR set to: 1
 11707  003EA8  0101               	movlb	1	; () banked
 11708  003EAA  5132               	movf	printf@prec& (0+255),w,b
 11709  003EAC  0101               	movlb	1	; () banked
 11710  003EAE  1133               	iorwf	(printf@prec+1)& (0+255),w,b
 11711  003EB0  B4D8               	btfsc	status,2,c
 11712  003EB2  D159               	goto	l4581
 11713  003EB4  D7F2               	goto	l4501
 11714  003EB6                     l4507:
 11715                           
 11716                           ; BSR set to: 1
 11717                           ;doprnt.c: 1246: }
 11718                           ;doprnt.c: 1253: {
 11719                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11720  003EB6  C11C  FFD9         	movff	printf@ap,fsr2l
 11721  003EBA  C11D  FFDA         	movff	printf@ap+1,fsr2h
 11722  003EBE  CFDE F126          	movff	postinc2,printf@val
 11723  003EC2  CFDD F127          	movff	postdec2,printf@val+1
 11724  003EC6  0101               	movlb	1	; () banked
 11725  003EC8  0E00               	movlw	0
 11726  003ECA  BF27               	btfsc	(printf@val+1)& (0+255),7,b
 11727  003ECC  0EFF               	movlw	-1
 11728  003ECE  6F28               	movwf	(printf@val+2)& (0+255),b
 11729  003ED0  6F29               	movwf	(printf@val+3)& (0+255),b
 11730                           
 11731                           ; BSR set to: 1
 11732  003ED2  0E02               	movlw	2
 11733  003ED4  0101               	movlb	1	; () banked
 11734  003ED6  271C               	addwf	printf@ap& (0+255),f,b
 11735  003ED8  0E00               	movlw	0
 11736  003EDA  231D               	addwfc	(printf@ap+1)& (0+255),f,b
 11737                           
 11738                           ; BSR set to: 1
 11739                           ;doprnt.c: 1261: if((long)val < 0) {
 11740  003EDC  0101               	movlb	1	; () banked
 11741  003EDE  AF29               	btfss	(printf@val+3)& (0+255),7,b
 11742  003EE0  D00C               	goto	l4517
 11743                           
 11744                           ; BSR set to: 1
 11745                           ;doprnt.c: 1262: flag |= 0x03;
 11746  003EE2  0E03               	movlw	3
 11747  003EE4  0101               	movlb	1	; () banked
 11748  003EE6  1320               	iorwf	printf@flag& (0+255),f,b
 11749                           
 11750                           ; BSR set to: 1
 11751                           ;doprnt.c: 1263: val = -val;
 11752  003EE8  0101               	movlb	1	; () banked
 11753  003EEA  1F29               	comf	(printf@val+3)& (0+255),f,b
 11754  003EEC  1F28               	comf	(printf@val+2)& (0+255),f,b
 11755  003EEE  1F27               	comf	(printf@val+1)& (0+255),f,b
 11756  003EF0  6D26               	negf	printf@val& (0+255),b
 11757  003EF2  0E00               	movlw	0
 11758  003EF4  2327               	addwfc	(printf@val+1)& (0+255),f,b
 11759  003EF6  2328               	addwfc	(printf@val+2)& (0+255),f,b
 11760  003EF8  2329               	addwfc	(printf@val+3)& (0+255),f,b
 11761  003EFA                     l4517:
 11762                           
 11763                           ; BSR set to: 1
 11764                           ;doprnt.c: 1264: }
 11765                           ;doprnt.c: 1266: }
 11766                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11767  003EFA  0101               	movlb	1	; () banked
 11768  003EFC  5132               	movf	printf@prec& (0+255),w,b
 11769  003EFE  0101               	movlb	1	; () banked
 11770  003F00  1133               	iorwf	(printf@prec+1)& (0+255),w,b
 11771  003F02  A4D8               	btfss	status,2,c
 11772  003F04  D00D               	goto	l4523
 11773                           
 11774                           ; BSR set to: 1
 11775  003F06  0101               	movlb	1	; () banked
 11776  003F08  5126               	movf	printf@val& (0+255),w,b
 11777  003F0A  0101               	movlb	1	; () banked
 11778  003F0C  1127               	iorwf	(printf@val+1)& (0+255),w,b
 11779  003F0E  0101               	movlb	1	; () banked
 11780  003F10  1128               	iorwf	(printf@val+2)& (0+255),w,b
 11781  003F12  0101               	movlb	1	; () banked
 11782  003F14  1129               	iorwf	(printf@val+3)& (0+255),w,b
 11783  003F16  A4D8               	btfss	status,2,c
 11784  003F18  D003               	goto	l4523
 11785                           
 11786                           ; BSR set to: 1
 11787                           ;doprnt.c: 1291: prec++;
 11788  003F1A  0101               	movlb	1	; () banked
 11789  003F1C  4B32               	infsnz	printf@prec& (0+255),f,b
 11790  003F1E  2B33               	incf	(printf@prec+1)& (0+255),f,b
 11791  003F20                     l4523:
 11792                           
 11793                           ; BSR set to: 1
 11794                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11795  003F20  0E01               	movlw	1
 11796  003F22  0101               	movlb	1	; () banked
 11797  003F24  6F34               	movwf	printf@c& (0+255),b
 11798  003F26                     l4525:
 11799                           
 11800                           ; BSR set to: 1
 11801  003F26  0E0A               	movlw	10
 11802  003F28  0101               	movlb	1	; () banked
 11803  003F2A  1934               	xorwf	printf@c& (0+255),w,b
 11804  003F2C  B4D8               	btfsc	status,2,c
 11805  003F2E  D01E               	goto	l4537
 11806                           
 11807                           ; BSR set to: 1
 11808                           ;doprnt.c: 1306: if(val < dpowers[c])
 11809                           
 11810                           ; BSR set to: 1
 11811                           
 11812                           ; BSR set to: 1
 11813  003F30  0101               	movlb	1	; () banked
 11814  003F32  5134               	movf	printf@c& (0+255),w,b
 11815  003F34  0D04               	mullw	4
 11816  003F36  0EAF               	movlw	low _dpowers
 11817  003F38  24F3               	addwf	prodl,w,c
 11818  003F3A  6EF6               	movwf	tblptrl,c
 11819  003F3C  0E59               	movlw	high _dpowers
 11820  003F3E  20F4               	addwfc	prodh,w,c
 11821  003F40  6EF7               	movwf	tblptrh,c
 11822  003F42                     	if	0	;There are less than 3 active tblptr bytes
 11823  003F42                     	endif
 11824  003F42  0009               	tblrd		*+
 11825  003F44  50F5               	movf	tablat,w,c
 11826  003F46  0101               	movlb	1	; () banked
 11827  003F48  5D26               	subwf	printf@val& (0+255),w,b
 11828  003F4A  0009               	tblrd		*+
 11829  003F4C  50F5               	movf	tablat,w,c
 11830  003F4E  0101               	movlb	1	; () banked
 11831  003F50  5927               	subwfb	(printf@val+1)& (0+255),w,b
 11832  003F52  0009               	tblrd		*+
 11833  003F54  50F5               	movf	tablat,w,c
 11834  003F56  0101               	movlb	1	; () banked
 11835  003F58  5928               	subwfb	(printf@val+2)& (0+255),w,b
 11836  003F5A  0009               	tblrd		*+
 11837  003F5C  50F5               	movf	tablat,w,c
 11838  003F5E  0101               	movlb	1	; () banked
 11839  003F60  5929               	subwfb	(printf@val+3)& (0+255),w,b
 11840  003F62  A0D8               	btfss	status,0,c
 11841  003F64  D003               	goto	l4537
 11842                           
 11843                           ; BSR set to: 1
 11844                           
 11845                           ; BSR set to: 1
 11846                           
 11847                           ; BSR set to: 1
 11848                           ;doprnt.c: 1307: break;
 11849  003F66  0101               	movlb	1	; () banked
 11850  003F68  2B34               	incf	printf@c& (0+255),f,b
 11851  003F6A  D7DD               	goto	l4525
 11852  003F6C                     l4537:
 11853                           
 11854                           ; BSR set to: 1
 11855                           ;doprnt.c: 1339: if(c < prec)
 11856  003F6C  0E80               	movlw	128
 11857  003F6E  0101               	movlb	1	; () banked
 11858  003F70  BF34               	btfsc	printf@c& (0+255),7,b
 11859  003F72  0E7F               	movlw	127
 11860  003F74  0101               	movlb	1	; () banked
 11861  003F76  6F12               	movwf	??_printf& (0+255),b
 11862  003F78  0101               	movlb	1	; () banked
 11863  003F7A  5132               	movf	printf@prec& (0+255),w,b
 11864  003F7C  0101               	movlb	1	; () banked
 11865  003F7E  5D34               	subwf	printf@c& (0+255),w,b
 11866  003F80  0101               	movlb	1	; () banked
 11867  003F82  5133               	movf	(printf@prec+1)& (0+255),w,b
 11868  003F84  0A80               	xorlw	128
 11869  003F86  0101               	movlb	1	; () banked
 11870  003F88  5912               	subwfb	??_printf& (0+255),w,b
 11871  003F8A  B0D8               	btfsc	status,0,c
 11872  003F8C  D003               	goto	l4541
 11873                           
 11874                           ; BSR set to: 1
 11875                           ;doprnt.c: 1340: c = prec;
 11876  003F8E  C132  F134         	movff	printf@prec,printf@c
 11877  003F92  D018               	goto	l4545
 11878  003F94                     l4541:
 11879                           
 11880                           ; BSR set to: 1
 11881                           ;doprnt.c: 1341: else if(prec < c)
 11882  003F94  0101               	movlb	1	; () banked
 11883  003F96  5133               	movf	(printf@prec+1)& (0+255),w,b
 11884  003F98  0A80               	xorlw	128
 11885  003F9A  0101               	movlb	1	; () banked
 11886  003F9C  6F12               	movwf	??_printf& (0+255),b
 11887  003F9E  0101               	movlb	1	; () banked
 11888  003FA0  5134               	movf	printf@c& (0+255),w,b
 11889  003FA2  0101               	movlb	1	; () banked
 11890  003FA4  5D32               	subwf	printf@prec& (0+255),w,b
 11891  003FA6  0E80               	movlw	128
 11892  003FA8  0101               	movlb	1	; () banked
 11893  003FAA  BF34               	btfsc	printf@c& (0+255),7,b
 11894  003FAC  0E7F               	movlw	127
 11895  003FAE  0101               	movlb	1	; () banked
 11896  003FB0  5912               	subwfb	??_printf& (0+255),w,b
 11897  003FB2  B0D8               	btfsc	status,0,c
 11898  003FB4  D007               	goto	l4545
 11899                           
 11900                           ; BSR set to: 1
 11901                           ;doprnt.c: 1342: prec = c;
 11902  003FB6  0101               	movlb	1	; () banked
 11903  003FB8  5134               	movf	printf@c& (0+255),w,b
 11904  003FBA  0101               	movlb	1	; () banked
 11905  003FBC  6F32               	movwf	printf@prec& (0+255),b
 11906  003FBE  6B33               	clrf	(printf@prec+1)& (0+255),b
 11907  003FC0  BF32               	btfsc	printf@prec& (0+255),7,b
 11908  003FC2  0733               	decf	(printf@prec+1)& (0+255),f,b
 11909  003FC4                     l4545:
 11910                           
 11911                           ; BSR set to: 1
 11912                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11913  003FC4  0101               	movlb	1	; () banked
 11914  003FC6  512C               	movf	printf@width& (0+255),w,b
 11915  003FC8  0101               	movlb	1	; () banked
 11916  003FCA  112D               	iorwf	(printf@width+1)& (0+255),w,b
 11917  003FCC  B4D8               	btfsc	status,2,c
 11918  003FCE  D014               	goto	l4551
 11919                           
 11920                           ; BSR set to: 1
 11921  003FD0  0E03               	movlw	3
 11922  003FD2  0101               	movlb	1	; () banked
 11923  003FD4  1520               	andwf	printf@flag& (0+255),w,b
 11924  003FD6  0101               	movlb	1	; () banked
 11925  003FD8  6F12               	movwf	??_printf& (0+255),b
 11926  003FDA  0E00               	movlw	0
 11927  003FDC  0101               	movlb	1	; () banked
 11928  003FDE  1521               	andwf	(printf@flag+1)& (0+255),w,b
 11929  003FE0  0101               	movlb	1	; () banked
 11930  003FE2  6F13               	movwf	(??_printf+1)& (0+255),b
 11931  003FE4  0101               	movlb	1	; () banked
 11932  003FE6  5112               	movf	??_printf& (0+255),w,b
 11933  003FE8  0101               	movlb	1	; () banked
 11934  003FEA  1113               	iorwf	(??_printf+1)& (0+255),w,b
 11935  003FEC  B4D8               	btfsc	status,2,c
 11936  003FEE  D004               	goto	l4551
 11937                           
 11938                           ; BSR set to: 1
 11939                           ;doprnt.c: 1346: width--;
 11940  003FF0  0101               	movlb	1	; () banked
 11941  003FF2  072C               	decf	printf@width& (0+255),f,b
 11942  003FF4  A0D8               	btfss	status,0,c
 11943  003FF6  072D               	decf	(printf@width+1)& (0+255),f,b
 11944  003FF8                     l4551:
 11945                           
 11946                           ; BSR set to: 1
 11947                           ;doprnt.c: 1348: if(flag & 0x4000) {
 11948  003FF8  0101               	movlb	1	; () banked
 11949  003FFA  AD21               	btfss	(printf@flag+1)& (0+255),6,b
 11950  003FFC  D01E               	goto	l4559
 11951                           
 11952                           ; BSR set to: 1
 11953                           ;doprnt.c: 1349: if(width > prec)
 11954  003FFE  0101               	movlb	1	; () banked
 11955  004000  512C               	movf	printf@width& (0+255),w,b
 11956  004002  0101               	movlb	1	; () banked
 11957  004004  5D32               	subwf	printf@prec& (0+255),w,b
 11958  004006  0101               	movlb	1	; () banked
 11959  004008  5133               	movf	(printf@prec+1)& (0+255),w,b
 11960  00400A  0A80               	xorlw	128
 11961  00400C  0101               	movlb	1	; () banked
 11962  00400E  6F12               	movwf	??_printf& (0+255),b
 11963  004010  0101               	movlb	1	; () banked
 11964  004012  512D               	movf	(printf@width+1)& (0+255),w,b
 11965  004014  0A80               	xorlw	128
 11966  004016  0101               	movlb	1	; () banked
 11967  004018  5912               	subwfb	??_printf& (0+255),w,b
 11968  00401A  B0D8               	btfsc	status,0,c
 11969  00401C  D009               	goto	l4557
 11970                           
 11971                           ; BSR set to: 1
 11972                           ;doprnt.c: 1350: width -= prec;
 11973  00401E  0101               	movlb	1	; () banked
 11974  004020  5132               	movf	printf@prec& (0+255),w,b
 11975  004022  0101               	movlb	1	; () banked
 11976  004024  5F2C               	subwf	printf@width& (0+255),f,b
 11977  004026  0101               	movlb	1	; () banked
 11978  004028  5133               	movf	(printf@prec+1)& (0+255),w,b
 11979  00402A  0101               	movlb	1	; () banked
 11980  00402C  5B2D               	subwfb	(printf@width+1)& (0+255),f,b
 11981  00402E  D005               	goto	l4559
 11982  004030                     l4557:
 11983                           
 11984                           ; BSR set to: 1
 11985                           ;doprnt.c: 1351: else
 11986                           ;doprnt.c: 1352: width = 0;
 11987  004030  0E00               	movlw	0
 11988  004032  0101               	movlb	1	; () banked
 11989  004034  6F2D               	movwf	(printf@width+1)& (0+255),b
 11990  004036  0E00               	movlw	0
 11991  004038  6F2C               	movwf	printf@width& (0+255),b
 11992  00403A                     l4559:
 11993                           
 11994                           ; BSR set to: 1
 11995                           ;doprnt.c: 1353: }
 11996                           ;doprnt.c: 1381: if(width > c)
 11997  00403A  0E80               	movlw	128
 11998  00403C  0101               	movlb	1	; () banked
 11999  00403E  BF34               	btfsc	printf@c& (0+255),7,b
 12000  004040  0E7F               	movlw	127
 12001  004042  0101               	movlb	1	; () banked
 12002  004044  6F12               	movwf	??_printf& (0+255),b
 12003  004046  0101               	movlb	1	; () banked
 12004  004048  512C               	movf	printf@width& (0+255),w,b
 12005  00404A  0101               	movlb	1	; () banked
 12006  00404C  5D34               	subwf	printf@c& (0+255),w,b
 12007  00404E  0101               	movlb	1	; () banked
 12008  004050  512D               	movf	(printf@width+1)& (0+255),w,b
 12009  004052  0A80               	xorlw	128
 12010  004054  0101               	movlb	1	; () banked
 12011  004056  5912               	subwfb	??_printf& (0+255),w,b
 12012  004058  B0D8               	btfsc	status,0,c
 12013  00405A  D00B               	goto	l4563
 12014                           
 12015                           ; BSR set to: 1
 12016                           ;doprnt.c: 1382: width -= c;
 12017  00405C  0101               	movlb	1	; () banked
 12018  00405E  5134               	movf	printf@c& (0+255),w,b
 12019  004060  0101               	movlb	1	; () banked
 12020  004062  5F2C               	subwf	printf@width& (0+255),f,b
 12021  004064  0E00               	movlw	0
 12022  004066  0101               	movlb	1	; () banked
 12023  004068  BF34               	btfsc	printf@c& (0+255),7,b
 12024  00406A  0EFF               	movlw	255
 12025  00406C  0101               	movlb	1	; () banked
 12026  00406E  5B2D               	subwfb	(printf@width+1)& (0+255),f,b
 12027  004070  D005               	goto	l4565
 12028  004072                     l4563:
 12029                           
 12030                           ; BSR set to: 1
 12031                           ;doprnt.c: 1383: else
 12032                           ;doprnt.c: 1384: width = 0;
 12033  004072  0E00               	movlw	0
 12034  004074  0101               	movlb	1	; () banked
 12035  004076  6F2D               	movwf	(printf@width+1)& (0+255),b
 12036  004078  0E00               	movlw	0
 12037  00407A  6F2C               	movwf	printf@width& (0+255),b
 12038  00407C                     l4565:
 12039                           
 12040                           ; BSR set to: 1
 12041                           ;doprnt.c: 1422: {
 12042                           ;doprnt.c: 1424: if(width
 12043                           ;doprnt.c: 1428: )
 12044  00407C  0101               	movlb	1	; () banked
 12045  00407E  512C               	movf	printf@width& (0+255),w,b
 12046  004080  0101               	movlb	1	; () banked
 12047  004082  112D               	iorwf	(printf@width+1)& (0+255),w,b
 12048  004084  B4D8               	btfsc	status,2,c
 12049  004086  D00D               	goto	l4571
 12050  004088                     l4567:
 12051                           
 12052                           ; BSR set to: 1
 12053                           ;doprnt.c: 1430: (putch(' ') );
 12054  004088  0E20               	movlw	32
 12055  00408A  EC43  F001         	call	_putch
 12056                           
 12057                           ;doprnt.c: 1431: while(--width);
 12058  00408E  0101               	movlb	1	; () banked
 12059  004090  072C               	decf	printf@width& (0+255),f,b
 12060  004092  A0D8               	btfss	status,0,c
 12061  004094  072D               	decf	(printf@width+1)& (0+255),f,b
 12062  004096  0101               	movlb	1	; () banked
 12063  004098  512C               	movf	printf@width& (0+255),w,b
 12064  00409A  0101               	movlb	1	; () banked
 12065  00409C  112D               	iorwf	(printf@width+1)& (0+255),w,b
 12066  00409E  A4D8               	btfss	status,2,c
 12067  0040A0  D7F3               	goto	l4567
 12068  0040A2                     l4571:
 12069                           
 12070                           ; BSR set to: 1
 12071                           ;doprnt.c: 1438: if(flag & 0x03)
 12072  0040A2  0E03               	movlw	3
 12073  0040A4  0101               	movlb	1	; () banked
 12074  0040A6  1520               	andwf	printf@flag& (0+255),w,b
 12075  0040A8  0101               	movlb	1	; () banked
 12076  0040AA  6F12               	movwf	??_printf& (0+255),b
 12077  0040AC  0E00               	movlw	0
 12078  0040AE  0101               	movlb	1	; () banked
 12079  0040B0  1521               	andwf	(printf@flag+1)& (0+255),w,b
 12080  0040B2  0101               	movlb	1	; () banked
 12081  0040B4  6F13               	movwf	(??_printf+1)& (0+255),b
 12082  0040B6  0101               	movlb	1	; () banked
 12083  0040B8  5112               	movf	??_printf& (0+255),w,b
 12084  0040BA  0101               	movlb	1	; () banked
 12085  0040BC  1113               	iorwf	(??_printf+1)& (0+255),w,b
 12086  0040BE  B4D8               	btfsc	status,2,c
 12087  0040C0  D047               	goto	l4579
 12088                           
 12089                           ; BSR set to: 1
 12090                           ;doprnt.c: 1439: (putch('-') );
 12091  0040C2  0E2D               	movlw	45
 12092  0040C4  EC43  F001         	call	_putch
 12093                           
 12094                           ;doprnt.c: 1469: }
 12095                           ;doprnt.c: 1474: while(prec--) {
 12096  0040C8  D043               	goto	l4579
 12097  0040CA                     l4575:
 12098                           
 12099                           ;doprnt.c: 1478: {
 12100                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12101  0040CA  C132  F112         	movff	printf@prec,??_printf
 12102  0040CE  C133  F113         	movff	printf@prec+1,??_printf+1
 12103  0040D2  0101               	movlb	1	; () banked
 12104  0040D4  90D8               	bcf	status,0,c
 12105  0040D6  3712               	rlcf	??_printf& (0+255),f,b
 12106  0040D8  3713               	rlcf	(??_printf+1)& (0+255),f,b
 12107  0040DA  0101               	movlb	1	; () banked
 12108  0040DC  90D8               	bcf	status,0,c
 12109  0040DE  3712               	rlcf	??_printf& (0+255),f,b
 12110  0040E0  3713               	rlcf	(??_printf+1)& (0+255),f,b
 12111  0040E2  0EAF               	movlw	low _dpowers
 12112  0040E4  0101               	movlb	1	; () banked
 12113  0040E6  2512               	addwf	??_printf& (0+255),w,b
 12114  0040E8  6EF6               	movwf	tblptrl,c
 12115  0040EA  0E59               	movlw	high _dpowers
 12116  0040EC  2113               	addwfc	(??_printf+1)& (0+255),w,b
 12117  0040EE  6EF7               	movwf	tblptrh,c
 12118  0040F0                     	if	0	;There are less than 3 active tblptr bytes
 12119  0040F0                     	endif
 12120  0040F0  0009               	tblrd		*+
 12121  0040F2  CFF5 F005          	movff	tablat,___lldiv@divisor
 12122  0040F6  0009               	tblrd		*+
 12123  0040F8  CFF5 F006          	movff	tablat,___lldiv@divisor+1
 12124  0040FC  0009               	tblrd		*+
 12125  0040FE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
 12126  004102  000A               	tblrd		*-
 12127  004104  CFF5 F008          	movff	tablat,___lldiv@divisor+3
 12128  004108  C126  F001         	movff	printf@val,___lldiv@dividend
 12129  00410C  C127  F002         	movff	printf@val+1,___lldiv@dividend+1
 12130  004110  C128  F003         	movff	printf@val+2,___lldiv@dividend+2
 12131  004114  C129  F004         	movff	printf@val+3,___lldiv@dividend+3
 12132  004118  EC7E  F002         	call	___lldiv	;wreg free
 12133  00411C  C001  F00E         	movff	?___lldiv,___llmod@dividend
 12134  004120  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
 12135  004124  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
 12136  004128  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
 12137  00412C  0E0A               	movlw	10
 12138  00412E  6E12               	movwf	___llmod@divisor,c
 12139  004130  0E00               	movlw	0
 12140  004132  6E13               	movwf	___llmod@divisor+1,c
 12141  004134  0E00               	movlw	0
 12142  004136  6E14               	movwf	___llmod@divisor+2,c
 12143  004138  0E00               	movlw	0
 12144  00413A  6E15               	movwf	___llmod@divisor+3,c
 12145  00413C  EC13  F002         	call	___llmod	;wreg free
 12146  004140  500E               	movf	?___llmod,w,c
 12147  004142  0F30               	addlw	48
 12148  004144  0101               	movlb	1	; () banked
 12149  004146  6F34               	movwf	printf@c& (0+255),b
 12150                           
 12151                           ; BSR set to: 1
 12152                           ;doprnt.c: 1523: }
 12153                           ;doprnt.c: 1524: (putch(c) );
 12154  004148  0101               	movlb	1	; () banked
 12155  00414A  5134               	movf	printf@c& (0+255),w,b
 12156  00414C  EC43  F001         	call	_putch
 12157  004150                     l4579:
 12158  004150  0101               	movlb	1	; () banked
 12159  004152  0732               	decf	printf@prec& (0+255),f,b
 12160  004154  A0D8               	btfss	status,0,c
 12161  004156  0733               	decf	(printf@prec+1)& (0+255),f,b
 12162  004158  0101               	movlb	1	; () banked
 12163  00415A  2932               	incf	printf@prec& (0+255),w,b
 12164  00415C  E1B6               	bnz	l4575
 12165  00415E  0101               	movlb	1	; () banked
 12166  004160  2933               	incf	(printf@prec+1)& (0+255),w,b
 12167  004162  A4D8               	btfss	status,2,c
 12168  004164  D7B2               	goto	l4575
 12169  004166                     l4581:
 12170  004166  C108  FFF6         	movff	printf@f,tblptrl
 12171  00416A  C109  FFF7         	movff	printf@f+1,tblptrh
 12172  00416E  0101               	movlb	1	; () banked
 12173  004170  4B08               	infsnz	printf@f& (0+255),f,b
 12174  004172  2B09               	incf	(printf@f+1)& (0+255),f,b
 12175  004174                     	if	0	;tblptru may be non-zero
 12176  004174                     	endif
 12177  004174                     	if	0	;tblptru may be non-zero
 12178  004174                     	endif
 12179  004174  0008               	tblrd		*
 12180  004176  CFF5 F134          	movff	tablat,printf@c
 12181  00417A  0101               	movlb	1	; () banked
 12182  00417C  5134               	movf	printf@c& (0+255),w,b
 12183  00417E  B4D8               	btfsc	status,2,c
 12184  004180  0012               	return	
 12185  004182  EFD8  F01A         	goto	l4293
 12186  004186                     __end_of_printf:
 12187                           	opt stack 0
 12188                           tblptru	equ	0xFF8
 12189                           tblptrh	equ	0xFF7
 12190                           tblptrl	equ	0xFF6
 12191                           tablat	equ	0xFF5
 12192                           prodh	equ	0xFF4
 12193                           prodl	equ	0xFF3
 12194                           postinc0	equ	0xFEE
 12195                           wreg	equ	0xFE8
 12196                           indf2	equ	0xFDF
 12197                           postinc2	equ	0xFDE
 12198                           postdec2	equ	0xFDD
 12199                           fsr2h	equ	0xFDA
 12200                           fsr2l	equ	0xFD9
 12201                           status	equ	0xFD8
 12202                           
 12203 ;; *************** function _scale *****************
 12204 ;; Defined at:
 12205 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;  scl             1    wreg     char 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;  scl             1   87[COMRAM] char 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  4   79[COMRAM] char 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12219 ;;      Params:         4       0       0       0       0       0       0       0       0
 12220 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12221 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12222 ;;      Totals:         9       0       0       0       0       0       0       0       0
 12223 ;;Total ram usage:        9 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    1
 12226 ;; This function calls:
 12227 ;;		___awdiv
 12228 ;;		___awmod
 12229 ;;		___flmul
 12230 ;; This function is called by:
 12231 ;;		_printf
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           	psect	text7
 12236  002CE0                     __ptext7:
 12237                           	opt stack 0
 12238  002CE0                     _scale:
 12239                           	opt stack 28
 12240                           
 12241                           ; BSR set to: 1
 12242                           ;incstack = 0
 12243                           ;scale@scl stored from wreg
 12244  002CE0  6E58               	movwf	scale@scl,c
 12245                           
 12246                           ;doprnt.c: 428: if(scl < 0) {
 12247  002CE2  AE58               	btfss	scale@scl,7,c
 12248  002CE4  D105               	goto	l4057
 12249                           
 12250                           ;doprnt.c: 429: scl = -scl;
 12251  002CE6  6C58               	negf	scale@scl,c
 12252                           
 12253                           ;doprnt.c: 430: if(scl>=110)
 12254  002CE8  5058               	movf	scale@scl,w,c
 12255  002CEA  0A80               	xorlw	128
 12256  002CEC  0F12               	addlw	-238
 12257  002CEE  A0D8               	btfss	status,0,c
 12258  002CF0  D098               	goto	l4047
 12259                           
 12260                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12261  002CF2  0E00               	movlw	0
 12262  002CF4  6E0A               	movwf	___awdiv@divisor+1,c
 12263  002CF6  0E0A               	movlw	10
 12264  002CF8  6E09               	movwf	___awdiv@divisor,c
 12265  002CFA  0E00               	movlw	0
 12266  002CFC  6E04               	movwf	___awmod@divisor+1,c
 12267  002CFE  0E64               	movlw	100
 12268  002D00  6E03               	movwf	___awmod@divisor,c
 12269  002D02  5058               	movf	scale@scl,w,c
 12270  002D04  6E01               	movwf	___awmod@dividend,c
 12271  002D06  6A02               	clrf	___awmod@dividend+1,c
 12272  002D08  BE01               	btfsc	___awmod@dividend,7,c
 12273  002D0A  0602               	decf	___awmod@dividend+1,f,c
 12274  002D0C  EC46  F002         	call	___awmod	;wreg free
 12275  002D10  C001  F007         	movff	?___awmod,___awdiv@dividend
 12276  002D14  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
 12277  002D18  ECBF  F002         	call	___awdiv	;wreg free
 12278  002D1C  90D8               	bcf	status,0,c
 12279  002D1E  3607               	rlcf	?___awdiv,f,c
 12280  002D20  3608               	rlcf	?___awdiv+1,f,c
 12281  002D22  90D8               	bcf	status,0,c
 12282  002D24  3607               	rlcf	?___awdiv,f,c
 12283  002D26  3608               	rlcf	?___awdiv+1,f,c
 12284  002D28  0E24               	movlw	36
 12285  002D2A  2607               	addwf	?___awdiv,f,c
 12286  002D2C  0E00               	movlw	0
 12287  002D2E  2208               	addwfc	?___awdiv+1,f,c
 12288  002D30  0E47               	movlw	low __npowers_
 12289  002D32  2407               	addwf	?___awdiv,w,c
 12290  002D34  6EF6               	movwf	tblptrl,c
 12291  002D36  0E59               	movlw	high __npowers_
 12292  002D38  2008               	addwfc	?___awdiv+1,w,c
 12293  002D3A  6EF7               	movwf	tblptrh,c
 12294  002D3C                     	if	0	;There are less than 3 active tblptr bytes
 12295  002D3C                     	endif
 12296  002D3C  0009               	tblrd		*+
 12297  002D3E  CFF5 F03B          	movff	tablat,___flmul@a
 12298  002D42  0009               	tblrd		*+
 12299  002D44  CFF5 F03C          	movff	tablat,___flmul@a+1
 12300  002D48  0009               	tblrd		*+
 12301  002D4A  CFF5 F03D          	movff	tablat,___flmul@a+2
 12302  002D4E  000A               	tblrd		*-
 12303  002D50  CFF5 F03E          	movff	tablat,___flmul@a+3
 12304  002D54  0E00               	movlw	0
 12305  002D56  6E0A               	movwf	___awdiv@divisor+1,c
 12306  002D58  0E64               	movlw	100
 12307  002D5A  6E09               	movwf	___awdiv@divisor,c
 12308  002D5C  5058               	movf	scale@scl,w,c
 12309  002D5E  6E07               	movwf	___awdiv@dividend,c
 12310  002D60  6A08               	clrf	___awdiv@dividend+1,c
 12311  002D62  BE07               	btfsc	___awdiv@dividend,7,c
 12312  002D64  0608               	decf	___awdiv@dividend+1,f,c
 12313  002D66  ECBF  F002         	call	___awdiv	;wreg free
 12314  002D6A  90D8               	bcf	status,0,c
 12315  002D6C  3607               	rlcf	?___awdiv,f,c
 12316  002D6E  3608               	rlcf	?___awdiv+1,f,c
 12317  002D70  90D8               	bcf	status,0,c
 12318  002D72  3607               	rlcf	?___awdiv,f,c
 12319  002D74  3608               	rlcf	?___awdiv+1,f,c
 12320  002D76  0E48               	movlw	72
 12321  002D78  2607               	addwf	?___awdiv,f,c
 12322  002D7A  0E00               	movlw	0
 12323  002D7C  2208               	addwfc	?___awdiv+1,f,c
 12324  002D7E  0E47               	movlw	low __npowers_
 12325  002D80  2407               	addwf	?___awdiv,w,c
 12326  002D82  6EF6               	movwf	tblptrl,c
 12327  002D84  0E59               	movlw	high __npowers_
 12328  002D86  2008               	addwfc	?___awdiv+1,w,c
 12329  002D88  6EF7               	movwf	tblptrh,c
 12330  002D8A                     	if	0	;There are less than 3 active tblptr bytes
 12331  002D8A                     	endif
 12332  002D8A  0009               	tblrd		*+
 12333  002D8C  CFF5 F037          	movff	tablat,___flmul@b
 12334  002D90  0009               	tblrd		*+
 12335  002D92  CFF5 F038          	movff	tablat,___flmul@b+1
 12336  002D96  0009               	tblrd		*+
 12337  002D98  CFF5 F039          	movff	tablat,___flmul@b+2
 12338  002D9C  000A               	tblrd		*-
 12339  002D9E  CFF5 F03A          	movff	tablat,___flmul@b+3
 12340  002DA2  ECC8  F014         	call	___flmul	;wreg free
 12341  002DA6  C037  F054         	movff	?___flmul,_scale$1393
 12342  002DAA  C038  F055         	movff	?___flmul+1,_scale$1393+1
 12343  002DAE  C039  F056         	movff	?___flmul+2,_scale$1393+2
 12344  002DB2  C03A  F057         	movff	?___flmul+3,_scale$1393+3
 12345                           
 12346                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12347  002DB6  C054  F037         	movff	_scale$1393,___flmul@b
 12348  002DBA  C055  F038         	movff	_scale$1393+1,___flmul@b+1
 12349  002DBE  C056  F039         	movff	_scale$1393+2,___flmul@b+2
 12350  002DC2  C057  F03A         	movff	_scale$1393+3,___flmul@b+3
 12351  002DC6  0E00               	movlw	0
 12352  002DC8  6E04               	movwf	___awmod@divisor+1,c
 12353  002DCA  0E0A               	movlw	10
 12354  002DCC  6E03               	movwf	___awmod@divisor,c
 12355  002DCE  5058               	movf	scale@scl,w,c
 12356  002DD0  6E01               	movwf	___awmod@dividend,c
 12357  002DD2  6A02               	clrf	___awmod@dividend+1,c
 12358  002DD4  BE01               	btfsc	___awmod@dividend,7,c
 12359  002DD6  0602               	decf	___awmod@dividend+1,f,c
 12360  002DD8  EC46  F002         	call	___awmod	;wreg free
 12361  002DDC  90D8               	bcf	status,0,c
 12362  002DDE  3601               	rlcf	?___awmod,f,c
 12363  002DE0  3602               	rlcf	?___awmod+1,f,c
 12364  002DE2  90D8               	bcf	status,0,c
 12365  002DE4  3601               	rlcf	?___awmod,f,c
 12366  002DE6  3602               	rlcf	?___awmod+1,f,c
 12367  002DE8  0E47               	movlw	low __npowers_
 12368  002DEA  2401               	addwf	?___awmod,w,c
 12369  002DEC  6EF6               	movwf	tblptrl,c
 12370  002DEE  0E59               	movlw	high __npowers_
 12371  002DF0  2002               	addwfc	?___awmod+1,w,c
 12372  002DF2  6EF7               	movwf	tblptrh,c
 12373  002DF4                     	if	0	;There are less than 3 active tblptr bytes
 12374  002DF4                     	endif
 12375  002DF4  0009               	tblrd		*+
 12376  002DF6  CFF5 F03B          	movff	tablat,___flmul@a
 12377  002DFA  0009               	tblrd		*+
 12378  002DFC  CFF5 F03C          	movff	tablat,___flmul@a+1
 12379  002E00  0009               	tblrd		*+
 12380  002E02  CFF5 F03D          	movff	tablat,___flmul@a+2
 12381  002E06  000A               	tblrd		*-
 12382  002E08  CFF5 F03E          	movff	tablat,___flmul@a+3
 12383  002E0C  ECC8  F014         	call	___flmul	;wreg free
 12384  002E10  C037  F050         	movff	?___flmul,?_scale
 12385  002E14  C038  F051         	movff	?___flmul+1,?_scale+1
 12386  002E18  C039  F052         	movff	?___flmul+2,?_scale+2
 12387  002E1C  C03A  F053         	movff	?___flmul+3,?_scale+3
 12388  002E20  0012               	return	
 12389  002E22                     l4047:
 12390                           
 12391                           ;doprnt.c: 432: else if(scl > 10)
 12392  002E22  5058               	movf	scale@scl,w,c
 12393  002E24  0A80               	xorlw	128
 12394  002E26  0F75               	addlw	-139
 12395  002E28  A0D8               	btfss	status,0,c
 12396  002E2A  D04D               	goto	l4053
 12397                           
 12398                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 12399  002E2C  0E00               	movlw	0
 12400  002E2E  6E0A               	movwf	___awdiv@divisor+1,c
 12401  002E30  0E0A               	movlw	10
 12402  002E32  6E09               	movwf	___awdiv@divisor,c
 12403  002E34  5058               	movf	scale@scl,w,c
 12404  002E36  6E07               	movwf	___awdiv@dividend,c
 12405  002E38  6A08               	clrf	___awdiv@dividend+1,c
 12406  002E3A  BE07               	btfsc	___awdiv@dividend,7,c
 12407  002E3C  0608               	decf	___awdiv@dividend+1,f,c
 12408  002E3E  ECBF  F002         	call	___awdiv	;wreg free
 12409  002E42  90D8               	bcf	status,0,c
 12410  002E44  3607               	rlcf	?___awdiv,f,c
 12411  002E46  3608               	rlcf	?___awdiv+1,f,c
 12412  002E48  90D8               	bcf	status,0,c
 12413  002E4A  3607               	rlcf	?___awdiv,f,c
 12414  002E4C  3608               	rlcf	?___awdiv+1,f,c
 12415  002E4E  0E24               	movlw	36
 12416  002E50  2607               	addwf	?___awdiv,f,c
 12417  002E52  0E00               	movlw	0
 12418  002E54  2208               	addwfc	?___awdiv+1,f,c
 12419  002E56  0E47               	movlw	low __npowers_
 12420  002E58  2407               	addwf	?___awdiv,w,c
 12421  002E5A  6EF6               	movwf	tblptrl,c
 12422  002E5C  0E59               	movlw	high __npowers_
 12423  002E5E  2008               	addwfc	?___awdiv+1,w,c
 12424  002E60  6EF7               	movwf	tblptrh,c
 12425  002E62                     	if	0	;There are less than 3 active tblptr bytes
 12426  002E62                     	endif
 12427  002E62  0009               	tblrd		*+
 12428  002E64  CFF5 F037          	movff	tablat,___flmul@b
 12429  002E68  0009               	tblrd		*+
 12430  002E6A  CFF5 F038          	movff	tablat,___flmul@b+1
 12431  002E6E  0009               	tblrd		*+
 12432  002E70  CFF5 F039          	movff	tablat,___flmul@b+2
 12433  002E74  000A               	tblrd		*-
 12434  002E76  CFF5 F03A          	movff	tablat,___flmul@b+3
 12435  002E7A  0E00               	movlw	0
 12436  002E7C  6E04               	movwf	___awmod@divisor+1,c
 12437  002E7E  0E0A               	movlw	10
 12438  002E80  6E03               	movwf	___awmod@divisor,c
 12439  002E82  5058               	movf	scale@scl,w,c
 12440  002E84  6E01               	movwf	___awmod@dividend,c
 12441  002E86  6A02               	clrf	___awmod@dividend+1,c
 12442  002E88  BE01               	btfsc	___awmod@dividend,7,c
 12443  002E8A  0602               	decf	___awmod@dividend+1,f,c
 12444  002E8C  EC46  F002         	call	___awmod	;wreg free
 12445  002E90  90D8               	bcf	status,0,c
 12446  002E92  3601               	rlcf	?___awmod,f,c
 12447  002E94  3602               	rlcf	?___awmod+1,f,c
 12448  002E96  90D8               	bcf	status,0,c
 12449  002E98  3601               	rlcf	?___awmod,f,c
 12450  002E9A  3602               	rlcf	?___awmod+1,f,c
 12451  002E9C  0E47               	movlw	low __npowers_
 12452  002E9E  2401               	addwf	?___awmod,w,c
 12453  002EA0  6EF6               	movwf	tblptrl,c
 12454  002EA2  0E59               	movlw	high __npowers_
 12455  002EA4  2002               	addwfc	?___awmod+1,w,c
 12456  002EA6  6EF7               	movwf	tblptrh,c
 12457  002EA8                     	if	0	;There are less than 3 active tblptr bytes
 12458  002EA8                     	endif
 12459  002EA8  0009               	tblrd		*+
 12460  002EAA  CFF5 F03B          	movff	tablat,___flmul@a
 12461  002EAE  0009               	tblrd		*+
 12462  002EB0  CFF5 F03C          	movff	tablat,___flmul@a+1
 12463  002EB4  0009               	tblrd		*+
 12464  002EB6  CFF5 F03D          	movff	tablat,___flmul@a+2
 12465  002EBA  000A               	tblrd		*-
 12466  002EBC  CFF5 F03E          	movff	tablat,___flmul@a+3
 12467  002EC0  ECC8  F014         	call	___flmul	;wreg free
 12468  002EC4  D7A5               	goto	L3
 12469  002EC6                     l4053:
 12470                           
 12471                           ;doprnt.c: 434: return _npowers_[scl];
 12472  002EC6  5058               	movf	scale@scl,w,c
 12473  002EC8  0D04               	mullw	4
 12474  002ECA  0E47               	movlw	low __npowers_
 12475  002ECC  24F3               	addwf	prodl,w,c
 12476  002ECE  6EF6               	movwf	tblptrl,c
 12477  002ED0  0E59               	movlw	high __npowers_
 12478  002ED2  20F4               	addwfc	prodh,w,c
 12479  002ED4  6EF7               	movwf	tblptrh,c
 12480  002ED6                     	if	0	;There are less than 3 active tblptr bytes
 12481  002ED6                     	endif
 12482  002ED6  0009               	tblrd		*+
 12483  002ED8  CFF5 F050          	movff	tablat,?_scale
 12484  002EDC  0009               	tblrd		*+
 12485  002EDE  CFF5 F051          	movff	tablat,?_scale+1
 12486  002EE2  0009               	tblrd		*+
 12487  002EE4  CFF5 F052          	movff	tablat,?_scale+2
 12488  002EE8  000A               	tblrd		*-
 12489  002EEA  CFF5 F053          	movff	tablat,?_scale+3
 12490  002EEE  0012               	return	
 12491  002EF0                     l4057:
 12492                           
 12493                           ;doprnt.c: 435: }
 12494                           ;doprnt.c: 436: if(scl>=110)
 12495  002EF0  5058               	movf	scale@scl,w,c
 12496  002EF2  0A80               	xorlw	128
 12497  002EF4  0F12               	addlw	-238
 12498  002EF6  A0D8               	btfss	status,0,c
 12499  002EF8  D098               	goto	l4065
 12500                           
 12501                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12502  002EFA  0E00               	movlw	0
 12503  002EFC  6E0A               	movwf	___awdiv@divisor+1,c
 12504  002EFE  0E0A               	movlw	10
 12505  002F00  6E09               	movwf	___awdiv@divisor,c
 12506  002F02  0E00               	movlw	0
 12507  002F04  6E04               	movwf	___awmod@divisor+1,c
 12508  002F06  0E64               	movlw	100
 12509  002F08  6E03               	movwf	___awmod@divisor,c
 12510  002F0A  5058               	movf	scale@scl,w,c
 12511  002F0C  6E01               	movwf	___awmod@dividend,c
 12512  002F0E  6A02               	clrf	___awmod@dividend+1,c
 12513  002F10  BE01               	btfsc	___awmod@dividend,7,c
 12514  002F12  0602               	decf	___awmod@dividend+1,f,c
 12515  002F14  EC46  F002         	call	___awmod	;wreg free
 12516  002F18  C001  F007         	movff	?___awmod,___awdiv@dividend
 12517  002F1C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
 12518  002F20  ECBF  F002         	call	___awdiv	;wreg free
 12519  002F24  90D8               	bcf	status,0,c
 12520  002F26  3607               	rlcf	?___awdiv,f,c
 12521  002F28  3608               	rlcf	?___awdiv+1,f,c
 12522  002F2A  90D8               	bcf	status,0,c
 12523  002F2C  3607               	rlcf	?___awdiv,f,c
 12524  002F2E  3608               	rlcf	?___awdiv+1,f,c
 12525  002F30  0E24               	movlw	36
 12526  002F32  2607               	addwf	?___awdiv,f,c
 12527  002F34  0E00               	movlw	0
 12528  002F36  2208               	addwfc	?___awdiv+1,f,c
 12529  002F38  0E7B               	movlw	low __powers_
 12530  002F3A  2407               	addwf	?___awdiv,w,c
 12531  002F3C  6EF6               	movwf	tblptrl,c
 12532  002F3E  0E59               	movlw	high __powers_
 12533  002F40  2008               	addwfc	?___awdiv+1,w,c
 12534  002F42  6EF7               	movwf	tblptrh,c
 12535  002F44                     	if	0	;There are less than 3 active tblptr bytes
 12536  002F44                     	endif
 12537  002F44  0009               	tblrd		*+
 12538  002F46  CFF5 F03B          	movff	tablat,___flmul@a
 12539  002F4A  0009               	tblrd		*+
 12540  002F4C  CFF5 F03C          	movff	tablat,___flmul@a+1
 12541  002F50  0009               	tblrd		*+
 12542  002F52  CFF5 F03D          	movff	tablat,___flmul@a+2
 12543  002F56  000A               	tblrd		*-
 12544  002F58  CFF5 F03E          	movff	tablat,___flmul@a+3
 12545  002F5C  0E00               	movlw	0
 12546  002F5E  6E0A               	movwf	___awdiv@divisor+1,c
 12547  002F60  0E64               	movlw	100
 12548  002F62  6E09               	movwf	___awdiv@divisor,c
 12549  002F64  5058               	movf	scale@scl,w,c
 12550  002F66  6E07               	movwf	___awdiv@dividend,c
 12551  002F68  6A08               	clrf	___awdiv@dividend+1,c
 12552  002F6A  BE07               	btfsc	___awdiv@dividend,7,c
 12553  002F6C  0608               	decf	___awdiv@dividend+1,f,c
 12554  002F6E  ECBF  F002         	call	___awdiv	;wreg free
 12555  002F72  90D8               	bcf	status,0,c
 12556  002F74  3607               	rlcf	?___awdiv,f,c
 12557  002F76  3608               	rlcf	?___awdiv+1,f,c
 12558  002F78  90D8               	bcf	status,0,c
 12559  002F7A  3607               	rlcf	?___awdiv,f,c
 12560  002F7C  3608               	rlcf	?___awdiv+1,f,c
 12561  002F7E  0E48               	movlw	72
 12562  002F80  2607               	addwf	?___awdiv,f,c
 12563  002F82  0E00               	movlw	0
 12564  002F84  2208               	addwfc	?___awdiv+1,f,c
 12565  002F86  0E7B               	movlw	low __powers_
 12566  002F88  2407               	addwf	?___awdiv,w,c
 12567  002F8A  6EF6               	movwf	tblptrl,c
 12568  002F8C  0E59               	movlw	high __powers_
 12569  002F8E  2008               	addwfc	?___awdiv+1,w,c
 12570  002F90  6EF7               	movwf	tblptrh,c
 12571  002F92                     	if	0	;There are less than 3 active tblptr bytes
 12572  002F92                     	endif
 12573  002F92  0009               	tblrd		*+
 12574  002F94  CFF5 F037          	movff	tablat,___flmul@b
 12575  002F98  0009               	tblrd		*+
 12576  002F9A  CFF5 F038          	movff	tablat,___flmul@b+1
 12577  002F9E  0009               	tblrd		*+
 12578  002FA0  CFF5 F039          	movff	tablat,___flmul@b+2
 12579  002FA4  000A               	tblrd		*-
 12580  002FA6  CFF5 F03A          	movff	tablat,___flmul@b+3
 12581  002FAA  ECC8  F014         	call	___flmul	;wreg free
 12582  002FAE  C037  F054         	movff	?___flmul,_scale$1393
 12583  002FB2  C038  F055         	movff	?___flmul+1,_scale$1393+1
 12584  002FB6  C039  F056         	movff	?___flmul+2,_scale$1393+2
 12585  002FBA  C03A  F057         	movff	?___flmul+3,_scale$1393+3
 12586                           
 12587                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12588  002FBE  C054  F037         	movff	_scale$1393,___flmul@b
 12589  002FC2  C055  F038         	movff	_scale$1393+1,___flmul@b+1
 12590  002FC6  C056  F039         	movff	_scale$1393+2,___flmul@b+2
 12591  002FCA  C057  F03A         	movff	_scale$1393+3,___flmul@b+3
 12592  002FCE  0E00               	movlw	0
 12593  002FD0  6E04               	movwf	___awmod@divisor+1,c
 12594  002FD2  0E0A               	movlw	10
 12595  002FD4  6E03               	movwf	___awmod@divisor,c
 12596  002FD6  5058               	movf	scale@scl,w,c
 12597  002FD8  6E01               	movwf	___awmod@dividend,c
 12598  002FDA  6A02               	clrf	___awmod@dividend+1,c
 12599  002FDC  BE01               	btfsc	___awmod@dividend,7,c
 12600  002FDE  0602               	decf	___awmod@dividend+1,f,c
 12601  002FE0  EC46  F002         	call	___awmod	;wreg free
 12602  002FE4  90D8               	bcf	status,0,c
 12603  002FE6  3601               	rlcf	?___awmod,f,c
 12604  002FE8  3602               	rlcf	?___awmod+1,f,c
 12605  002FEA  90D8               	bcf	status,0,c
 12606  002FEC  3601               	rlcf	?___awmod,f,c
 12607  002FEE  3602               	rlcf	?___awmod+1,f,c
 12608  002FF0  0E7B               	movlw	low __powers_
 12609  002FF2  2401               	addwf	?___awmod,w,c
 12610  002FF4  6EF6               	movwf	tblptrl,c
 12611  002FF6  0E59               	movlw	high __powers_
 12612  002FF8  2002               	addwfc	?___awmod+1,w,c
 12613  002FFA  6EF7               	movwf	tblptrh,c
 12614  002FFC                     	if	0	;There are less than 3 active tblptr bytes
 12615  002FFC                     	endif
 12616  002FFC  0009               	tblrd		*+
 12617  002FFE  CFF5 F03B          	movff	tablat,___flmul@a
 12618  003002  0009               	tblrd		*+
 12619  003004  CFF5 F03C          	movff	tablat,___flmul@a+1
 12620  003008  0009               	tblrd		*+
 12621  00300A  CFF5 F03D          	movff	tablat,___flmul@a+2
 12622  00300E  000A               	tblrd		*-
 12623  003010  CFF5 F03E          	movff	tablat,___flmul@a+3
 12624  003014  ECC8  F014         	call	___flmul	;wreg free
 12625  003018  C037  F050         	movff	?___flmul,?_scale
 12626  00301C  C038  F051         	movff	?___flmul+1,?_scale+1
 12627  003020  C039  F052         	movff	?___flmul+2,?_scale+2
 12628  003024  C03A  F053         	movff	?___flmul+3,?_scale+3
 12629  003028  0012               	return	
 12630  00302A                     l4065:
 12631                           
 12632                           ;doprnt.c: 438: else if(scl > 10)
 12633  00302A  5058               	movf	scale@scl,w,c
 12634  00302C  0A80               	xorlw	128
 12635  00302E  0F75               	addlw	-139
 12636  003030  A0D8               	btfss	status,0,c
 12637  003032  D04D               	goto	l4071
 12638                           
 12639                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 12640  003034  0E00               	movlw	0
 12641  003036  6E0A               	movwf	___awdiv@divisor+1,c
 12642  003038  0E0A               	movlw	10
 12643  00303A  6E09               	movwf	___awdiv@divisor,c
 12644  00303C  5058               	movf	scale@scl,w,c
 12645  00303E  6E07               	movwf	___awdiv@dividend,c
 12646  003040  6A08               	clrf	___awdiv@dividend+1,c
 12647  003042  BE07               	btfsc	___awdiv@dividend,7,c
 12648  003044  0608               	decf	___awdiv@dividend+1,f,c
 12649  003046  ECBF  F002         	call	___awdiv	;wreg free
 12650  00304A  90D8               	bcf	status,0,c
 12651  00304C  3607               	rlcf	?___awdiv,f,c
 12652  00304E  3608               	rlcf	?___awdiv+1,f,c
 12653  003050  90D8               	bcf	status,0,c
 12654  003052  3607               	rlcf	?___awdiv,f,c
 12655  003054  3608               	rlcf	?___awdiv+1,f,c
 12656  003056  0E24               	movlw	36
 12657  003058  2607               	addwf	?___awdiv,f,c
 12658  00305A  0E00               	movlw	0
 12659  00305C  2208               	addwfc	?___awdiv+1,f,c
 12660  00305E  0E7B               	movlw	low __powers_
 12661  003060  2407               	addwf	?___awdiv,w,c
 12662  003062  6EF6               	movwf	tblptrl,c
 12663  003064  0E59               	movlw	high __powers_
 12664  003066  2008               	addwfc	?___awdiv+1,w,c
 12665  003068  6EF7               	movwf	tblptrh,c
 12666  00306A                     	if	0	;There are less than 3 active tblptr bytes
 12667  00306A                     	endif
 12668  00306A  0009               	tblrd		*+
 12669  00306C  CFF5 F037          	movff	tablat,___flmul@b
 12670  003070  0009               	tblrd		*+
 12671  003072  CFF5 F038          	movff	tablat,___flmul@b+1
 12672  003076  0009               	tblrd		*+
 12673  003078  CFF5 F039          	movff	tablat,___flmul@b+2
 12674  00307C  000A               	tblrd		*-
 12675  00307E  CFF5 F03A          	movff	tablat,___flmul@b+3
 12676  003082  0E00               	movlw	0
 12677  003084  6E04               	movwf	___awmod@divisor+1,c
 12678  003086  0E0A               	movlw	10
 12679  003088  6E03               	movwf	___awmod@divisor,c
 12680  00308A  5058               	movf	scale@scl,w,c
 12681  00308C  6E01               	movwf	___awmod@dividend,c
 12682  00308E  6A02               	clrf	___awmod@dividend+1,c
 12683  003090  BE01               	btfsc	___awmod@dividend,7,c
 12684  003092  0602               	decf	___awmod@dividend+1,f,c
 12685  003094  EC46  F002         	call	___awmod	;wreg free
 12686  003098  90D8               	bcf	status,0,c
 12687  00309A  3601               	rlcf	?___awmod,f,c
 12688  00309C  3602               	rlcf	?___awmod+1,f,c
 12689  00309E  90D8               	bcf	status,0,c
 12690  0030A0  3601               	rlcf	?___awmod,f,c
 12691  0030A2  3602               	rlcf	?___awmod+1,f,c
 12692  0030A4  0E7B               	movlw	low __powers_
 12693  0030A6  2401               	addwf	?___awmod,w,c
 12694  0030A8  6EF6               	movwf	tblptrl,c
 12695  0030AA  0E59               	movlw	high __powers_
 12696  0030AC  2002               	addwfc	?___awmod+1,w,c
 12697  0030AE  6EF7               	movwf	tblptrh,c
 12698  0030B0                     	if	0	;There are less than 3 active tblptr bytes
 12699  0030B0                     	endif
 12700  0030B0  0009               	tblrd		*+
 12701  0030B2  CFF5 F03B          	movff	tablat,___flmul@a
 12702  0030B6  0009               	tblrd		*+
 12703  0030B8  CFF5 F03C          	movff	tablat,___flmul@a+1
 12704  0030BC  0009               	tblrd		*+
 12705  0030BE  CFF5 F03D          	movff	tablat,___flmul@a+2
 12706  0030C2  000A               	tblrd		*-
 12707  0030C4  CFF5 F03E          	movff	tablat,___flmul@a+3
 12708  0030C8  ECC8  F014         	call	___flmul	;wreg free
 12709  0030CC  D7A5               	goto	L4
 12710  0030CE                     l4071:
 12711                           
 12712                           ;doprnt.c: 440: return _powers_[scl];
 12713  0030CE  5058               	movf	scale@scl,w,c
 12714  0030D0  0D04               	mullw	4
 12715  0030D2  0E7B               	movlw	low __powers_
 12716  0030D4  24F3               	addwf	prodl,w,c
 12717  0030D6  6EF6               	movwf	tblptrl,c
 12718  0030D8  0E59               	movlw	high __powers_
 12719  0030DA  20F4               	addwfc	prodh,w,c
 12720  0030DC  6EF7               	movwf	tblptrh,c
 12721  0030DE                     	if	0	;There are less than 3 active tblptr bytes
 12722  0030DE                     	endif
 12723  0030DE  0009               	tblrd		*+
 12724  0030E0  CFF5 F050          	movff	tablat,?_scale
 12725  0030E4  0009               	tblrd		*+
 12726  0030E6  CFF5 F051          	movff	tablat,?_scale+1
 12727  0030EA  0009               	tblrd		*+
 12728  0030EC  CFF5 F052          	movff	tablat,?_scale+2
 12729  0030F0  000A               	tblrd		*-
 12730  0030F2  CFF5 F053          	movff	tablat,?_scale+3
 12731  0030F6  0012               	return	
 12732  0030F8                     __end_of_scale:
 12733                           	opt stack 0
 12734                           tblptru	equ	0xFF8
 12735                           tblptrh	equ	0xFF7
 12736                           tblptrl	equ	0xFF6
 12737                           tablat	equ	0xFF5
 12738                           prodh	equ	0xFF4
 12739                           prodl	equ	0xFF3
 12740                           postinc0	equ	0xFEE
 12741                           wreg	equ	0xFE8
 12742                           indf2	equ	0xFDF
 12743                           postinc2	equ	0xFDE
 12744                           postdec2	equ	0xFDD
 12745                           fsr2h	equ	0xFDA
 12746                           fsr2l	equ	0xFD9
 12747                           status	equ	0xFD8
 12748                           
 12749 ;; *************** function _putch *****************
 12750 ;; Defined at:
 12751 ;;		line 24 in file "src/main.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;  data            1    wreg     unsigned char 
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;  data            1    0[COMRAM] unsigned char 
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg
 12760 ;; Tracked objects:
 12761 ;;		On entry : 0/0
 12762 ;;		On exit  : 0/0
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12765 ;;      Params:         0       0       0       0       0       0       0       0       0
 12766 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12767 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12768 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12769 ;;Total ram usage:        1 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; This function calls:
 12772 ;;		Nothing
 12773 ;; This function is called by:
 12774 ;;		_printf
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778                           	psect	text8
 12779  000286                     __ptext8:
 12780                           	opt stack 0
 12781  000286                     _putch:
 12782                           	opt stack 29
 12783                           
 12784                           ;incstack = 0
 12785                           ;putch@data stored from wreg
 12786  000286  6E01               	movwf	putch@data,c
 12787  000288                     l33:
 12788  000288  A89E               	btfss	3998,4,c	;volatile
 12789  00028A  D7FE               	goto	l33
 12790                           
 12791                           ;main.c: 27: TXREG = data;
 12792  00028C  C001  FFAD         	movff	putch@data,4013	;volatile
 12793  000290  0012               	return		;funcret
 12794  000292                     __end_of_putch:
 12795                           	opt stack 0
 12796                           tblptru	equ	0xFF8
 12797                           tblptrh	equ	0xFF7
 12798                           tblptrl	equ	0xFF6
 12799                           tablat	equ	0xFF5
 12800                           prodh	equ	0xFF4
 12801                           prodl	equ	0xFF3
 12802                           postinc0	equ	0xFEE
 12803                           wreg	equ	0xFE8
 12804                           indf2	equ	0xFDF
 12805                           postinc2	equ	0xFDE
 12806                           postdec2	equ	0xFDD
 12807                           fsr2h	equ	0xFDA
 12808                           fsr2l	equ	0xFD9
 12809                           status	equ	0xFD8
 12810                           
 12811 ;; *************** function _isdigit *****************
 12812 ;; Defined at:
 12813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
 12814 ;; Parameters:    Size  Location     Type
 12815 ;;  c               1    wreg     unsigned char 
 12816 ;; Auto vars:     Size  Location     Type
 12817 ;;  c               1    2[COMRAM] unsigned char 
 12818 ;; Return value:  Size  Location     Type
 12819 ;;		None               void
 12820 ;; Registers used:
 12821 ;;		wreg, status,2, status,0
 12822 ;; Tracked objects:
 12823 ;;		On entry : 0/0
 12824 ;;		On exit  : 0/0
 12825 ;;		Unchanged: 0/0
 12826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12827 ;;      Params:         0       0       0       0       0       0       0       0       0
 12828 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12829 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12830 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12831 ;;Total ram usage:        3 bytes
 12832 ;; Hardware stack levels used:    1
 12833 ;; This function calls:
 12834 ;;		Nothing
 12835 ;; This function is called by:
 12836 ;;		_printf
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           	psect	text9
 12841  0002CA                     __ptext9:
 12842                           	opt stack 0
 12843  0002CA                     _isdigit:
 12844                           	opt stack 29
 12845                           
 12846                           ;incstack = 0
 12847                           ;isdigit@c stored from wreg
 12848  0002CA  6E03               	movwf	isdigit@c,c
 12849  0002CC  0E00               	movlw	0
 12850  0002CE  6E02               	movwf	_isdigit$959,c
 12851  0002D0  0E3A               	movlw	58
 12852  0002D2  6003               	cpfslt	isdigit@c,c
 12853  0002D4  D005               	goto	l4083
 12854  0002D6  0E2F               	movlw	47
 12855  0002D8  6403               	cpfsgt	isdigit@c,c
 12856  0002DA  D002               	goto	l4083
 12857  0002DC  0E01               	movlw	1
 12858  0002DE  6E02               	movwf	_isdigit$959,c
 12859  0002E0                     l4083:
 12860  0002E0  C002  F001         	movff	_isdigit$959,??_isdigit
 12861  0002E4  3001               	rrcf	??_isdigit,w,c
 12862  0002E6  0012               	return	
 12863  0002E8                     __end_of_isdigit:
 12864                           	opt stack 0
 12865                           tblptru	equ	0xFF8
 12866                           tblptrh	equ	0xFF7
 12867                           tblptrl	equ	0xFF6
 12868                           tablat	equ	0xFF5
 12869                           prodh	equ	0xFF4
 12870                           prodl	equ	0xFF3
 12871                           postinc0	equ	0xFEE
 12872                           wreg	equ	0xFE8
 12873                           indf2	equ	0xFDF
 12874                           postinc2	equ	0xFDE
 12875                           postdec2	equ	0xFDD
 12876                           fsr2h	equ	0xFDA
 12877                           fsr2l	equ	0xFD9
 12878                           status	equ	0xFD8
 12879                           
 12880 ;; *************** function _fround *****************
 12881 ;; Defined at:
 12882 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;  prec            1    wreg     unsigned char 
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;  prec            1   91[COMRAM] unsigned char 
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  4   79[COMRAM] unsigned char 
 12889 ;; Registers used:
 12890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12896 ;;      Params:         4       0       0       0       0       0       0       0       0
 12897 ;;      Locals:         9       0       0       0       0       0       0       0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12899 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12900 ;;Total ram usage:       13 bytes
 12901 ;; Hardware stack levels used:    1
 12902 ;; Hardware stack levels required when called:    1
 12903 ;; This function calls:
 12904 ;;		___awdiv
 12905 ;;		___awmod
 12906 ;;		___flmul
 12907 ;; This function is called by:
 12908 ;;		_printf
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text10
 12913  001F12                     __ptext10:
 12914                           	opt stack 0
 12915  001F12                     _fround:
 12916                           	opt stack 28
 12917                           
 12918                           ;incstack = 0
 12919                           ;fround@prec stored from wreg
 12920  001F12  6E5C               	movwf	fround@prec,c
 12921                           
 12922                           ;doprnt.c: 413: if(prec>=110)
 12923  001F14  0E6D               	movlw	109
 12924  001F16  645C               	cpfsgt	fround@prec,c
 12925  001F18  D0AC               	goto	l4025
 12926                           
 12927                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12928  001F1A  0E00               	movlw	0
 12929  001F1C  6E0A               	movwf	___awdiv@divisor+1,c
 12930  001F1E  0E0A               	movlw	10
 12931  001F20  6E09               	movwf	___awdiv@divisor,c
 12932  001F22  0E00               	movlw	0
 12933  001F24  6E04               	movwf	___awmod@divisor+1,c
 12934  001F26  0E64               	movlw	100
 12935  001F28  6E03               	movwf	___awmod@divisor,c
 12936  001F2A  C05C  F001         	movff	fround@prec,___awmod@dividend
 12937  001F2E  6A02               	clrf	___awmod@dividend+1,c
 12938  001F30  EC46  F002         	call	___awmod	;wreg free
 12939  001F34  C001  F007         	movff	?___awmod,___awdiv@dividend
 12940  001F38  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
 12941  001F3C  ECBF  F002         	call	___awdiv	;wreg free
 12942  001F40  90D8               	bcf	status,0,c
 12943  001F42  3607               	rlcf	?___awdiv,f,c
 12944  001F44  3608               	rlcf	?___awdiv+1,f,c
 12945  001F46  90D8               	bcf	status,0,c
 12946  001F48  3607               	rlcf	?___awdiv,f,c
 12947  001F4A  3608               	rlcf	?___awdiv+1,f,c
 12948  001F4C  0E24               	movlw	36
 12949  001F4E  2607               	addwf	?___awdiv,f,c
 12950  001F50  0E00               	movlw	0
 12951  001F52  2208               	addwfc	?___awdiv+1,f,c
 12952  001F54  0E47               	movlw	low __npowers_
 12953  001F56  2407               	addwf	?___awdiv,w,c
 12954  001F58  6EF6               	movwf	tblptrl,c
 12955  001F5A  0E59               	movlw	high __npowers_
 12956  001F5C  2008               	addwfc	?___awdiv+1,w,c
 12957  001F5E  6EF7               	movwf	tblptrh,c
 12958  001F60                     	if	0	;There are less than 3 active tblptr bytes
 12959  001F60                     	endif
 12960  001F60  0009               	tblrd		*+
 12961  001F62  CFF5 F03B          	movff	tablat,___flmul@a
 12962  001F66  0009               	tblrd		*+
 12963  001F68  CFF5 F03C          	movff	tablat,___flmul@a+1
 12964  001F6C  0009               	tblrd		*+
 12965  001F6E  CFF5 F03D          	movff	tablat,___flmul@a+2
 12966  001F72  000A               	tblrd		*-
 12967  001F74  CFF5 F03E          	movff	tablat,___flmul@a+3
 12968  001F78  0E00               	movlw	0
 12969  001F7A  6E0A               	movwf	___awdiv@divisor+1,c
 12970  001F7C  0E64               	movlw	100
 12971  001F7E  6E09               	movwf	___awdiv@divisor,c
 12972  001F80  C05C  F007         	movff	fround@prec,___awdiv@dividend
 12973  001F84  6A08               	clrf	___awdiv@dividend+1,c
 12974  001F86  ECBF  F002         	call	___awdiv	;wreg free
 12975  001F8A  90D8               	bcf	status,0,c
 12976  001F8C  3607               	rlcf	?___awdiv,f,c
 12977  001F8E  3608               	rlcf	?___awdiv+1,f,c
 12978  001F90  90D8               	bcf	status,0,c
 12979  001F92  3607               	rlcf	?___awdiv,f,c
 12980  001F94  3608               	rlcf	?___awdiv+1,f,c
 12981  001F96  0E48               	movlw	72
 12982  001F98  2607               	addwf	?___awdiv,f,c
 12983  001F9A  0E00               	movlw	0
 12984  001F9C  2208               	addwfc	?___awdiv+1,f,c
 12985  001F9E  0E47               	movlw	low __npowers_
 12986  001FA0  2407               	addwf	?___awdiv,w,c
 12987  001FA2  6EF6               	movwf	tblptrl,c
 12988  001FA4  0E59               	movlw	high __npowers_
 12989  001FA6  2008               	addwfc	?___awdiv+1,w,c
 12990  001FA8  6EF7               	movwf	tblptrh,c
 12991  001FAA                     	if	0	;There are less than 3 active tblptr bytes
 12992  001FAA                     	endif
 12993  001FAA  0009               	tblrd		*+
 12994  001FAC  CFF5 F037          	movff	tablat,___flmul@b
 12995  001FB0  0009               	tblrd		*+
 12996  001FB2  CFF5 F038          	movff	tablat,___flmul@b+1
 12997  001FB6  0009               	tblrd		*+
 12998  001FB8  CFF5 F039          	movff	tablat,___flmul@b+2
 12999  001FBC  000A               	tblrd		*-
 13000  001FBE  CFF5 F03A          	movff	tablat,___flmul@b+3
 13001  001FC2  ECC8  F014         	call	___flmul	;wreg free
 13002  001FC6  C037  F058         	movff	?___flmul,_fround$1391
 13003  001FCA  C038  F059         	movff	?___flmul+1,_fround$1391+1
 13004  001FCE  C039  F05A         	movff	?___flmul+2,_fround$1391+2
 13005  001FD2  C03A  F05B         	movff	?___flmul+3,_fround$1391+3
 13006                           
 13007                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13008  001FD6  0E00               	movlw	0
 13009  001FD8  6E04               	movwf	___awmod@divisor+1,c
 13010  001FDA  0E0A               	movlw	10
 13011  001FDC  6E03               	movwf	___awmod@divisor,c
 13012  001FDE  C05C  F001         	movff	fround@prec,___awmod@dividend
 13013  001FE2  6A02               	clrf	___awmod@dividend+1,c
 13014  001FE4  EC46  F002         	call	___awmod	;wreg free
 13015  001FE8  90D8               	bcf	status,0,c
 13016  001FEA  3601               	rlcf	?___awmod,f,c
 13017  001FEC  3602               	rlcf	?___awmod+1,f,c
 13018  001FEE  90D8               	bcf	status,0,c
 13019  001FF0  3601               	rlcf	?___awmod,f,c
 13020  001FF2  3602               	rlcf	?___awmod+1,f,c
 13021  001FF4  0E47               	movlw	low __npowers_
 13022  001FF6  2401               	addwf	?___awmod,w,c
 13023  001FF8  6EF6               	movwf	tblptrl,c
 13024  001FFA  0E59               	movlw	high __npowers_
 13025  001FFC  2002               	addwfc	?___awmod+1,w,c
 13026  001FFE  6EF7               	movwf	tblptrh,c
 13027  002000                     	if	0	;There are less than 3 active tblptr bytes
 13028  002000                     	endif
 13029  002000  0009               	tblrd		*+
 13030  002002  CFF5 F03B          	movff	tablat,___flmul@a
 13031  002006  0009               	tblrd		*+
 13032  002008  CFF5 F03C          	movff	tablat,___flmul@a+1
 13033  00200C  0009               	tblrd		*+
 13034  00200E  CFF5 F03D          	movff	tablat,___flmul@a+2
 13035  002012  000A               	tblrd		*-
 13036  002014  CFF5 F03E          	movff	tablat,___flmul@a+3
 13037  002018  C058  F037         	movff	_fround$1391,___flmul@b
 13038  00201C  C059  F038         	movff	_fround$1391+1,___flmul@b+1
 13039  002020  C05A  F039         	movff	_fround$1391+2,___flmul@b+2
 13040  002024  C05B  F03A         	movff	_fround$1391+3,___flmul@b+3
 13041  002028  ECC8  F014         	call	___flmul	;wreg free
 13042  00202C  C037  F054         	movff	?___flmul,_fround$1392
 13043  002030  C038  F055         	movff	?___flmul+1,_fround$1392+1
 13044  002034  C039  F056         	movff	?___flmul+2,_fround$1392+2
 13045  002038  C03A  F057         	movff	?___flmul+3,_fround$1392+3
 13046                           
 13047                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13048  00203C  C054  F037         	movff	_fround$1392,___flmul@b
 13049  002040  C055  F038         	movff	_fround$1392+1,___flmul@b+1
 13050  002044  C056  F039         	movff	_fround$1392+2,___flmul@b+2
 13051  002048  C057  F03A         	movff	_fround$1392+3,___flmul@b+3
 13052  00204C  0E00               	movlw	0
 13053  00204E  6E3B               	movwf	___flmul@a,c
 13054  002050  0E00               	movlw	0
 13055  002052  6E3C               	movwf	___flmul@a+1,c
 13056  002054  0E00               	movlw	0
 13057  002056  6E3D               	movwf	___flmul@a+2,c
 13058  002058  0E3F               	movlw	63
 13059  00205A  6E3E               	movwf	___flmul@a+3,c
 13060  00205C  ECC8  F014         	call	___flmul	;wreg free
 13061  002060  C037  F050         	movff	?___flmul,?_fround
 13062  002064  C038  F051         	movff	?___flmul+1,?_fround+1
 13063  002068  C039  F052         	movff	?___flmul+2,?_fround+2
 13064  00206C  C03A  F053         	movff	?___flmul+3,?_fround+3
 13065  002070  0012               	return	
 13066  002072                     l4025:
 13067                           
 13068                           ;doprnt.c: 415: else if(prec > 10)
 13069  002072  0E0A               	movlw	10
 13070  002074  645C               	cpfsgt	fround@prec,c
 13071  002076  D063               	goto	l4033
 13072                           
 13073                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13074  002078  0E00               	movlw	0
 13075  00207A  6E04               	movwf	___awmod@divisor+1,c
 13076  00207C  0E0A               	movlw	10
 13077  00207E  6E03               	movwf	___awmod@divisor,c
 13078  002080  C05C  F001         	movff	fround@prec,___awmod@dividend
 13079  002084  6A02               	clrf	___awmod@dividend+1,c
 13080  002086  EC46  F002         	call	___awmod	;wreg free
 13081  00208A  90D8               	bcf	status,0,c
 13082  00208C  3601               	rlcf	?___awmod,f,c
 13083  00208E  3602               	rlcf	?___awmod+1,f,c
 13084  002090  90D8               	bcf	status,0,c
 13085  002092  3601               	rlcf	?___awmod,f,c
 13086  002094  3602               	rlcf	?___awmod+1,f,c
 13087  002096  0E47               	movlw	low __npowers_
 13088  002098  2401               	addwf	?___awmod,w,c
 13089  00209A  6EF6               	movwf	tblptrl,c
 13090  00209C  0E59               	movlw	high __npowers_
 13091  00209E  2002               	addwfc	?___awmod+1,w,c
 13092  0020A0  6EF7               	movwf	tblptrh,c
 13093  0020A2                     	if	0	;There are less than 3 active tblptr bytes
 13094  0020A2                     	endif
 13095  0020A2  0009               	tblrd		*+
 13096  0020A4  CFF5 F03B          	movff	tablat,___flmul@a
 13097  0020A8  0009               	tblrd		*+
 13098  0020AA  CFF5 F03C          	movff	tablat,___flmul@a+1
 13099  0020AE  0009               	tblrd		*+
 13100  0020B0  CFF5 F03D          	movff	tablat,___flmul@a+2
 13101  0020B4  000A               	tblrd		*-
 13102  0020B6  CFF5 F03E          	movff	tablat,___flmul@a+3
 13103  0020BA  0E00               	movlw	0
 13104  0020BC  6E0A               	movwf	___awdiv@divisor+1,c
 13105  0020BE  0E0A               	movlw	10
 13106  0020C0  6E09               	movwf	___awdiv@divisor,c
 13107  0020C2  C05C  F007         	movff	fround@prec,___awdiv@dividend
 13108  0020C6  6A08               	clrf	___awdiv@dividend+1,c
 13109  0020C8  ECBF  F002         	call	___awdiv	;wreg free
 13110  0020CC  90D8               	bcf	status,0,c
 13111  0020CE  3607               	rlcf	?___awdiv,f,c
 13112  0020D0  3608               	rlcf	?___awdiv+1,f,c
 13113  0020D2  90D8               	bcf	status,0,c
 13114  0020D4  3607               	rlcf	?___awdiv,f,c
 13115  0020D6  3608               	rlcf	?___awdiv+1,f,c
 13116  0020D8  0E24               	movlw	36
 13117  0020DA  2607               	addwf	?___awdiv,f,c
 13118  0020DC  0E00               	movlw	0
 13119  0020DE  2208               	addwfc	?___awdiv+1,f,c
 13120  0020E0  0E47               	movlw	low __npowers_
 13121  0020E2  2407               	addwf	?___awdiv,w,c
 13122  0020E4  6EF6               	movwf	tblptrl,c
 13123  0020E6  0E59               	movlw	high __npowers_
 13124  0020E8  2008               	addwfc	?___awdiv+1,w,c
 13125  0020EA  6EF7               	movwf	tblptrh,c
 13126  0020EC                     	if	0	;There are less than 3 active tblptr bytes
 13127  0020EC                     	endif
 13128  0020EC  0009               	tblrd		*+
 13129  0020EE  CFF5 F037          	movff	tablat,___flmul@b
 13130  0020F2  0009               	tblrd		*+
 13131  0020F4  CFF5 F038          	movff	tablat,___flmul@b+1
 13132  0020F8  0009               	tblrd		*+
 13133  0020FA  CFF5 F039          	movff	tablat,___flmul@b+2
 13134  0020FE  000A               	tblrd		*-
 13135  002100  CFF5 F03A          	movff	tablat,___flmul@b+3
 13136  002104  ECC8  F014         	call	___flmul	;wreg free
 13137  002108  C037  F058         	movff	?___flmul,_fround$1391
 13138  00210C  C038  F059         	movff	?___flmul+1,_fround$1391+1
 13139  002110  C039  F05A         	movff	?___flmul+2,_fround$1391+2
 13140  002114  C03A  F05B         	movff	?___flmul+3,_fround$1391+3
 13141                           
 13142                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13143  002118  C058  F037         	movff	_fround$1391,___flmul@b
 13144  00211C  C059  F038         	movff	_fround$1391+1,___flmul@b+1
 13145  002120  C05A  F039         	movff	_fround$1391+2,___flmul@b+2
 13146  002124  C05B  F03A         	movff	_fround$1391+3,___flmul@b+3
 13147  002128  0E00               	movlw	0
 13148  00212A  6E3B               	movwf	___flmul@a,c
 13149  00212C  0E00               	movlw	0
 13150  00212E  6E3C               	movwf	___flmul@a+1,c
 13151  002130  0E00               	movlw	0
 13152  002132  6E3D               	movwf	___flmul@a+2,c
 13153  002134  0E3F               	movlw	63
 13154  002136  6E3E               	movwf	___flmul@a+3,c
 13155  002138  ECC8  F014         	call	___flmul	;wreg free
 13156  00213C  D791               	goto	L5
 13157  00213E                     l4033:
 13158                           
 13159                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 13160  00213E  505C               	movf	fround@prec,w,c
 13161  002140  0D04               	mullw	4
 13162  002142  0E47               	movlw	low __npowers_
 13163  002144  24F3               	addwf	prodl,w,c
 13164  002146  6EF6               	movwf	tblptrl,c
 13165  002148  0E59               	movlw	high __npowers_
 13166  00214A  20F4               	addwfc	prodh,w,c
 13167  00214C  6EF7               	movwf	tblptrh,c
 13168  00214E                     	if	0	;There are less than 3 active tblptr bytes
 13169  00214E                     	endif
 13170  00214E  0009               	tblrd		*+
 13171  002150  CFF5 F037          	movff	tablat,___flmul@b
 13172  002154  0009               	tblrd		*+
 13173  002156  CFF5 F038          	movff	tablat,___flmul@b+1
 13174  00215A  0009               	tblrd		*+
 13175  00215C  CFF5 F039          	movff	tablat,___flmul@b+2
 13176  002160  000A               	tblrd		*-
 13177  002162  CFF5 F03A          	movff	tablat,___flmul@b+3
 13178  002166  0E00               	movlw	0
 13179  002168  6E3B               	movwf	___flmul@a,c
 13180  00216A  0E00               	movlw	0
 13181  00216C  6E3C               	movwf	___flmul@a+1,c
 13182  00216E  0E00               	movlw	0
 13183  002170  6E3D               	movwf	___flmul@a+2,c
 13184  002172  0E3F               	movlw	63
 13185  002174  6E3E               	movwf	___flmul@a+3,c
 13186  002176  ECC8  F014         	call	___flmul	;wreg free
 13187  00217A  C037  F050         	movff	?___flmul,?_fround
 13188  00217E  C038  F051         	movff	?___flmul+1,?_fround+1
 13189  002182  C039  F052         	movff	?___flmul+2,?_fround+2
 13190  002186  C03A  F053         	movff	?___flmul+3,?_fround+3
 13191  00218A  0012               	return	
 13192  00218C                     __end_of_fround:
 13193                           	opt stack 0
 13194                           tblptru	equ	0xFF8
 13195                           tblptrh	equ	0xFF7
 13196                           tblptrl	equ	0xFF6
 13197                           tablat	equ	0xFF5
 13198                           prodh	equ	0xFF4
 13199                           prodl	equ	0xFF3
 13200                           postinc0	equ	0xFEE
 13201                           wreg	equ	0xFE8
 13202                           indf2	equ	0xFDF
 13203                           postinc2	equ	0xFDE
 13204                           postdec2	equ	0xFDD
 13205                           fsr2h	equ	0xFDA
 13206                           fsr2l	equ	0xFD9
 13207                           status	equ	0xFD8
 13208                           
 13209 ;; *************** function ___awmod *****************
 13210 ;; Defined at:
 13211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;  dividend        2    0[COMRAM] int 
 13214 ;;  divisor         2    2[COMRAM] int 
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;  sign            1    5[COMRAM] unsigned char 
 13217 ;;  counter         1    4[COMRAM] unsigned char 
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  2    0[COMRAM] int 
 13220 ;; Registers used:
 13221 ;;		wreg, status,2, status,0
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13227 ;;      Params:         4       0       0       0       0       0       0       0       0
 13228 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13230 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13231 ;;Total ram usage:        6 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; This function calls:
 13234 ;;		Nothing
 13235 ;; This function is called by:
 13236 ;;		_fround
 13237 ;;		_scale
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           
 13241                           	psect	text11
 13242  00048C                     __ptext11:
 13243                           	opt stack 0
 13244  00048C                     ___awmod:
 13245                           	opt stack 28
 13246                           
 13247                           ;incstack = 0
 13248  00048C  0E00               	movlw	0
 13249  00048E  6E06               	movwf	___awmod@sign,c
 13250  000490  AE02               	btfss	___awmod@dividend+1,7,c
 13251  000492  D006               	goto	l3965
 13252  000494  6C01               	negf	___awmod@dividend,c
 13253  000496  1E02               	comf	___awmod@dividend+1,f,c
 13254  000498  B0D8               	btfsc	status,0,c
 13255  00049A  2A02               	incf	___awmod@dividend+1,f,c
 13256  00049C  0E01               	movlw	1
 13257  00049E  6E06               	movwf	___awmod@sign,c
 13258  0004A0                     l3965:
 13259  0004A0  AE04               	btfss	___awmod@divisor+1,7,c
 13260  0004A2  D004               	goto	l3969
 13261  0004A4  6C03               	negf	___awmod@divisor,c
 13262  0004A6  1E04               	comf	___awmod@divisor+1,f,c
 13263  0004A8  B0D8               	btfsc	status,0,c
 13264  0004AA  2A04               	incf	___awmod@divisor+1,f,c
 13265  0004AC                     l3969:
 13266  0004AC  5003               	movf	___awmod@divisor,w,c
 13267  0004AE  1004               	iorwf	___awmod@divisor+1,w,c
 13268  0004B0  B4D8               	btfsc	status,2,c
 13269  0004B2  D018               	goto	l3985
 13270  0004B4  0E01               	movlw	1
 13271  0004B6  6E05               	movwf	___awmod@counter,c
 13272  0004B8  D004               	goto	l3975
 13273  0004BA                     l3973:
 13274  0004BA  90D8               	bcf	status,0,c
 13275  0004BC  3603               	rlcf	___awmod@divisor,f,c
 13276  0004BE  3604               	rlcf	___awmod@divisor+1,f,c
 13277  0004C0  2A05               	incf	___awmod@counter,f,c
 13278  0004C2                     l3975:
 13279  0004C2  AE04               	btfss	___awmod@divisor+1,7,c
 13280  0004C4  D7FA               	goto	l3973
 13281  0004C6                     l3977:
 13282  0004C6  5003               	movf	___awmod@divisor,w,c
 13283  0004C8  5C01               	subwf	___awmod@dividend,w,c
 13284  0004CA  5004               	movf	___awmod@divisor+1,w,c
 13285  0004CC  5802               	subwfb	___awmod@dividend+1,w,c
 13286  0004CE  A0D8               	btfss	status,0,c
 13287  0004D0  D004               	goto	l3981
 13288  0004D2  5003               	movf	___awmod@divisor,w,c
 13289  0004D4  5E01               	subwf	___awmod@dividend,f,c
 13290  0004D6  5004               	movf	___awmod@divisor+1,w,c
 13291  0004D8  5A02               	subwfb	___awmod@dividend+1,f,c
 13292  0004DA                     l3981:
 13293  0004DA  90D8               	bcf	status,0,c
 13294  0004DC  3204               	rrcf	___awmod@divisor+1,f,c
 13295  0004DE  3203               	rrcf	___awmod@divisor,f,c
 13296  0004E0  2E05               	decfsz	___awmod@counter,f,c
 13297  0004E2  D7F1               	goto	l3977
 13298  0004E4                     l3985:
 13299  0004E4  5006               	movf	___awmod@sign,w,c
 13300  0004E6  B4D8               	btfsc	status,2,c
 13301  0004E8  D004               	goto	l3989
 13302  0004EA  6C01               	negf	___awmod@dividend,c
 13303  0004EC  1E02               	comf	___awmod@dividend+1,f,c
 13304  0004EE  B0D8               	btfsc	status,0,c
 13305  0004F0  2A02               	incf	___awmod@dividend+1,f,c
 13306  0004F2                     l3989:
 13307  0004F2  C001  F001         	movff	___awmod@dividend,?___awmod
 13308  0004F6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 13309  0004FA  0012               	return	
 13310  0004FC                     __end_of___awmod:
 13311                           	opt stack 0
 13312                           tblptru	equ	0xFF8
 13313                           tblptrh	equ	0xFF7
 13314                           tblptrl	equ	0xFF6
 13315                           tablat	equ	0xFF5
 13316                           prodh	equ	0xFF4
 13317                           prodl	equ	0xFF3
 13318                           postinc0	equ	0xFEE
 13319                           wreg	equ	0xFE8
 13320                           indf2	equ	0xFDF
 13321                           postinc2	equ	0xFDE
 13322                           postdec2	equ	0xFDD
 13323                           fsr2h	equ	0xFDA
 13324                           fsr2l	equ	0xFD9
 13325                           status	equ	0xFD8
 13326                           
 13327 ;; *************** function ___awdiv *****************
 13328 ;; Defined at:
 13329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 13330 ;; Parameters:    Size  Location     Type
 13331 ;;  dividend        2    6[COMRAM] int 
 13332 ;;  divisor         2    8[COMRAM] int 
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;  quotient        2   12[COMRAM] int 
 13335 ;;  sign            1   11[COMRAM] unsigned char 
 13336 ;;  counter         1   10[COMRAM] unsigned char 
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  2    6[COMRAM] int 
 13339 ;; Registers used:
 13340 ;;		wreg, status,2, status,0
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13346 ;;      Params:         4       0       0       0       0       0       0       0       0
 13347 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13348 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13349 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13350 ;;Total ram usage:        8 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; This function calls:
 13353 ;;		Nothing
 13354 ;; This function is called by:
 13355 ;;		_fround
 13356 ;;		_scale
 13357 ;;		_printf
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text12
 13362  00057E                     __ptext12:
 13363                           	opt stack 0
 13364  00057E                     ___awdiv:
 13365                           	opt stack 28
 13366                           
 13367                           ;incstack = 0
 13368  00057E  0E00               	movlw	0
 13369  000580  6E0C               	movwf	___awdiv@sign,c
 13370  000582  AE0A               	btfss	___awdiv@divisor+1,7,c
 13371  000584  D006               	goto	l3921
 13372  000586  6C09               	negf	___awdiv@divisor,c
 13373  000588  1E0A               	comf	___awdiv@divisor+1,f,c
 13374  00058A  B0D8               	btfsc	status,0,c
 13375  00058C  2A0A               	incf	___awdiv@divisor+1,f,c
 13376  00058E  0E01               	movlw	1
 13377  000590  6E0C               	movwf	___awdiv@sign,c
 13378  000592                     l3921:
 13379  000592  AE08               	btfss	___awdiv@dividend+1,7,c
 13380  000594  D006               	goto	l3927
 13381  000596  6C07               	negf	___awdiv@dividend,c
 13382  000598  1E08               	comf	___awdiv@dividend+1,f,c
 13383  00059A  B0D8               	btfsc	status,0,c
 13384  00059C  2A08               	incf	___awdiv@dividend+1,f,c
 13385  00059E  0E01               	movlw	1
 13386  0005A0  1A0C               	xorwf	___awdiv@sign,f,c
 13387  0005A2                     l3927:
 13388  0005A2  0E00               	movlw	0
 13389  0005A4  6E0E               	movwf	___awdiv@quotient+1,c
 13390  0005A6  0E00               	movlw	0
 13391  0005A8  6E0D               	movwf	___awdiv@quotient,c
 13392  0005AA  5009               	movf	___awdiv@divisor,w,c
 13393  0005AC  100A               	iorwf	___awdiv@divisor+1,w,c
 13394  0005AE  B4D8               	btfsc	status,2,c
 13395  0005B0  D01C               	goto	l3949
 13396  0005B2  0E01               	movlw	1
 13397  0005B4  6E0B               	movwf	___awdiv@counter,c
 13398  0005B6  D004               	goto	l3935
 13399  0005B8                     l3933:
 13400  0005B8  90D8               	bcf	status,0,c
 13401  0005BA  3609               	rlcf	___awdiv@divisor,f,c
 13402  0005BC  360A               	rlcf	___awdiv@divisor+1,f,c
 13403  0005BE  2A0B               	incf	___awdiv@counter,f,c
 13404  0005C0                     l3935:
 13405  0005C0  AE0A               	btfss	___awdiv@divisor+1,7,c
 13406  0005C2  D7FA               	goto	l3933
 13407  0005C4                     l3937:
 13408  0005C4  90D8               	bcf	status,0,c
 13409  0005C6  360D               	rlcf	___awdiv@quotient,f,c
 13410  0005C8  360E               	rlcf	___awdiv@quotient+1,f,c
 13411  0005CA  5009               	movf	___awdiv@divisor,w,c
 13412  0005CC  5C07               	subwf	___awdiv@dividend,w,c
 13413  0005CE  500A               	movf	___awdiv@divisor+1,w,c
 13414  0005D0  5808               	subwfb	___awdiv@dividend+1,w,c
 13415  0005D2  A0D8               	btfss	status,0,c
 13416  0005D4  D005               	goto	l3945
 13417  0005D6  5009               	movf	___awdiv@divisor,w,c
 13418  0005D8  5E07               	subwf	___awdiv@dividend,f,c
 13419  0005DA  500A               	movf	___awdiv@divisor+1,w,c
 13420  0005DC  5A08               	subwfb	___awdiv@dividend+1,f,c
 13421  0005DE  800D               	bsf	___awdiv@quotient,0,c
 13422  0005E0                     l3945:
 13423  0005E0  90D8               	bcf	status,0,c
 13424  0005E2  320A               	rrcf	___awdiv@divisor+1,f,c
 13425  0005E4  3209               	rrcf	___awdiv@divisor,f,c
 13426  0005E6  2E0B               	decfsz	___awdiv@counter,f,c
 13427  0005E8  D7ED               	goto	l3937
 13428  0005EA                     l3949:
 13429  0005EA  500C               	movf	___awdiv@sign,w,c
 13430  0005EC  B4D8               	btfsc	status,2,c
 13431  0005EE  D004               	goto	l3953
 13432  0005F0  6C0D               	negf	___awdiv@quotient,c
 13433  0005F2  1E0E               	comf	___awdiv@quotient+1,f,c
 13434  0005F4  B0D8               	btfsc	status,0,c
 13435  0005F6  2A0E               	incf	___awdiv@quotient+1,f,c
 13436  0005F8                     l3953:
 13437  0005F8  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 13438  0005FC  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 13439  000600  0012               	return	
 13440  000602                     __end_of___awdiv:
 13441                           	opt stack 0
 13442                           tblptru	equ	0xFF8
 13443                           tblptrh	equ	0xFF7
 13444                           tblptrl	equ	0xFF6
 13445                           tablat	equ	0xFF5
 13446                           prodh	equ	0xFF4
 13447                           prodl	equ	0xFF3
 13448                           postinc0	equ	0xFEE
 13449                           wreg	equ	0xFE8
 13450                           indf2	equ	0xFDF
 13451                           postinc2	equ	0xFDE
 13452                           postdec2	equ	0xFDD
 13453                           fsr2h	equ	0xFDA
 13454                           fsr2l	equ	0xFD9
 13455                           status	equ	0xFD8
 13456                           
 13457 ;; *************** function __tdiv_to_l_ *****************
 13458 ;; Defined at:
 13459 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;  f1              4    0[COMRAM] float 
 13462 ;;  f2              4    4[COMRAM] float 
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;  quot            4   11[COMRAM] unsigned long 
 13465 ;;  exp1            1   16[COMRAM] unsigned char 
 13466 ;;  cntr            1   15[COMRAM] unsigned char 
 13467 ;; Return value:  Size  Location     Type
 13468 ;;                  4    0[COMRAM] unsigned long 
 13469 ;; Registers used:
 13470 ;;		wreg, status,2, status,0
 13471 ;; Tracked objects:
 13472 ;;		On entry : 0/0
 13473 ;;		On exit  : 0/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13476 ;;      Params:         8       0       0       0       0       0       0       0       0
 13477 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13478 ;;      Temps:          3       0       0       0       0       0       0       0       0
 13479 ;;      Totals:        17       0       0       0       0       0       0       0       0
 13480 ;;Total ram usage:       17 bytes
 13481 ;; Hardware stack levels used:    1
 13482 ;; This function calls:
 13483 ;;		Nothing
 13484 ;; This function is called by:
 13485 ;;		_printf
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           	psect	text13
 13490  0010B0                     __ptext13:
 13491                           	opt stack 0
 13492  0010B0                     __tdiv_to_l_:
 13493                           	opt stack 29
 13494                           
 13495                           ;incstack = 0
 13496  0010B0  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13497  0010B4  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 13498  0010B6  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 13499  0010B8  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
 13500  0010BA  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
 13501  0010BC  E301               	bnc	u4651
 13502  0010BE  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 13503  0010C0                     u4651:
 13504  0010C0  5009               	movf	??__tdiv_to_l_,w,c
 13505  0010C2  6E11               	movwf	__tdiv_to_l_@exp1,c
 13506  0010C4  5011               	movf	__tdiv_to_l_@exp1,w,c
 13507  0010C6  A4D8               	btfss	status,2,c
 13508  0010C8  D009               	goto	l4093
 13509  0010CA  0E00               	movlw	0
 13510  0010CC  6E01               	movwf	?__tdiv_to_l_,c
 13511  0010CE  0E00               	movlw	0
 13512  0010D0  6E02               	movwf	?__tdiv_to_l_+1,c
 13513  0010D2  0E00               	movlw	0
 13514  0010D4  6E03               	movwf	?__tdiv_to_l_+2,c
 13515  0010D6  0E00               	movlw	0
 13516  0010D8  6E04               	movwf	?__tdiv_to_l_+3,c
 13517  0010DA  0012               	return	
 13518  0010DC                     l4093:
 13519  0010DC  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 13520  0010E0  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 13521  0010E2  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 13522  0010E4  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
 13523  0010E6  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
 13524  0010E8  E301               	bnc	u4671
 13525  0010EA  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 13526  0010EC                     u4671:
 13527  0010EC  5009               	movf	??__tdiv_to_l_,w,c
 13528  0010EE  6E10               	movwf	__tdiv_to_l_@cntr,c
 13529  0010F0  5010               	movf	__tdiv_to_l_@cntr,w,c
 13530  0010F2  A4D8               	btfss	status,2,c
 13531  0010F4  D009               	goto	l4099
 13532  0010F6  0E00               	movlw	0
 13533  0010F8  6E01               	movwf	?__tdiv_to_l_,c
 13534  0010FA  0E00               	movlw	0
 13535  0010FC  6E02               	movwf	?__tdiv_to_l_+1,c
 13536  0010FE  0E00               	movlw	0
 13537  001100  6E03               	movwf	?__tdiv_to_l_+2,c
 13538  001102  0E00               	movlw	0
 13539  001104  6E04               	movwf	?__tdiv_to_l_+3,c
 13540  001106  0012               	return	
 13541  001108                     l4099:
 13542  001108  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
 13543  00110A  0EFF               	movlw	255
 13544  00110C  1601               	andwf	__tdiv_to_l_@f1,f,c
 13545  00110E  0EFF               	movlw	255
 13546  001110  1602               	andwf	__tdiv_to_l_@f1+1,f,c
 13547  001112  0E00               	movlw	0
 13548  001114  1603               	andwf	__tdiv_to_l_@f1+2,f,c
 13549  001116  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
 13550  001118  0EFF               	movlw	255
 13551  00111A  1605               	andwf	__tdiv_to_l_@f2,f,c
 13552  00111C  0EFF               	movlw	255
 13553  00111E  1606               	andwf	__tdiv_to_l_@f2+1,f,c
 13554  001120  0E00               	movlw	0
 13555  001122  1607               	andwf	__tdiv_to_l_@f2+2,f,c
 13556  001124  0E00               	movlw	0
 13557  001126  6E0C               	movwf	__tdiv_to_l_@quot,c
 13558  001128  0E00               	movlw	0
 13559  00112A  6E0D               	movwf	__tdiv_to_l_@quot+1,c
 13560  00112C  0E00               	movlw	0
 13561  00112E  6E0E               	movwf	__tdiv_to_l_@quot+2,c
 13562  001130  0E00               	movlw	0
 13563  001132  6E0F               	movwf	__tdiv_to_l_@quot+3,c
 13564  001134  0E7F               	movlw	127
 13565  001136  5E11               	subwf	__tdiv_to_l_@exp1,f,c
 13566  001138  5010               	movf	__tdiv_to_l_@cntr,w,c
 13567  00113A  0F98               	addlw	152
 13568  00113C  5E11               	subwf	__tdiv_to_l_@exp1,f,c
 13569  00113E  0E18               	movlw	24
 13570  001140  6E10               	movwf	__tdiv_to_l_@cntr,c
 13571  001142                     l692:
 13572  001142  90D8               	bcf	status,0,c
 13573  001144  360C               	rlcf	__tdiv_to_l_@quot,f,c
 13574  001146  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
 13575  001148  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
 13576  00114A  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
 13577  00114C  5005               	movf	__tdiv_to_l_@f2,w,c
 13578  00114E  5C01               	subwf	__tdiv_to_l_@f1,w,c
 13579  001150  5006               	movf	__tdiv_to_l_@f2+1,w,c
 13580  001152  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
 13581  001154  5007               	movf	__tdiv_to_l_@f2+2,w,c
 13582  001156  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
 13583  001158  A0D8               	btfss	status,0,c
 13584  00115A  D007               	goto	l693
 13585  00115C  5005               	movf	__tdiv_to_l_@f2,w,c
 13586  00115E  5E01               	subwf	__tdiv_to_l_@f1,f,c
 13587  001160  5006               	movf	__tdiv_to_l_@f2+1,w,c
 13588  001162  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
 13589  001164  5007               	movf	__tdiv_to_l_@f2+2,w,c
 13590  001166  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
 13591  001168  800C               	bsf	__tdiv_to_l_@quot,0,c
 13592  00116A                     l693:
 13593  00116A  90D8               	bcf	status,0,c
 13594  00116C  3601               	rlcf	__tdiv_to_l_@f1,f,c
 13595  00116E  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
 13596  001170  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
 13597  001172  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
 13598  001174  D7E6               	goto	l692
 13599  001176  AE11               	btfss	__tdiv_to_l_@exp1,7,c
 13600  001178  D016               	goto	l4133
 13601  00117A  5011               	movf	__tdiv_to_l_@exp1,w,c
 13602  00117C  0A80               	xorlw	128
 13603  00117E  0F97               	addlw	151
 13604  001180  B0D8               	btfsc	status,0,c
 13605  001182  D009               	goto	l4129
 13606  001184  0E00               	movlw	0
 13607  001186  6E01               	movwf	?__tdiv_to_l_,c
 13608  001188  0E00               	movlw	0
 13609  00118A  6E02               	movwf	?__tdiv_to_l_+1,c
 13610  00118C  0E00               	movlw	0
 13611  00118E  6E03               	movwf	?__tdiv_to_l_+2,c
 13612  001190  0E00               	movlw	0
 13613  001192  6E04               	movwf	?__tdiv_to_l_+3,c
 13614  001194  0012               	return	
 13615  001196                     l4129:
 13616  001196  90D8               	bcf	status,0,c
 13617  001198  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
 13618  00119A  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
 13619  00119C  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
 13620  00119E  320C               	rrcf	__tdiv_to_l_@quot,f,c
 13621  0011A0  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
 13622  0011A2  D7F9               	goto	l4129
 13623  0011A4  D015               	goto	l699
 13624  0011A6                     l4133:
 13625  0011A6  0E17               	movlw	23
 13626  0011A8  6411               	cpfsgt	__tdiv_to_l_@exp1,c
 13627  0011AA  D00F               	goto	l4141
 13628  0011AC  0E00               	movlw	0
 13629  0011AE  6E01               	movwf	?__tdiv_to_l_,c
 13630  0011B0  0E00               	movlw	0
 13631  0011B2  6E02               	movwf	?__tdiv_to_l_+1,c
 13632  0011B4  0E00               	movlw	0
 13633  0011B6  6E03               	movwf	?__tdiv_to_l_+2,c
 13634  0011B8  0E00               	movlw	0
 13635  0011BA  6E04               	movwf	?__tdiv_to_l_+3,c
 13636  0011BC  0012               	return	
 13637  0011BE                     l4139:
 13638  0011BE  90D8               	bcf	status,0,c
 13639  0011C0  360C               	rlcf	__tdiv_to_l_@quot,f,c
 13640  0011C2  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
 13641  0011C4  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
 13642  0011C6  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
 13643  0011C8  0611               	decf	__tdiv_to_l_@exp1,f,c
 13644  0011CA                     l4141:
 13645  0011CA  5011               	movf	__tdiv_to_l_@exp1,w,c
 13646  0011CC  A4D8               	btfss	status,2,c
 13647  0011CE  D7F7               	goto	l4139
 13648  0011D0                     l699:
 13649  0011D0  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 13650  0011D4  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 13651  0011D8  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 13652  0011DC  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 13653  0011E0  0012               	return		;funcret
 13654  0011E2                     __end_of__tdiv_to_l_:
 13655                           	opt stack 0
 13656                           tblptru	equ	0xFF8
 13657                           tblptrh	equ	0xFF7
 13658                           tblptrl	equ	0xFF6
 13659                           tablat	equ	0xFF5
 13660                           prodh	equ	0xFF4
 13661                           prodl	equ	0xFF3
 13662                           postinc0	equ	0xFEE
 13663                           wreg	equ	0xFE8
 13664                           indf2	equ	0xFDF
 13665                           postinc2	equ	0xFDE
 13666                           postdec2	equ	0xFDD
 13667                           fsr2h	equ	0xFDA
 13668                           fsr2l	equ	0xFD9
 13669                           status	equ	0xFD8
 13670                           
 13671 ;; *************** function __div_to_l_ *****************
 13672 ;; Defined at:
 13673 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;  f1              4    0[COMRAM] unsigned long 
 13676 ;;  f2              4    4[COMRAM] unsigned long 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;  quot            4    8[COMRAM] unsigned long 
 13679 ;;  exp1            1   13[COMRAM] unsigned char 
 13680 ;;  cntr            1   12[COMRAM] unsigned char 
 13681 ;; Return value:  Size  Location     Type
 13682 ;;                  4    0[COMRAM] unsigned long 
 13683 ;; Registers used:
 13684 ;;		wreg, status,2, status,0
 13685 ;; Tracked objects:
 13686 ;;		On entry : 0/0
 13687 ;;		On exit  : 0/0
 13688 ;;		Unchanged: 0/0
 13689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13690 ;;      Params:         8       0       0       0       0       0       0       0       0
 13691 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13692 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13693 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13694 ;;Total ram usage:       14 bytes
 13695 ;; Hardware stack levels used:    1
 13696 ;; This function calls:
 13697 ;;		Nothing
 13698 ;; This function is called by:
 13699 ;;		_printf
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           	psect	text14
 13704  000F88                     __ptext14:
 13705                           	opt stack 0
 13706  000F88                     __div_to_l_:
 13707                           	opt stack 29
 13708                           
 13709                           ;incstack = 0
 13710  000F88  3403               	rlcf	__div_to_l_@f1+2,w,c
 13711  000F8A  3404               	rlcf	__div_to_l_@f1+3,w,c
 13712  000F8C  6E0E               	movwf	__div_to_l_@exp1,c
 13713  000F8E  500E               	movf	__div_to_l_@exp1,w,c
 13714  000F90  A4D8               	btfss	status,2,c
 13715  000F92  D009               	goto	l4149
 13716  000F94  0E00               	movlw	0
 13717  000F96  6E01               	movwf	?__div_to_l_,c
 13718  000F98  0E00               	movlw	0
 13719  000F9A  6E02               	movwf	?__div_to_l_+1,c
 13720  000F9C  0E00               	movlw	0
 13721  000F9E  6E03               	movwf	?__div_to_l_+2,c
 13722  000FA0  0E00               	movlw	0
 13723  000FA2  6E04               	movwf	?__div_to_l_+3,c
 13724  000FA4  0012               	return	
 13725  000FA6                     l4149:
 13726  000FA6  3407               	rlcf	__div_to_l_@f2+2,w,c
 13727  000FA8  3408               	rlcf	__div_to_l_@f2+3,w,c
 13728  000FAA  6E0D               	movwf	__div_to_l_@cntr,c
 13729  000FAC  500D               	movf	__div_to_l_@cntr,w,c
 13730  000FAE  A4D8               	btfss	status,2,c
 13731  000FB0  D009               	goto	l4155
 13732  000FB2  0E00               	movlw	0
 13733  000FB4  6E01               	movwf	?__div_to_l_,c
 13734  000FB6  0E00               	movlw	0
 13735  000FB8  6E02               	movwf	?__div_to_l_+1,c
 13736  000FBA  0E00               	movlw	0
 13737  000FBC  6E03               	movwf	?__div_to_l_+2,c
 13738  000FBE  0E00               	movlw	0
 13739  000FC0  6E04               	movwf	?__div_to_l_+3,c
 13740  000FC2  0012               	return	
 13741  000FC4                     l4155:
 13742  000FC4  8E03               	bsf	__div_to_l_@f1+2,7,c
 13743  000FC6  0EFF               	movlw	255
 13744  000FC8  1601               	andwf	__div_to_l_@f1,f,c
 13745  000FCA  0EFF               	movlw	255
 13746  000FCC  1602               	andwf	__div_to_l_@f1+1,f,c
 13747  000FCE  0EFF               	movlw	255
 13748  000FD0  1603               	andwf	__div_to_l_@f1+2,f,c
 13749  000FD2  0E00               	movlw	0
 13750  000FD4  1604               	andwf	__div_to_l_@f1+3,f,c
 13751  000FD6  8E07               	bsf	__div_to_l_@f2+2,7,c
 13752  000FD8  0EFF               	movlw	255
 13753  000FDA  1605               	andwf	__div_to_l_@f2,f,c
 13754  000FDC  0EFF               	movlw	255
 13755  000FDE  1606               	andwf	__div_to_l_@f2+1,f,c
 13756  000FE0  0EFF               	movlw	255
 13757  000FE2  1607               	andwf	__div_to_l_@f2+2,f,c
 13758  000FE4  0E00               	movlw	0
 13759  000FE6  1608               	andwf	__div_to_l_@f2+3,f,c
 13760  000FE8  0E00               	movlw	0
 13761  000FEA  6E09               	movwf	__div_to_l_@quot,c
 13762  000FEC  0E00               	movlw	0
 13763  000FEE  6E0A               	movwf	__div_to_l_@quot+1,c
 13764  000FF0  0E00               	movlw	0
 13765  000FF2  6E0B               	movwf	__div_to_l_@quot+2,c
 13766  000FF4  0E00               	movlw	0
 13767  000FF6  6E0C               	movwf	__div_to_l_@quot+3,c
 13768  000FF8  0E7F               	movlw	127
 13769  000FFA  5E0E               	subwf	__div_to_l_@exp1,f,c
 13770  000FFC  500D               	movf	__div_to_l_@cntr,w,c
 13771  000FFE  0FA0               	addlw	160
 13772  001000  5E0E               	subwf	__div_to_l_@exp1,f,c
 13773  001002  0E20               	movlw	32
 13774  001004  6E0D               	movwf	__div_to_l_@cntr,c
 13775  001006                     l4169:
 13776  001006  90D8               	bcf	status,0,c
 13777  001008  3609               	rlcf	__div_to_l_@quot,f,c
 13778  00100A  360A               	rlcf	__div_to_l_@quot+1,f,c
 13779  00100C  360B               	rlcf	__div_to_l_@quot+2,f,c
 13780  00100E  360C               	rlcf	__div_to_l_@quot+3,f,c
 13781  001010  5005               	movf	__div_to_l_@f2,w,c
 13782  001012  5C01               	subwf	__div_to_l_@f1,w,c
 13783  001014  5006               	movf	__div_to_l_@f2+1,w,c
 13784  001016  5802               	subwfb	__div_to_l_@f1+1,w,c
 13785  001018  5007               	movf	__div_to_l_@f2+2,w,c
 13786  00101A  5803               	subwfb	__div_to_l_@f1+2,w,c
 13787  00101C  5008               	movf	__div_to_l_@f2+3,w,c
 13788  00101E  5804               	subwfb	__div_to_l_@f1+3,w,c
 13789  001020  A0D8               	btfss	status,0,c
 13790  001022  D009               	goto	l4177
 13791  001024  5005               	movf	__div_to_l_@f2,w,c
 13792  001026  5E01               	subwf	__div_to_l_@f1,f,c
 13793  001028  5006               	movf	__div_to_l_@f2+1,w,c
 13794  00102A  5A02               	subwfb	__div_to_l_@f1+1,f,c
 13795  00102C  5007               	movf	__div_to_l_@f2+2,w,c
 13796  00102E  5A03               	subwfb	__div_to_l_@f1+2,f,c
 13797  001030  5008               	movf	__div_to_l_@f2+3,w,c
 13798  001032  5A04               	subwfb	__div_to_l_@f1+3,f,c
 13799  001034  8009               	bsf	__div_to_l_@quot,0,c
 13800  001036                     l4177:
 13801  001036  90D8               	bcf	status,0,c
 13802  001038  3601               	rlcf	__div_to_l_@f1,f,c
 13803  00103A  3602               	rlcf	__div_to_l_@f1+1,f,c
 13804  00103C  3603               	rlcf	__div_to_l_@f1+2,f,c
 13805  00103E  3604               	rlcf	__div_to_l_@f1+3,f,c
 13806  001040  2E0D               	decfsz	__div_to_l_@cntr,f,c
 13807  001042  D7E1               	goto	l4169
 13808  001044  AE0E               	btfss	__div_to_l_@exp1,7,c
 13809  001046  D016               	goto	l4193
 13810  001048  500E               	movf	__div_to_l_@exp1,w,c
 13811  00104A  0A80               	xorlw	128
 13812  00104C  0F9F               	addlw	159
 13813  00104E  B0D8               	btfsc	status,0,c
 13814  001050  D009               	goto	l4189
 13815  001052  0E00               	movlw	0
 13816  001054  6E01               	movwf	?__div_to_l_,c
 13817  001056  0E00               	movlw	0
 13818  001058  6E02               	movwf	?__div_to_l_+1,c
 13819  00105A  0E00               	movlw	0
 13820  00105C  6E03               	movwf	?__div_to_l_+2,c
 13821  00105E  0E00               	movlw	0
 13822  001060  6E04               	movwf	?__div_to_l_+3,c
 13823  001062  0012               	return	
 13824  001064                     l4189:
 13825  001064  90D8               	bcf	status,0,c
 13826  001066  320C               	rrcf	__div_to_l_@quot+3,f,c
 13827  001068  320B               	rrcf	__div_to_l_@quot+2,f,c
 13828  00106A  320A               	rrcf	__div_to_l_@quot+1,f,c
 13829  00106C  3209               	rrcf	__div_to_l_@quot,f,c
 13830  00106E  3E0E               	incfsz	__div_to_l_@exp1,f,c
 13831  001070  D7F9               	goto	l4189
 13832  001072  D015               	goto	l570
 13833  001074                     l4193:
 13834  001074  0E1F               	movlw	31
 13835  001076  640E               	cpfsgt	__div_to_l_@exp1,c
 13836  001078  D00F               	goto	l4201
 13837  00107A  0E00               	movlw	0
 13838  00107C  6E01               	movwf	?__div_to_l_,c
 13839  00107E  0E00               	movlw	0
 13840  001080  6E02               	movwf	?__div_to_l_+1,c
 13841  001082  0E00               	movlw	0
 13842  001084  6E03               	movwf	?__div_to_l_+2,c
 13843  001086  0E00               	movlw	0
 13844  001088  6E04               	movwf	?__div_to_l_+3,c
 13845  00108A  0012               	return	
 13846  00108C                     l4199:
 13847  00108C  90D8               	bcf	status,0,c
 13848  00108E  3609               	rlcf	__div_to_l_@quot,f,c
 13849  001090  360A               	rlcf	__div_to_l_@quot+1,f,c
 13850  001092  360B               	rlcf	__div_to_l_@quot+2,f,c
 13851  001094  360C               	rlcf	__div_to_l_@quot+3,f,c
 13852  001096  060E               	decf	__div_to_l_@exp1,f,c
 13853  001098                     l4201:
 13854  001098  500E               	movf	__div_to_l_@exp1,w,c
 13855  00109A  A4D8               	btfss	status,2,c
 13856  00109C  D7F7               	goto	l4199
 13857  00109E                     l570:
 13858  00109E  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
 13859  0010A2  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 13860  0010A6  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 13861  0010AA  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 13862  0010AE  0012               	return		;funcret
 13863  0010B0                     __end_of__div_to_l_:
 13864                           	opt stack 0
 13865                           tblptru	equ	0xFF8
 13866                           tblptrh	equ	0xFF7
 13867                           tblptrl	equ	0xFF6
 13868                           tablat	equ	0xFF5
 13869                           prodh	equ	0xFF4
 13870                           prodl	equ	0xFF3
 13871                           postinc0	equ	0xFEE
 13872                           wreg	equ	0xFE8
 13873                           indf2	equ	0xFDF
 13874                           postinc2	equ	0xFDE
 13875                           postdec2	equ	0xFDD
 13876                           fsr2h	equ	0xFDA
 13877                           fsr2l	equ	0xFD9
 13878                           status	equ	0xFD8
 13879                           
 13880 ;; *************** function ___llmod *****************
 13881 ;; Defined at:
 13882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;  dividend        4   13[COMRAM] unsigned long 
 13885 ;;  divisor         4   17[COMRAM] unsigned long 
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;  counter         1   21[COMRAM] unsigned char 
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  4   13[COMRAM] unsigned long 
 13890 ;; Registers used:
 13891 ;;		wreg, status,2, status,0
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13897 ;;      Params:         8       0       0       0       0       0       0       0       0
 13898 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13899 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13900 ;;      Totals:         9       0       0       0       0       0       0       0       0
 13901 ;;Total ram usage:        9 bytes
 13902 ;; Hardware stack levels used:    1
 13903 ;; This function calls:
 13904 ;;		Nothing
 13905 ;; This function is called by:
 13906 ;;		_printf
 13907 ;; This function uses a non-reentrant model
 13908 ;;
 13909                           
 13910                           	psect	text15
 13911  000426                     __ptext15:
 13912                           	opt stack 0
 13913  000426                     ___llmod:
 13914                           	opt stack 29
 13915                           
 13916                           ;incstack = 0
 13917  000426  5012               	movf	___llmod@divisor,w,c
 13918  000428  1013               	iorwf	___llmod@divisor+1,w,c
 13919  00042A  1014               	iorwf	___llmod@divisor+2,w,c
 13920  00042C  1015               	iorwf	___llmod@divisor+3,w,c
 13921  00042E  B4D8               	btfsc	status,2,c
 13922  000430  D024               	goto	l784
 13923  000432  0E01               	movlw	1
 13924  000434  6E16               	movwf	___llmod@counter,c
 13925  000436  D006               	goto	l4231
 13926  000438                     l4229:
 13927  000438  90D8               	bcf	status,0,c
 13928  00043A  3612               	rlcf	___llmod@divisor,f,c
 13929  00043C  3613               	rlcf	___llmod@divisor+1,f,c
 13930  00043E  3614               	rlcf	___llmod@divisor+2,f,c
 13931  000440  3615               	rlcf	___llmod@divisor+3,f,c
 13932  000442  2A16               	incf	___llmod@counter,f,c
 13933  000444                     l4231:
 13934  000444  AE15               	btfss	___llmod@divisor+3,7,c
 13935  000446  D7F8               	goto	l4229
 13936  000448                     l4233:
 13937  000448  5012               	movf	___llmod@divisor,w,c
 13938  00044A  5C0E               	subwf	___llmod@dividend,w,c
 13939  00044C  5013               	movf	___llmod@divisor+1,w,c
 13940  00044E  580F               	subwfb	___llmod@dividend+1,w,c
 13941  000450  5014               	movf	___llmod@divisor+2,w,c
 13942  000452  5810               	subwfb	___llmod@dividend+2,w,c
 13943  000454  5015               	movf	___llmod@divisor+3,w,c
 13944  000456  5811               	subwfb	___llmod@dividend+3,w,c
 13945  000458  A0D8               	btfss	status,0,c
 13946  00045A  D008               	goto	l4237
 13947  00045C  5012               	movf	___llmod@divisor,w,c
 13948  00045E  5E0E               	subwf	___llmod@dividend,f,c
 13949  000460  5013               	movf	___llmod@divisor+1,w,c
 13950  000462  5A0F               	subwfb	___llmod@dividend+1,f,c
 13951  000464  5014               	movf	___llmod@divisor+2,w,c
 13952  000466  5A10               	subwfb	___llmod@dividend+2,f,c
 13953  000468  5015               	movf	___llmod@divisor+3,w,c
 13954  00046A  5A11               	subwfb	___llmod@dividend+3,f,c
 13955  00046C                     l4237:
 13956  00046C  90D8               	bcf	status,0,c
 13957  00046E  3215               	rrcf	___llmod@divisor+3,f,c
 13958  000470  3214               	rrcf	___llmod@divisor+2,f,c
 13959  000472  3213               	rrcf	___llmod@divisor+1,f,c
 13960  000474  3212               	rrcf	___llmod@divisor,f,c
 13961  000476  2E16               	decfsz	___llmod@counter,f,c
 13962  000478  D7E7               	goto	l4233
 13963  00047A                     l784:
 13964  00047A  C00E  F00E         	movff	___llmod@dividend,?___llmod
 13965  00047E  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
 13966  000482  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
 13967  000486  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
 13968  00048A  0012               	return		;funcret
 13969  00048C                     __end_of___llmod:
 13970                           	opt stack 0
 13971                           tblptru	equ	0xFF8
 13972                           tblptrh	equ	0xFF7
 13973                           tblptrl	equ	0xFF6
 13974                           tablat	equ	0xFF5
 13975                           prodh	equ	0xFF4
 13976                           prodl	equ	0xFF3
 13977                           postinc0	equ	0xFEE
 13978                           wreg	equ	0xFE8
 13979                           indf2	equ	0xFDF
 13980                           postinc2	equ	0xFDE
 13981                           postdec2	equ	0xFDD
 13982                           fsr2h	equ	0xFDA
 13983                           fsr2l	equ	0xFD9
 13984                           status	equ	0xFD8
 13985                           
 13986 ;; *************** function ___lldiv *****************
 13987 ;; Defined at:
 13988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
 13989 ;; Parameters:    Size  Location     Type
 13990 ;;  dividend        4    0[COMRAM] unsigned long 
 13991 ;;  divisor         4    4[COMRAM] unsigned long 
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;  quotient        4    8[COMRAM] unsigned long 
 13994 ;;  counter         1   12[COMRAM] unsigned char 
 13995 ;; Return value:  Size  Location     Type
 13996 ;;                  4    0[COMRAM] unsigned long 
 13997 ;; Registers used:
 13998 ;;		wreg, status,2, status,0
 13999 ;; Tracked objects:
 14000 ;;		On entry : 0/0
 14001 ;;		On exit  : 0/0
 14002 ;;		Unchanged: 0/0
 14003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14004 ;;      Params:         8       0       0       0       0       0       0       0       0
 14005 ;;      Locals:         5       0       0       0       0       0       0       0       0
 14006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14007 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14008 ;;Total ram usage:       13 bytes
 14009 ;; Hardware stack levels used:    1
 14010 ;; This function calls:
 14011 ;;		Nothing
 14012 ;; This function is called by:
 14013 ;;		_printf
 14014 ;; This function uses a non-reentrant model
 14015 ;;
 14016                           
 14017                           	psect	text16
 14018  0004FC                     __ptext16:
 14019                           	opt stack 0
 14020  0004FC                     ___lldiv:
 14021                           	opt stack 29
 14022                           
 14023                           ;incstack = 0
 14024  0004FC  0E00               	movlw	0
 14025  0004FE  6E09               	movwf	___lldiv@quotient,c
 14026  000500  0E00               	movlw	0
 14027  000502  6E0A               	movwf	___lldiv@quotient+1,c
 14028  000504  0E00               	movlw	0
 14029  000506  6E0B               	movwf	___lldiv@quotient+2,c
 14030  000508  0E00               	movlw	0
 14031  00050A  6E0C               	movwf	___lldiv@quotient+3,c
 14032  00050C  5005               	movf	___lldiv@divisor,w,c
 14033  00050E  1006               	iorwf	___lldiv@divisor+1,w,c
 14034  000510  1007               	iorwf	___lldiv@divisor+2,w,c
 14035  000512  1008               	iorwf	___lldiv@divisor+3,w,c
 14036  000514  B4D8               	btfsc	status,2,c
 14037  000516  D02A               	goto	l774
 14038  000518  0E01               	movlw	1
 14039  00051A  6E0D               	movwf	___lldiv@counter,c
 14040  00051C  D006               	goto	l4211
 14041  00051E                     l4209:
 14042  00051E  90D8               	bcf	status,0,c
 14043  000520  3605               	rlcf	___lldiv@divisor,f,c
 14044  000522  3606               	rlcf	___lldiv@divisor+1,f,c
 14045  000524  3607               	rlcf	___lldiv@divisor+2,f,c
 14046  000526  3608               	rlcf	___lldiv@divisor+3,f,c
 14047  000528  2A0D               	incf	___lldiv@counter,f,c
 14048  00052A                     l4211:
 14049  00052A  AE08               	btfss	___lldiv@divisor+3,7,c
 14050  00052C  D7F8               	goto	l4209
 14051  00052E                     l4213:
 14052  00052E  90D8               	bcf	status,0,c
 14053  000530  3609               	rlcf	___lldiv@quotient,f,c
 14054  000532  360A               	rlcf	___lldiv@quotient+1,f,c
 14055  000534  360B               	rlcf	___lldiv@quotient+2,f,c
 14056  000536  360C               	rlcf	___lldiv@quotient+3,f,c
 14057  000538  5005               	movf	___lldiv@divisor,w,c
 14058  00053A  5C01               	subwf	___lldiv@dividend,w,c
 14059  00053C  5006               	movf	___lldiv@divisor+1,w,c
 14060  00053E  5802               	subwfb	___lldiv@dividend+1,w,c
 14061  000540  5007               	movf	___lldiv@divisor+2,w,c
 14062  000542  5803               	subwfb	___lldiv@dividend+2,w,c
 14063  000544  5008               	movf	___lldiv@divisor+3,w,c
 14064  000546  5804               	subwfb	___lldiv@dividend+3,w,c
 14065  000548  A0D8               	btfss	status,0,c
 14066  00054A  D009               	goto	l4221
 14067  00054C  5005               	movf	___lldiv@divisor,w,c
 14068  00054E  5E01               	subwf	___lldiv@dividend,f,c
 14069  000550  5006               	movf	___lldiv@divisor+1,w,c
 14070  000552  5A02               	subwfb	___lldiv@dividend+1,f,c
 14071  000554  5007               	movf	___lldiv@divisor+2,w,c
 14072  000556  5A03               	subwfb	___lldiv@dividend+2,f,c
 14073  000558  5008               	movf	___lldiv@divisor+3,w,c
 14074  00055A  5A04               	subwfb	___lldiv@dividend+3,f,c
 14075  00055C  8009               	bsf	___lldiv@quotient,0,c
 14076  00055E                     l4221:
 14077  00055E  90D8               	bcf	status,0,c
 14078  000560  3208               	rrcf	___lldiv@divisor+3,f,c
 14079  000562  3207               	rrcf	___lldiv@divisor+2,f,c
 14080  000564  3206               	rrcf	___lldiv@divisor+1,f,c
 14081  000566  3205               	rrcf	___lldiv@divisor,f,c
 14082  000568  2E0D               	decfsz	___lldiv@counter,f,c
 14083  00056A  D7E1               	goto	l4213
 14084  00056C                     l774:
 14085  00056C  C009  F001         	movff	___lldiv@quotient,?___lldiv
 14086  000570  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 14087  000574  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 14088  000578  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 14089  00057C  0012               	return		;funcret
 14090  00057E                     __end_of___lldiv:
 14091                           	opt stack 0
 14092                           tblptru	equ	0xFF8
 14093                           tblptrh	equ	0xFF7
 14094                           tblptrl	equ	0xFF6
 14095                           tablat	equ	0xFF5
 14096                           prodh	equ	0xFF4
 14097                           prodl	equ	0xFF3
 14098                           postinc0	equ	0xFEE
 14099                           wreg	equ	0xFE8
 14100                           indf2	equ	0xFDF
 14101                           postinc2	equ	0xFDE
 14102                           postdec2	equ	0xFDD
 14103                           fsr2h	equ	0xFDA
 14104                           fsr2l	equ	0xFD9
 14105                           status	equ	0xFD8
 14106                           
 14107 ;; *************** function _init_uart *****************
 14108 ;; Defined at:
 14109 ;;		line 30 in file "src/main.c"
 14110 ;; Parameters:    Size  Location     Type
 14111 ;;		None
 14112 ;; Auto vars:     Size  Location     Type
 14113 ;;		None
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  1    wreg      void 
 14116 ;; Registers used:
 14117 ;;		wreg, status,2, cstack
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/0
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14123 ;;      Params:         0       0       0       0       0       0       0       0       0
 14124 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14125 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14126 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14127 ;;Total ram usage:        0 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; Hardware stack levels required when called:    1
 14130 ;; This function calls:
 14131 ;;		_OpenUSART
 14132 ;; This function is called by:
 14133 ;;		_main
 14134 ;; This function uses a non-reentrant model
 14135 ;;
 14136                           
 14137                           	psect	text17
 14138  000292                     __ptext17:
 14139                           	opt stack 0
 14140  000292                     _init_uart:
 14141                           	opt stack 29
 14142                           
 14143                           ;main.c: 31: TXSTAbits.TXEN = 1;
 14144                           
 14145                           ;incstack = 0
 14146  000292  8AAC               	bsf	4012,5,c	;volatile
 14147                           
 14148                           ;main.c: 32: RCSTAbits.SPEN = 1;
 14149  000294  8EAB               	bsf	4011,7,c	;volatile
 14150                           
 14151                           ;main.c: 34: UART1Config = 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
 14152  000296  0E3C               	movlw	60
 14153  000298  6E5F               	movwf	_UART1Config,c
 14154                           
 14155                           ;main.c: 35: baud = 129;
 14156  00029A  0E81               	movlw	129
 14157  00029C  0101               	movlb	1	; () banked
 14158  00029E  6F3F               	movwf	_baud& (0+255),b
 14159                           
 14160                           ; BSR set to: 1
 14161                           ;main.c: 36: OpenUSART(UART1Config,baud);
 14162  0002A0  C13F  F001         	movff	_baud,OpenUSART@spbrg
 14163  0002A4  6A02               	clrf	OpenUSART@spbrg+1,c
 14164  0002A6  505F               	movf	_UART1Config,w,c
 14165  0002A8  ECE3  F001         	call	_OpenUSART
 14166  0002AC  0012               	return		;funcret
 14167  0002AE                     __end_of_init_uart:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           postinc0	equ	0xFEE
 14176                           wreg	equ	0xFE8
 14177                           indf2	equ	0xFDF
 14178                           postinc2	equ	0xFDE
 14179                           postdec2	equ	0xFDD
 14180                           fsr2h	equ	0xFDA
 14181                           fsr2l	equ	0xFD9
 14182                           status	equ	0xFD8
 14183                           
 14184 ;; *************** function _OpenUSART *****************
 14185 ;; Defined at:
 14186 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic18\plib\USART\uopen.c"
 14187 ;; Parameters:    Size  Location     Type
 14188 ;;  config          1    wreg     unsigned char 
 14189 ;;  spbrg           2    0[COMRAM] unsigned int 
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;  config          1    2[COMRAM] unsigned char 
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  1    wreg      void 
 14194 ;; Registers used:
 14195 ;;		wreg, status,2
 14196 ;; Tracked objects:
 14197 ;;		On entry : 0/0
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14201 ;;      Params:         2       0       0       0       0       0       0       0       0
 14202 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14203 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14204 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14205 ;;Total ram usage:        3 bytes
 14206 ;; Hardware stack levels used:    1
 14207 ;; This function calls:
 14208 ;;		Nothing
 14209 ;; This function is called by:
 14210 ;;		_init_uart
 14211 ;; This function uses a non-reentrant model
 14212 ;;
 14213                           
 14214                           	psect	text18
 14215  0003C6                     __ptext18:
 14216                           	opt stack 0
 14217  0003C6                     _OpenUSART:
 14218                           	opt stack 29
 14219                           
 14220                           ;incstack = 0
 14221                           ;OpenUSART@config stored from wreg
 14222  0003C6  6E03               	movwf	OpenUSART@config,c
 14223  0003C8  0E00               	movlw	0
 14224  0003CA  6EAC               	movwf	4012,c	;volatile
 14225  0003CC  0E00               	movlw	0
 14226  0003CE  6EAB               	movwf	4011,c	;volatile
 14227  0003D0  B003               	btfsc	OpenUSART@config,0,c
 14228  0003D2  88AC               	bsf	4012,4,c	;volatile
 14229  0003D4  A203               	btfss	OpenUSART@config,1,c
 14230  0003D6  D002               	goto	l4251
 14231  0003D8  8CAC               	bsf	4012,6,c	;volatile
 14232  0003DA  8CAB               	bsf	4011,6,c	;volatile
 14233  0003DC                     l4251:
 14234  0003DC  B403               	btfsc	OpenUSART@config,2,c
 14235  0003DE  8EAC               	bsf	4012,7,c	;volatile
 14236  0003E0  A603               	btfss	OpenUSART@config,3,c
 14237  0003E2  D002               	goto	l332
 14238  0003E4  88AB               	bsf	4011,4,c	;volatile
 14239  0003E6  D001               	goto	l4259
 14240  0003E8                     l332:
 14241  0003E8  8AAB               	bsf	4011,5,c	;volatile
 14242  0003EA                     l4259:
 14243  0003EA  B803               	btfsc	OpenUSART@config,4,c
 14244  0003EC  84AC               	bsf	4012,2,c	;volatile
 14245  0003EE  989E               	bcf	3998,4,c	;volatile
 14246  0003F0  BA03               	btfsc	OpenUSART@config,5,c
 14247  0003F2  86AB               	bsf	4011,3,c	;volatile
 14248  0003F4  AC03               	btfss	OpenUSART@config,6,c
 14249  0003F6  D002               	goto	l336
 14250  0003F8  8A9D               	bsf	3997,5,c	;volatile
 14251  0003FA  D001               	goto	l337
 14252  0003FC                     l336:
 14253  0003FC  9A9D               	bcf	3997,5,c	;volatile
 14254  0003FE                     l337:
 14255  0003FE  9A9E               	bcf	3998,5,c	;volatile
 14256  000400  AE03               	btfss	OpenUSART@config,7,c
 14257  000402  D002               	goto	l338
 14258  000404  889D               	bsf	3997,4,c	;volatile
 14259  000406  D001               	goto	l339
 14260  000408                     l338:
 14261  000408  989D               	bcf	3997,4,c	;volatile
 14262  00040A                     l339:
 14263  00040A  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 14264  00040E  5002               	movf	OpenUSART@spbrg+1,w,c
 14265  000410  6EB0               	movwf	4016,c	;volatile
 14266  000412  8AAC               	bsf	4012,5,c	;volatile
 14267  000414  8EAB               	bsf	4011,7,c	;volatile
 14268  000416  9C94               	bcf	3988,6,c	;volatile
 14269  000418  8E94               	bsf	3988,7,c	;volatile
 14270  00041A  A8AC               	btfss	4012,4,c	;volatile
 14271  00041C  0012               	return	
 14272  00041E  BEAC               	btfsc	4012,7,c	;volatile
 14273  000420  0012               	return	
 14274  000422  8C94               	bsf	3988,6,c	;volatile
 14275  000424  0012               	return	
 14276  000426                     __end_of_OpenUSART:
 14277                           	opt stack 0
 14278                           tblptru	equ	0xFF8
 14279                           tblptrh	equ	0xFF7
 14280                           tblptrl	equ	0xFF6
 14281                           tablat	equ	0xFF5
 14282                           prodh	equ	0xFF4
 14283                           prodl	equ	0xFF3
 14284                           postinc0	equ	0xFEE
 14285                           wreg	equ	0xFE8
 14286                           indf2	equ	0xFDF
 14287                           postinc2	equ	0xFDE
 14288                           postdec2	equ	0xFDD
 14289                           fsr2h	equ	0xFDA
 14290                           fsr2l	equ	0xFD9
 14291                           status	equ	0xFD8
 14292                           
 14293 ;; *************** function _calculateMetrics *****************
 14294 ;; Defined at:
 14295 ;;		line 110 in file "src/prediction.c"
 14296 ;; Parameters:    Size  Location     Type
 14297 ;;		None
 14298 ;; Auto vars:     Size  Location     Type
 14299 ;;  i               2    8[BANK1 ] int 
 14300 ;;  j               2    6[BANK1 ] int 
 14301 ;;  prediction      2    0[BANK1 ] int 
 14302 ;; Return value:  Size  Location     Type
 14303 ;;                  2   14[None  ] int 
 14304 ;; Registers used:
 14305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14306 ;; Tracked objects:
 14307 ;;		On entry : 0/0
 14308 ;;		On exit  : 0/0
 14309 ;;		Unchanged: 0/0
 14310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14311 ;;      Params:         0       0       0       0       0       0       0       0       0
 14312 ;;      Locals:         0       0      10       0       0       0       0       0       0
 14313 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14314 ;;      Totals:         0       2      10       0       0       0       0       0       0
 14315 ;;Total ram usage:       12 bytes
 14316 ;; Hardware stack levels used:    1
 14317 ;; Hardware stack levels required when called:    7
 14318 ;; This function calls:
 14319 ;;		___fltol
 14320 ;;		___wmul
 14321 ;;		_predict
 14322 ;; This function is called by:
 14323 ;;		_main
 14324 ;; This function uses a non-reentrant model
 14325 ;;
 14326                           
 14327                           	psect	text19
 14328  001758                     __ptext19:
 14329                           	opt stack 0
 14330  001758                     _calculateMetrics:
 14331                           	opt stack 23
 14332                           
 14333                           ;prediction.c: 113: int i,j;
 14334                           ;prediction.c: 115: for(i = 0; i<10; i++)
 14335                           
 14336                           ;incstack = 0
 14337  001758  0E00               	movlw	0
 14338  00175A  0101               	movlb	1	; () banked
 14339  00175C  6F09               	movwf	(calculateMetrics@i+1)& (0+255),b
 14340  00175E  0E00               	movlw	0
 14341  001760  6F08               	movwf	calculateMetrics@i& (0+255),b
 14342  001762                     l4643:
 14343                           
 14344                           ; BSR set to: 1
 14345  001762  0101               	movlb	1	; () banked
 14346  001764  BF09               	btfsc	(calculateMetrics@i+1)& (0+255),7,b
 14347  001766  D008               	goto	l4647
 14348  001768  0101               	movlb	1	; () banked
 14349  00176A  5109               	movf	(calculateMetrics@i+1)& (0+255),w,b
 14350  00176C  E144               	bnz	l4663
 14351  00176E  0E0A               	movlw	10
 14352  001770  0101               	movlb	1	; () banked
 14353  001772  5D08               	subwf	calculateMetrics@i& (0+255),w,b
 14354  001774  B0D8               	btfsc	status,0,c
 14355  001776  D03F               	goto	l4663
 14356  001778                     l4647:
 14357                           
 14358                           ; BSR set to: 1
 14359                           ;prediction.c: 116: {
 14360                           ;prediction.c: 117: for(j = 0; j<10; j++)
 14361  001778  0E00               	movlw	0
 14362  00177A  0101               	movlb	1	; () banked
 14363  00177C  6F07               	movwf	(calculateMetrics@j+1)& (0+255),b
 14364  00177E  0E00               	movlw	0
 14365  001780  6F06               	movwf	calculateMetrics@j& (0+255),b
 14366  001782                     l4649:
 14367                           
 14368                           ; BSR set to: 1
 14369  001782  0101               	movlb	1	; () banked
 14370  001784  BF07               	btfsc	(calculateMetrics@j+1)& (0+255),7,b
 14371  001786  D008               	goto	l4653
 14372  001788  0101               	movlb	1	; () banked
 14373  00178A  5107               	movf	(calculateMetrics@j+1)& (0+255),w,b
 14374  00178C  E130               	bnz	l4659
 14375  00178E  0E0A               	movlw	10
 14376  001790  0101               	movlb	1	; () banked
 14377  001792  5D06               	subwf	calculateMetrics@j& (0+255),w,b
 14378  001794  B0D8               	btfsc	status,0,c
 14379  001796  D02B               	goto	l4659
 14380  001798                     l4653:
 14381                           
 14382                           ; BSR set to: 1
 14383                           ;prediction.c: 118: confusionMatrix[i][j] = 0;
 14384  001798  C108  F001         	movff	calculateMetrics@i,___wmul@multiplier
 14385  00179C  C109  F002         	movff	calculateMetrics@i+1,___wmul@multiplier+1
 14386  0017A0  0E00               	movlw	0
 14387  0017A2  6E04               	movwf	___wmul@multiplicand+1,c
 14388  0017A4  0E14               	movlw	20
 14389  0017A6  6E03               	movwf	___wmul@multiplicand,c
 14390  0017A8  EC74  F001         	call	___wmul	;wreg free
 14391  0017AC  0E00               	movlw	low _confusionMatrix
 14392  0017AE  0100               	movlb	0	; () banked
 14393  0017B0  6FFA               	movwf	??_calculateMetrics& (0+255),b
 14394  0017B2  0E02               	movlw	high _confusionMatrix
 14395  0017B4  0100               	movlb	0	; () banked
 14396  0017B6  6FFB               	movwf	(??_calculateMetrics+1)& (0+255),b
 14397  0017B8  5001               	movf	?___wmul,w,c
 14398  0017BA  0100               	movlb	0	; () banked
 14399  0017BC  27FA               	addwf	??_calculateMetrics& (0+255),f,b
 14400  0017BE  5002               	movf	?___wmul+1,w,c
 14401  0017C0  0100               	movlb	0	; () banked
 14402  0017C2  23FB               	addwfc	(??_calculateMetrics+1)& (0+255),f,b
 14403  0017C4  90D8               	bcf	status,0,c
 14404  0017C6  0101               	movlb	1	; () banked
 14405  0017C8  3506               	rlcf	calculateMetrics@j& (0+255),w,b
 14406  0017CA  6ED9               	movwf	fsr2l,c
 14407  0017CC  0101               	movlb	1	; () banked
 14408  0017CE  3507               	rlcf	(calculateMetrics@j+1)& (0+255),w,b
 14409  0017D0  6EDA               	movwf	fsr2h,c
 14410  0017D2  0100               	movlb	0	; () banked
 14411  0017D4  51FA               	movf	??_calculateMetrics& (0+255),w,b
 14412  0017D6  26D9               	addwf	fsr2l,f,c
 14413  0017D8  0100               	movlb	0	; () banked
 14414  0017DA  51FB               	movf	(??_calculateMetrics+1)& (0+255),w,b
 14415  0017DC  22DA               	addwfc	fsr2h,f,c
 14416  0017DE  0E00               	movlw	0
 14417  0017E0  6EDE               	movwf	postinc2,c
 14418  0017E2  0E00               	movlw	0
 14419  0017E4  6EDD               	movwf	postdec2,c
 14420                           
 14421                           ; BSR set to: 0
 14422  0017E6  0101               	movlb	1	; () banked
 14423  0017E8  4B06               	infsnz	calculateMetrics@j& (0+255),f,b
 14424  0017EA  2B07               	incf	(calculateMetrics@j+1)& (0+255),f,b
 14425  0017EC  D7CA               	goto	l4649
 14426  0017EE                     l4659:
 14427                           
 14428                           ; BSR set to: 1
 14429  0017EE  0101               	movlb	1	; () banked
 14430  0017F0  4B08               	infsnz	calculateMetrics@i& (0+255),f,b
 14431  0017F2  2B09               	incf	(calculateMetrics@i+1)& (0+255),f,b
 14432  0017F4  D7B6               	goto	l4643
 14433  0017F6                     l4663:
 14434                           
 14435                           ; BSR set to: 1
 14436                           ;prediction.c: 119: }
 14437                           ;prediction.c: 122: int prediction;
 14438                           ;prediction.c: 124: for(i = 0; i < 30; i++) {
 14439  0017F6  0E00               	movlw	0
 14440  0017F8  0101               	movlb	1	; () banked
 14441  0017FA  6F09               	movwf	(calculateMetrics@i+1)& (0+255),b
 14442  0017FC  0E00               	movlw	0
 14443  0017FE  6F08               	movwf	calculateMetrics@i& (0+255),b
 14444                           
 14445                           ; BSR set to: 1
 14446  001800  0101               	movlb	1	; () banked
 14447  001802  BF09               	btfsc	(calculateMetrics@i+1)& (0+255),7,b
 14448  001804  D00A               	goto	l4669
 14449  001806  0101               	movlb	1	; () banked
 14450  001808  5109               	movf	(calculateMetrics@i+1)& (0+255),w,b
 14451  00180A  E106               	bnz	u5620
 14452  00180C  0E1E               	movlw	30
 14453  00180E  0101               	movlb	1	; () banked
 14454  001810  5D08               	subwf	calculateMetrics@i& (0+255),w,b
 14455  001812  B0D8               	btfsc	status,0,c
 14456  001814  0012               	return	
 14457  001816  D001               	goto	l4669
 14458  001818                     u5620:
 14459                           
 14460                           ; BSR set to: 1
 14461  001818  0012               	return	
 14462  00181A                     l4669:
 14463                           
 14464                           ; BSR set to: 1
 14465                           ;prediction.c: 125: prediction = predict(testSet[i]);
 14466  00181A  C108  F001         	movff	calculateMetrics@i,___wmul@multiplier
 14467  00181E  C109  F002         	movff	calculateMetrics@i+1,___wmul@multiplier+1
 14468  001822  0E01               	movlw	1
 14469  001824  6E04               	movwf	___wmul@multiplicand+1,c
 14470  001826  0E30               	movlw	48
 14471  001828  6E03               	movwf	___wmul@multiplicand,c
 14472  00182A  EC74  F001         	call	___wmul	;wreg free
 14473  00182E  0ED7               	movlw	low _testSet
 14474  001830  2401               	addwf	?___wmul,w,c
 14475  001832  0101               	movlb	1	; () banked
 14476  001834  6F02               	movwf	_calculateMetrics$1382& (0+255),b
 14477  001836  0E59               	movlw	high _testSet
 14478  001838  2002               	addwfc	?___wmul+1,w,c
 14479  00183A  0101               	movlb	1	; () banked
 14480  00183C  6F03               	movwf	(_calculateMetrics$1382+1)& (0+255),b
 14481                           
 14482                           ; BSR set to: 1
 14483                           ;prediction.c: 125: prediction = predict(testSet[i]);
 14484  00183E  C102  F0EC         	movff	_calculateMetrics$1382,predict@inputVector
 14485  001842  C103  F0ED         	movff	_calculateMetrics$1382+1,predict@inputVector+1
 14486  001846  EC4E  F003         	call	_predict	;wreg free
 14487  00184A  C0EC  F100         	movff	?_predict,calculateMetrics@prediction
 14488  00184E  C0ED  F101         	movff	?_predict+1,calculateMetrics@prediction+1
 14489                           
 14490                           ;prediction.c: 126: confusionMatrix[(int)testSet[i][77-1]][prediction]++;
 14491  001852  0E30               	movlw	48
 14492  001854  0100               	movlb	0	; () banked
 14493  001856  6FFA               	movwf	??_calculateMetrics& (0+255),b
 14494  001858  0E01               	movlw	1
 14495  00185A  0100               	movlb	0	; () banked
 14496  00185C  6FFB               	movwf	(??_calculateMetrics+1)& (0+255),b
 14497  00185E  C108  F001         	movff	calculateMetrics@i,___wmul@multiplier
 14498  001862  C109  F002         	movff	calculateMetrics@i+1,___wmul@multiplier+1
 14499  001866  0E01               	movlw	1
 14500  001868  6E04               	movwf	___wmul@multiplicand+1,c
 14501  00186A  0E30               	movlw	48
 14502  00186C  6E03               	movwf	___wmul@multiplicand,c
 14503  00186E  EC74  F001         	call	___wmul	;wreg free
 14504  001872  0100               	movlb	0	; () banked
 14505  001874  51FA               	movf	??_calculateMetrics& (0+255),w,b
 14506  001876  2601               	addwf	?___wmul,f,c
 14507  001878  0100               	movlb	0	; () banked
 14508  00187A  51FB               	movf	(??_calculateMetrics+1)& (0+255),w,b
 14509  00187C  2202               	addwfc	?___wmul+1,f,c
 14510  00187E  0ED7               	movlw	low _testSet
 14511  001880  2401               	addwf	?___wmul,w,c
 14512  001882  6EF6               	movwf	tblptrl,c
 14513  001884  0E59               	movlw	high _testSet
 14514  001886  2002               	addwfc	?___wmul+1,w,c
 14515  001888  6EF7               	movwf	tblptrh,c
 14516  00188A                     	if	0	;There are less than 3 active tblptr bytes
 14517  00188A                     	endif
 14518  00188A  0009               	tblrd		*+
 14519  00188C  CFF5 F059          	movff	tablat,___fltol@f1
 14520  001890  0009               	tblrd		*+
 14521  001892  CFF5 F05A          	movff	tablat,___fltol@f1+1
 14522  001896  0009               	tblrd		*+
 14523  001898  CFF5 F05B          	movff	tablat,___fltol@f1+2
 14524  00189C  000A               	tblrd		*-
 14525  00189E  CFF5 F05C          	movff	tablat,___fltol@f1+3
 14526  0018A2  ECB2  F003         	call	___fltol	;wreg free
 14527  0018A6  C059  F104         	movff	?___fltol,_calculateMetrics$1383
 14528  0018AA  C05A  F105         	movff	?___fltol+1,_calculateMetrics$1383+1
 14529                           
 14530                           ;prediction.c: 126: confusionMatrix[(int)testSet[i][77-1]][prediction]++;
 14531  0018AE  C104  F001         	movff	_calculateMetrics$1383,___wmul@multiplier
 14532  0018B2  C105  F002         	movff	_calculateMetrics$1383+1,___wmul@multiplier+1
 14533  0018B6  0E00               	movlw	0
 14534  0018B8  6E04               	movwf	___wmul@multiplicand+1,c
 14535  0018BA  0E14               	movlw	20
 14536  0018BC  6E03               	movwf	___wmul@multiplicand,c
 14537  0018BE  EC74  F001         	call	___wmul	;wreg free
 14538  0018C2  0E00               	movlw	low _confusionMatrix
 14539  0018C4  0100               	movlb	0	; () banked
 14540  0018C6  6FFA               	movwf	??_calculateMetrics& (0+255),b
 14541  0018C8  0E02               	movlw	high _confusionMatrix
 14542  0018CA  0100               	movlb	0	; () banked
 14543  0018CC  6FFB               	movwf	(??_calculateMetrics+1)& (0+255),b
 14544  0018CE  5001               	movf	?___wmul,w,c
 14545  0018D0  0100               	movlb	0	; () banked
 14546  0018D2  27FA               	addwf	??_calculateMetrics& (0+255),f,b
 14547  0018D4  5002               	movf	?___wmul+1,w,c
 14548  0018D6  0100               	movlb	0	; () banked
 14549  0018D8  23FB               	addwfc	(??_calculateMetrics+1)& (0+255),f,b
 14550  0018DA  90D8               	bcf	status,0,c
 14551  0018DC  0101               	movlb	1	; () banked
 14552  0018DE  3500               	rlcf	calculateMetrics@prediction& (0+255),w,b
 14553  0018E0  6ED9               	movwf	fsr2l,c
 14554  0018E2  0101               	movlb	1	; () banked
 14555  0018E4  3501               	rlcf	(calculateMetrics@prediction+1)& (0+255),w,b
 14556  0018E6  6EDA               	movwf	fsr2h,c
 14557  0018E8  0100               	movlb	0	; () banked
 14558  0018EA  51FA               	movf	??_calculateMetrics& (0+255),w,b
 14559  0018EC  26D9               	addwf	fsr2l,f,c
 14560  0018EE  0100               	movlb	0	; () banked
 14561  0018F0  51FB               	movf	(??_calculateMetrics+1)& (0+255),w,b
 14562  0018F2  22DA               	addwfc	fsr2h,f,c
 14563  0018F4  2ADE               	incf	postinc2,f,c
 14564  0018F6  0E00               	movlw	0
 14565  0018F8  22DD               	addwfc	postdec2,f,c
 14566                           
 14567                           ; BSR set to: 0
 14568  0018FA  0101               	movlb	1	; () banked
 14569  0018FC  4B08               	infsnz	calculateMetrics@i& (0+255),f,b
 14570  0018FE  2B09               	incf	(calculateMetrics@i+1)& (0+255),f,b
 14571                           
 14572                           ; BSR set to: 1
 14573  001900  0101               	movlb	1	; () banked
 14574  001902  BF09               	btfsc	(calculateMetrics@i+1)& (0+255),7,b
 14575  001904  D78A               	goto	l4669
 14576  001906  0101               	movlb	1	; () banked
 14577  001908  5109               	movf	(calculateMetrics@i+1)& (0+255),w,b
 14578  00190A  E101               	bnz	l90
 14579  00190C  D77F               	goto	L6
 14580  00190E                     l90:
 14581                           
 14582                           ; BSR set to: 1
 14583  00190E  0012               	return		;funcret
 14584  001910                     __end_of_calculateMetrics:
 14585                           	opt stack 0
 14586                           tblptru	equ	0xFF8
 14587                           tblptrh	equ	0xFF7
 14588                           tblptrl	equ	0xFF6
 14589                           tablat	equ	0xFF5
 14590                           prodh	equ	0xFF4
 14591                           prodl	equ	0xFF3
 14592                           postinc0	equ	0xFEE
 14593                           wreg	equ	0xFE8
 14594                           indf2	equ	0xFDF
 14595                           postinc2	equ	0xFDE
 14596                           postdec2	equ	0xFDD
 14597                           fsr2h	equ	0xFDA
 14598                           fsr2l	equ	0xFD9
 14599                           status	equ	0xFD8
 14600                           
 14601 ;; *************** function _predict *****************
 14602 ;; Defined at:
 14603 ;;		line 74 in file "src/prediction.c"
 14604 ;; Parameters:    Size  Location     Type
 14605 ;;  inputVector     2  140[BANK0 ] PTR float 
 14606 ;;		 -> testSet(9120), 
 14607 ;; Auto vars:     Size  Location     Type
 14608 ;;  classProb       4  146[BANK0 ] float 
 14609 ;;  bestProb        4  142[BANK0 ] float 
 14610 ;;  i               2  152[BANK0 ] int 
 14611 ;;  bestLabel       2  150[BANK0 ] int 
 14612 ;; Return value:  Size  Location     Type
 14613 ;;                  2  140[BANK0 ] int 
 14614 ;; Registers used:
 14615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14616 ;; Tracked objects:
 14617 ;;		On entry : 0/0
 14618 ;;		On exit  : 0/0
 14619 ;;		Unchanged: 0/0
 14620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14621 ;;      Params:         0       2       0       0       0       0       0       0       0
 14622 ;;      Locals:         0      12       0       0       0       0       0       0       0
 14623 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14624 ;;      Totals:         0      14       0       0       0       0       0       0       0
 14625 ;;Total ram usage:       14 bytes
 14626 ;; Hardware stack levels used:    1
 14627 ;; Hardware stack levels required when called:    6
 14628 ;; This function calls:
 14629 ;;		___flge
 14630 ;;		_calculateClassProbability
 14631 ;; This function is called by:
 14632 ;;		_calculateMetrics
 14633 ;;		_getAccuracy
 14634 ;;		_showOff
 14635 ;; This function uses a non-reentrant model
 14636 ;;
 14637                           
 14638                           	psect	text20
 14639  00069C                     __ptext20:
 14640                           	opt stack 0
 14641  00069C                     _predict:
 14642                           	opt stack 22
 14643                           
 14644                           ;prediction.c: 76: int i;
 14645                           ;prediction.c: 79: float classProb;
 14646                           ;prediction.c: 82: float bestProb = -1;
 14647                           
 14648                           ; BSR set to: 1
 14649                           ;incstack = 0
 14650  00069C  0E00               	movlw	0
 14651  00069E  0100               	movlb	0	; () banked
 14652  0006A0  6FEE               	movwf	predict@bestProb& (0+255),b
 14653  0006A2  0E00               	movlw	0
 14654  0006A4  6FEF               	movwf	(predict@bestProb+1)& (0+255),b
 14655  0006A6  0E80               	movlw	128
 14656  0006A8  6FF0               	movwf	(predict@bestProb+2)& (0+255),b
 14657  0006AA  0EBF               	movlw	191
 14658  0006AC  6FF1               	movwf	(predict@bestProb+3)& (0+255),b
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;prediction.c: 85: int bestLabel = -1;
 14662  0006AE  0100               	movlb	0	; () banked
 14663  0006B0  69F6               	setf	predict@bestLabel& (0+255),b
 14664  0006B2  69F7               	setf	(predict@bestLabel+1)& (0+255),b
 14665                           
 14666                           ;prediction.c: 87: for(i = 0; i < 10; i++) {
 14667  0006B4  0E00               	movlw	0
 14668  0006B6  0100               	movlb	0	; () banked
 14669  0006B8  6FF9               	movwf	(predict@i+1)& (0+255),b
 14670  0006BA  0E00               	movlw	0
 14671  0006BC  6FF8               	movwf	predict@i& (0+255),b
 14672                           
 14673                           ; BSR set to: 0
 14674  0006BE  0100               	movlb	0	; () banked
 14675  0006C0  BFF9               	btfsc	(predict@i+1)& (0+255),7,b
 14676  0006C2  D008               	goto	l4005
 14677  0006C4  0100               	movlb	0	; () banked
 14678  0006C6  51F9               	movf	(predict@i+1)& (0+255),w,b
 14679  0006C8  E148               	bnz	l77
 14680  0006CA  0E0A               	movlw	10
 14681  0006CC  0100               	movlb	0	; () banked
 14682  0006CE  5DF8               	subwf	predict@i& (0+255),w,b
 14683  0006D0  B0D8               	btfsc	status,0,c
 14684  0006D2  D043               	goto	l77
 14685  0006D4                     l4005:
 14686                           
 14687                           ; BSR set to: 0
 14688                           ;prediction.c: 88: classProb = calculateClassProbability(i, inputVector);
 14689  0006D4  C0F8  F0D2         	movff	predict@i,calculateClassProbability@classNumber
 14690  0006D8  C0F9  F0D3         	movff	predict@i+1,calculateClassProbability@classNumber+1
 14691  0006DC  C0EC  F0D4         	movff	predict@inputVector,calculateClassProbability@inputVector
 14692  0006E0  C0ED  F0D5         	movff	predict@inputVector+1,calculateClassProbability@inputVector+1
 14693  0006E4  EC88  F00C         	call	_calculateClassProbability	;wreg free
 14694  0006E8  C0D2  F0F2         	movff	?_calculateClassProbability,predict@classProb
 14695  0006EC  C0D3  F0F3         	movff	?_calculateClassProbability+1,predict@classProb+1
 14696  0006F0  C0D4  F0F4         	movff	?_calculateClassProbability+2,predict@classProb+2
 14697  0006F4  C0D5  F0F5         	movff	?_calculateClassProbability+3,predict@classProb+3
 14698                           
 14699                           ;prediction.c: 90: if((bestLabel==-1) || (classProb > bestProb)) {
 14700  0006F8  0100               	movlb	0	; () banked
 14701  0006FA  29F6               	incf	predict@bestLabel& (0+255),w,b
 14702  0006FC  E104               	bnz	u4530
 14703  0006FE  0100               	movlb	0	; () banked
 14704  000700  29F7               	incf	(predict@bestLabel+1)& (0+255),w,b
 14705  000702  B4D8               	btfsc	status,2,c
 14706  000704  D014               	goto	l80
 14707  000706                     u4530:
 14708                           
 14709                           ; BSR set to: 0
 14710  000706  C0EE  F001         	movff	predict@bestProb,___flge@ff1
 14711  00070A  C0EF  F002         	movff	predict@bestProb+1,___flge@ff1+1
 14712  00070E  C0F0  F003         	movff	predict@bestProb+2,___flge@ff1+2
 14713  000712  C0F1  F004         	movff	predict@bestProb+3,___flge@ff1+3
 14714  000716  C0F2  F005         	movff	predict@classProb,___flge@ff2
 14715  00071A  C0F3  F006         	movff	predict@classProb+1,___flge@ff2+1
 14716  00071E  C0F4  F007         	movff	predict@classProb+2,___flge@ff2+2
 14717  000722  C0F5  F008         	movff	predict@classProb+3,___flge@ff2+3
 14718  000726  EC34  F007         	call	___flge	;wreg free
 14719  00072A  B0D8               	btfsc	status,0,c
 14720  00072C  D00C               	goto	l4011
 14721  00072E                     l80:
 14722                           
 14723                           ;prediction.c: 91: bestProb = classProb;
 14724  00072E  C0F2  F0EE         	movff	predict@classProb,predict@bestProb
 14725  000732  C0F3  F0EF         	movff	predict@classProb+1,predict@bestProb+1
 14726  000736  C0F4  F0F0         	movff	predict@classProb+2,predict@bestProb+2
 14727  00073A  C0F5  F0F1         	movff	predict@classProb+3,predict@bestProb+3
 14728                           
 14729                           ;prediction.c: 92: bestLabel = i;
 14730  00073E  C0F8  F0F6         	movff	predict@i,predict@bestLabel
 14731  000742  C0F9  F0F7         	movff	predict@i+1,predict@bestLabel+1
 14732  000746                     l4011:
 14733  000746  0100               	movlb	0	; () banked
 14734  000748  4BF8               	infsnz	predict@i& (0+255),f,b
 14735  00074A  2BF9               	incf	(predict@i+1)& (0+255),f,b
 14736                           
 14737                           ; BSR set to: 0
 14738  00074C  0100               	movlb	0	; () banked
 14739  00074E  BFF9               	btfsc	(predict@i+1)& (0+255),7,b
 14740  000750  D7C1               	goto	l4005
 14741  000752  0100               	movlb	0	; () banked
 14742  000754  51F9               	movf	(predict@i+1)& (0+255),w,b
 14743  000756  E101               	bnz	u4550
 14744  000758  D7B8               	goto	L7
 14745  00075A                     u4550:
 14746  00075A                     l77:
 14747                           
 14748                           ; BSR set to: 0
 14749                           ;prediction.c: 93: }
 14750                           ;prediction.c: 94: }
 14751                           ;prediction.c: 96: return bestLabel;
 14752  00075A  C0F6  F0EC         	movff	predict@bestLabel,?_predict
 14753  00075E  C0F7  F0ED         	movff	predict@bestLabel+1,?_predict+1
 14754                           
 14755                           ; BSR set to: 0
 14756  000762  0012               	return		;funcret
 14757  000764                     __end_of_predict:
 14758                           	opt stack 0
 14759                           tblptru	equ	0xFF8
 14760                           tblptrh	equ	0xFF7
 14761                           tblptrl	equ	0xFF6
 14762                           tablat	equ	0xFF5
 14763                           prodh	equ	0xFF4
 14764                           prodl	equ	0xFF3
 14765                           postinc0	equ	0xFEE
 14766                           wreg	equ	0xFE8
 14767                           indf2	equ	0xFDF
 14768                           postinc2	equ	0xFDE
 14769                           postdec2	equ	0xFDD
 14770                           fsr2h	equ	0xFDA
 14771                           fsr2l	equ	0xFD9
 14772                           status	equ	0xFD8
 14773                           
 14774 ;; *************** function _calculateClassProbability *****************
 14775 ;; Defined at:
 14776 ;;		line 47 in file "src/prediction.c"
 14777 ;; Parameters:    Size  Location     Type
 14778 ;;  classNumber     2  114[BANK0 ] int 
 14779 ;;  inputVector     2  116[BANK0 ] PTR float 
 14780 ;;		 -> testSet(9120), 
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;  classProbabi    4  134[BANK0 ] float 
 14783 ;;  i               2  138[BANK0 ] int 
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  4  114[BANK0 ] float 
 14786 ;; Registers used:
 14787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14793 ;;      Params:         0       4       0       0       0       0       0       0       0
 14794 ;;      Locals:         0      10       0       0       0       0       0       0       0
 14795 ;;      Temps:          0      12       0       0       0       0       0       0       0
 14796 ;;      Totals:         0      26       0       0       0       0       0       0       0
 14797 ;;Total ram usage:       26 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:    5
 14800 ;; This function calls:
 14801 ;;		___fladd
 14802 ;;		___wmul
 14803 ;;		_calculateProbability
 14804 ;; This function is called by:
 14805 ;;		_predict
 14806 ;; This function uses a non-reentrant model
 14807 ;;
 14808                           
 14809                           	psect	text21
 14810  001910                     __ptext21:
 14811                           	opt stack 0
 14812  001910                     _calculateClassProbability:
 14813                           	opt stack 22
 14814                           
 14815                           ;prediction.c: 49: int i;
 14816                           ;prediction.c: 50: float classProbability = 0;
 14817                           
 14818                           ; BSR set to: 0
 14819                           ;incstack = 0
 14820  001910  0E00               	movlw	0
 14821  001912  0100               	movlb	0	; () banked
 14822  001914  6FE6               	movwf	calculateClassProbability@classProbability& (0+255),b
 14823  001916  0E00               	movlw	0
 14824  001918  6FE7               	movwf	(calculateClassProbability@classProbability+1)& (0+255),b
 14825  00191A  0E00               	movlw	0
 14826  00191C  6FE8               	movwf	(calculateClassProbability@classProbability+2)& (0+255),b
 14827  00191E  0E00               	movlw	0
 14828  001920  6FE9               	movwf	(calculateClassProbability@classProbability+3)& (0+255),b
 14829                           
 14830                           ;prediction.c: 52: for(i = 0; i<77-1; i++)
 14831  001922  0E00               	movlw	0
 14832  001924  0100               	movlb	0	; () banked
 14833  001926  6FEB               	movwf	(calculateClassProbability@i+1)& (0+255),b
 14834  001928  0E00               	movlw	0
 14835  00192A  6FEA               	movwf	calculateClassProbability@i& (0+255),b
 14836                           
 14837                           ; BSR set to: 0
 14838  00192C  0100               	movlb	0	; () banked
 14839  00192E  BFEB               	btfsc	(calculateClassProbability@i+1)& (0+255),7,b
 14840  001930  D00A               	goto	l3905
 14841  001932  0100               	movlb	0	; () banked
 14842  001934  51EB               	movf	(calculateClassProbability@i+1)& (0+255),w,b
 14843  001936  E106               	bnz	u4370
 14844  001938  0E4C               	movlw	76
 14845  00193A  0100               	movlb	0	; () banked
 14846  00193C  5DEA               	subwf	calculateClassProbability@i& (0+255),w,b
 14847  00193E  B0D8               	btfsc	status,0,c
 14848  001940  D0CC               	goto	l72
 14849  001942  D001               	goto	l3905
 14850  001944                     u4370:
 14851                           
 14852                           ; BSR set to: 0
 14853  001944  D0CA               	goto	l72
 14854  001946                     l3905:
 14855                           
 14856                           ; BSR set to: 0
 14857                           ;prediction.c: 53: {
 14858                           ;prediction.c: 55: classProbability+=calculateProbability(inputVector[i], means[classNum
      +                          ber][i], stdevs[classNumber][i] );
 14859  001946  C0EA  F0D6         	movff	calculateClassProbability@i,??_calculateClassProbability
 14860  00194A  C0EB  F0D7         	movff	calculateClassProbability@i+1,??_calculateClassProbability+1
 14861  00194E  0100               	movlb	0	; () banked
 14862  001950  90D8               	bcf	status,0,c
 14863  001952  37D6               	rlcf	??_calculateClassProbability& (0+255),f,b
 14864  001954  37D7               	rlcf	(??_calculateClassProbability+1)& (0+255),f,b
 14865  001956  0100               	movlb	0	; () banked
 14866  001958  90D8               	bcf	status,0,c
 14867  00195A  37D6               	rlcf	??_calculateClassProbability& (0+255),f,b
 14868  00195C  37D7               	rlcf	(??_calculateClassProbability+1)& (0+255),f,b
 14869  00195E  C0D2  F001         	movff	calculateClassProbability@classNumber,___wmul@multiplier
 14870  001962  C0D3  F002         	movff	calculateClassProbability@classNumber+1,___wmul@multiplier+1
 14871  001966  0E01               	movlw	1
 14872  001968  6E04               	movwf	___wmul@multiplicand+1,c
 14873  00196A  0E30               	movlw	48
 14874  00196C  6E03               	movwf	___wmul@multiplicand,c
 14875  00196E  EC74  F001         	call	___wmul	;wreg free
 14876  001972  0E67               	movlw	low _stdevs
 14877  001974  0100               	movlb	0	; () banked
 14878  001976  6FD8               	movwf	(??_calculateClassProbability+2)& (0+255),b
 14879  001978  0E4D               	movlw	high _stdevs
 14880  00197A  0100               	movlb	0	; () banked
 14881  00197C  6FD9               	movwf	(??_calculateClassProbability+3)& (0+255),b
 14882  00197E  5001               	movf	?___wmul,w,c
 14883  001980  0100               	movlb	0	; () banked
 14884  001982  27D8               	addwf	(??_calculateClassProbability+2)& (0+255),f,b
 14885  001984  5002               	movf	?___wmul+1,w,c
 14886  001986  0100               	movlb	0	; () banked
 14887  001988  23D9               	addwfc	(??_calculateClassProbability+3)& (0+255),f,b
 14888  00198A  0100               	movlb	0	; () banked
 14889  00198C  51D6               	movf	??_calculateClassProbability& (0+255),w,b
 14890  00198E  0100               	movlb	0	; () banked
 14891  001990  27D8               	addwf	(??_calculateClassProbability+2)& (0+255),f,b
 14892  001992  0100               	movlb	0	; () banked
 14893  001994  51D7               	movf	(??_calculateClassProbability+1)& (0+255),w,b
 14894  001996  0100               	movlb	0	; () banked
 14895  001998  23D9               	addwfc	(??_calculateClassProbability+3)& (0+255),f,b
 14896  00199A  C0D8  FFF6         	movff	??_calculateClassProbability+2,tblptrl
 14897  00199E  C0D9  FFF7         	movff	??_calculateClassProbability+3,tblptrh
 14898  0019A2                     	if	0	;tblptru may be non-zero
 14899  0019A2                     	endif
 14900  0019A2                     	if	0	;tblptru may be non-zero
 14901  0019A2                     	endif
 14902  0019A2  0009               	tblrd		*+
 14903  0019A4  CFF5 F0B2          	movff	tablat,calculateProbability@stdev
 14904  0019A8  0009               	tblrd		*+
 14905  0019AA  CFF5 F0B3          	movff	tablat,calculateProbability@stdev+1
 14906  0019AE  0009               	tblrd		*+
 14907  0019B0  CFF5 F0B4          	movff	tablat,calculateProbability@stdev+2
 14908  0019B4  000A               	tblrd		*-
 14909  0019B6  CFF5 F0B5          	movff	tablat,calculateProbability@stdev+3
 14910  0019BA  C0EA  F0DA         	movff	calculateClassProbability@i,??_calculateClassProbability+4
 14911  0019BE  C0EB  F0DB         	movff	calculateClassProbability@i+1,??_calculateClassProbability+5
 14912  0019C2  0100               	movlb	0	; () banked
 14913  0019C4  90D8               	bcf	status,0,c
 14914  0019C6  37DA               	rlcf	(??_calculateClassProbability+4)& (0+255),f,b
 14915  0019C8  37DB               	rlcf	(??_calculateClassProbability+5)& (0+255),f,b
 14916  0019CA  0100               	movlb	0	; () banked
 14917  0019CC  90D8               	bcf	status,0,c
 14918  0019CE  37DA               	rlcf	(??_calculateClassProbability+4)& (0+255),f,b
 14919  0019D0  37DB               	rlcf	(??_calculateClassProbability+5)& (0+255),f,b
 14920  0019D2  C0D2  F001         	movff	calculateClassProbability@classNumber,___wmul@multiplier
 14921  0019D6  C0D3  F002         	movff	calculateClassProbability@classNumber+1,___wmul@multiplier+1
 14922  0019DA  0E01               	movlw	1
 14923  0019DC  6E04               	movwf	___wmul@multiplicand+1,c
 14924  0019DE  0E30               	movlw	48
 14925  0019E0  6E03               	movwf	___wmul@multiplicand,c
 14926  0019E2  EC74  F001         	call	___wmul	;wreg free
 14927  0019E6  0E87               	movlw	low _means
 14928  0019E8  0100               	movlb	0	; () banked
 14929  0019EA  6FDC               	movwf	(??_calculateClassProbability+6)& (0+255),b
 14930  0019EC  0E41               	movlw	high _means
 14931  0019EE  0100               	movlb	0	; () banked
 14932  0019F0  6FDD               	movwf	(??_calculateClassProbability+7)& (0+255),b
 14933  0019F2  5001               	movf	?___wmul,w,c
 14934  0019F4  0100               	movlb	0	; () banked
 14935  0019F6  27DC               	addwf	(??_calculateClassProbability+6)& (0+255),f,b
 14936  0019F8  5002               	movf	?___wmul+1,w,c
 14937  0019FA  0100               	movlb	0	; () banked
 14938  0019FC  23DD               	addwfc	(??_calculateClassProbability+7)& (0+255),f,b
 14939  0019FE  0100               	movlb	0	; () banked
 14940  001A00  51DA               	movf	(??_calculateClassProbability+4)& (0+255),w,b
 14941  001A02  0100               	movlb	0	; () banked
 14942  001A04  27DC               	addwf	(??_calculateClassProbability+6)& (0+255),f,b
 14943  001A06  0100               	movlb	0	; () banked
 14944  001A08  51DB               	movf	(??_calculateClassProbability+5)& (0+255),w,b
 14945  001A0A  0100               	movlb	0	; () banked
 14946  001A0C  23DD               	addwfc	(??_calculateClassProbability+7)& (0+255),f,b
 14947  001A0E  C0DC  FFF6         	movff	??_calculateClassProbability+6,tblptrl
 14948  001A12  C0DD  FFF7         	movff	??_calculateClassProbability+7,tblptrh
 14949  001A16                     	if	0	;tblptru may be non-zero
 14950  001A16                     	endif
 14951  001A16                     	if	0	;tblptru may be non-zero
 14952  001A16                     	endif
 14953  001A16  0009               	tblrd		*+
 14954  001A18  CFF5 F0AE          	movff	tablat,calculateProbability@mean
 14955  001A1C  0009               	tblrd		*+
 14956  001A1E  CFF5 F0AF          	movff	tablat,calculateProbability@mean+1
 14957  001A22  0009               	tblrd		*+
 14958  001A24  CFF5 F0B0          	movff	tablat,calculateProbability@mean+2
 14959  001A28  000A               	tblrd		*-
 14960  001A2A  CFF5 F0B1          	movff	tablat,calculateProbability@mean+3
 14961  001A2E  C0EA  F0DE         	movff	calculateClassProbability@i,??_calculateClassProbability+8
 14962  001A32  C0EB  F0DF         	movff	calculateClassProbability@i+1,??_calculateClassProbability+9
 14963  001A36  0100               	movlb	0	; () banked
 14964  001A38  90D8               	bcf	status,0,c
 14965  001A3A  37DE               	rlcf	(??_calculateClassProbability+8)& (0+255),f,b
 14966  001A3C  37DF               	rlcf	(??_calculateClassProbability+9)& (0+255),f,b
 14967  001A3E  0100               	movlb	0	; () banked
 14968  001A40  90D8               	bcf	status,0,c
 14969  001A42  37DE               	rlcf	(??_calculateClassProbability+8)& (0+255),f,b
 14970  001A44  37DF               	rlcf	(??_calculateClassProbability+9)& (0+255),f,b
 14971  001A46  C0D4  F0E0         	movff	calculateClassProbability@inputVector,??_calculateClassProbability+10
 14972  001A4A  C0D5  F0E1         	movff	calculateClassProbability@inputVector+1,??_calculateClassProbability+11
 14973  001A4E  0100               	movlb	0	; () banked
 14974  001A50  51DE               	movf	(??_calculateClassProbability+8)& (0+255),w,b
 14975  001A52  0100               	movlb	0	; () banked
 14976  001A54  27E0               	addwf	(??_calculateClassProbability+10)& (0+255),f,b
 14977  001A56  0100               	movlb	0	; () banked
 14978  001A58  51DF               	movf	(??_calculateClassProbability+9)& (0+255),w,b
 14979  001A5A  0100               	movlb	0	; () banked
 14980  001A5C  23E1               	addwfc	(??_calculateClassProbability+11)& (0+255),f,b
 14981  001A5E  C0E0  FFF6         	movff	??_calculateClassProbability+10,tblptrl
 14982  001A62  C0E1  FFF7         	movff	??_calculateClassProbability+11,tblptrh
 14983  001A66                     	if	0	;tblptru may be non-zero
 14984  001A66                     	endif
 14985  001A66                     	if	0	;tblptru may be non-zero
 14986  001A66                     	endif
 14987  001A66  0009               	tblrd		*+
 14988  001A68  CFF5 F0AA          	movff	tablat,calculateProbability@x
 14989  001A6C  0009               	tblrd		*+
 14990  001A6E  CFF5 F0AB          	movff	tablat,calculateProbability@x+1
 14991  001A72  0009               	tblrd		*+
 14992  001A74  CFF5 F0AC          	movff	tablat,calculateProbability@x+2
 14993  001A78  000A               	tblrd		*-
 14994  001A7A  CFF5 F0AD          	movff	tablat,calculateProbability@x+3
 14995  001A7E  EC70  F00E         	call	_calculateProbability	;wreg free
 14996  001A82  C0AA  F0E2         	movff	?_calculateProbability,_calculateClassProbability$1381
 14997  001A86  C0AB  F0E3         	movff	?_calculateProbability+1,_calculateClassProbability$1381+1
 14998  001A8A  C0AC  F0E4         	movff	?_calculateProbability+2,_calculateClassProbability$1381+2
 14999  001A8E  C0AD  F0E5         	movff	?_calculateProbability+3,_calculateClassProbability$1381+3
 15000                           
 15001                           ;prediction.c: 53: {
 15002                           ;prediction.c: 55: classProbability+=calculateProbability(inputVector[i], means[classNum
      +                          ber][i], stdevs[classNumber][i] );
 15003  001A92  C0E6  F060         	movff	calculateClassProbability@classProbability,___fladd@b
 15004  001A96  C0E7  F061         	movff	calculateClassProbability@classProbability+1,___fladd@b+1
 15005  001A9A  C0E8  F062         	movff	calculateClassProbability@classProbability+2,___fladd@b+2
 15006  001A9E  C0E9  F063         	movff	calculateClassProbability@classProbability+3,___fladd@b+3
 15007  001AA2  C0E2  F064         	movff	_calculateClassProbability$1381,___fladd@a
 15008  001AA6  C0E3  F065         	movff	_calculateClassProbability$1381+1,___fladd@a+1
 15009  001AAA  C0E4  F066         	movff	_calculateClassProbability$1381+2,___fladd@a+2
 15010  001AAE  C0E5  F067         	movff	_calculateClassProbability$1381+3,___fladd@a+3
 15011  001AB2  EC7C  F018         	call	___fladd	;wreg free
 15012  001AB6  C060  F0E6         	movff	?___fladd,calculateClassProbability@classProbability
 15013  001ABA  C061  F0E7         	movff	?___fladd+1,calculateClassProbability@classProbability+1
 15014  001ABE  C062  F0E8         	movff	?___fladd+2,calculateClassProbability@classProbability+2
 15015  001AC2  C063  F0E9         	movff	?___fladd+3,calculateClassProbability@classProbability+3
 15016  001AC6  0100               	movlb	0	; () banked
 15017  001AC8  4BEA               	infsnz	calculateClassProbability@i& (0+255),f,b
 15018  001ACA  2BEB               	incf	(calculateClassProbability@i+1)& (0+255),f,b
 15019                           
 15020                           ; BSR set to: 0
 15021  001ACC  0100               	movlb	0	; () banked
 15022  001ACE  BFEB               	btfsc	(calculateClassProbability@i+1)& (0+255),7,b
 15023  001AD0  D73A               	goto	l3905
 15024  001AD2  0100               	movlb	0	; () banked
 15025  001AD4  51EB               	movf	(calculateClassProbability@i+1)& (0+255),w,b
 15026  001AD6  E101               	bnz	u4380
 15027  001AD8  D72F               	goto	L8
 15028  001ADA                     u4380:
 15029  001ADA                     l72:
 15030                           
 15031                           ; BSR set to: 0
 15032                           ;prediction.c: 56: }
 15033                           ;prediction.c: 58: return classProbability;
 15034  001ADA  C0E6  F0D2         	movff	calculateClassProbability@classProbability,?_calculateClassProbability
 15035  001ADE  C0E7  F0D3         	movff	calculateClassProbability@classProbability+1,?_calculateClassProbability+1
 15036  001AE2  C0E8  F0D4         	movff	calculateClassProbability@classProbability+2,?_calculateClassProbability+2
 15037  001AE6  C0E9  F0D5         	movff	calculateClassProbability@classProbability+3,?_calculateClassProbability+3
 15038                           
 15039                           ; BSR set to: 0
 15040  001AEA  0012               	return		;funcret
 15041  001AEC                     __end_of_calculateClassProbability:
 15042                           	opt stack 0
 15043                           tblptru	equ	0xFF8
 15044                           tblptrh	equ	0xFF7
 15045                           tblptrl	equ	0xFF6
 15046                           tablat	equ	0xFF5
 15047                           prodh	equ	0xFF4
 15048                           prodl	equ	0xFF3
 15049                           postinc0	equ	0xFEE
 15050                           wreg	equ	0xFE8
 15051                           indf2	equ	0xFDF
 15052                           postinc2	equ	0xFDE
 15053                           postdec2	equ	0xFDD
 15054                           fsr2h	equ	0xFDA
 15055                           fsr2l	equ	0xFD9
 15056                           status	equ	0xFD8
 15057                           
 15058 ;; *************** function _calculateProbability *****************
 15059 ;; Defined at:
 15060 ;;		line 26 in file "src/prediction.c"
 15061 ;; Parameters:    Size  Location     Type
 15062 ;;  x               4   74[BANK0 ] float 
 15063 ;;  mean            4   78[BANK0 ] float 
 15064 ;;  stdev           4   82[BANK0 ] float 
 15065 ;; Auto vars:     Size  Location     Type
 15066 ;;  res             4  110[BANK0 ] float 
 15067 ;;  exponent        4   86[BANK0 ] float 
 15068 ;; Return value:  Size  Location     Type
 15069 ;;                  4   74[BANK0 ] float 
 15070 ;; Registers used:
 15071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15072 ;; Tracked objects:
 15073 ;;		On entry : 0/0
 15074 ;;		On exit  : 0/0
 15075 ;;		Unchanged: 0/0
 15076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15077 ;;      Params:         0      12       0       0       0       0       0       0       0
 15078 ;;      Locals:         0      28       0       0       0       0       0       0       0
 15079 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15080 ;;      Totals:         0      40       0       0       0       0       0       0       0
 15081 ;;Total ram usage:       40 bytes
 15082 ;; Hardware stack levels used:    1
 15083 ;; Hardware stack levels required when called:    4
 15084 ;; This function calls:
 15085 ;;		___fladd
 15086 ;;		___fldiv
 15087 ;;		___flmul
 15088 ;;		___flneg
 15089 ;;		_exp
 15090 ;;		_log
 15091 ;;		_pow
 15092 ;;		_sqrt
 15093 ;; This function is called by:
 15094 ;;		_calculateClassProbability
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           	psect	text22
 15099  001CE0                     __ptext22:
 15100                           	opt stack 0
 15101  001CE0                     _calculateProbability:
 15102                           	opt stack 22
 15103                           
 15104                           ;prediction.c: 28: double exponent = exp(-(pow(x-mean,2)/(2*pow(stdev,2))));
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;incstack = 0
 15108  001CE0  0E00               	movlw	0
 15109  001CE2  0100               	movlb	0	; () banked
 15110  001CE4  6F99               	movwf	pow@y& (0+255),b
 15111  001CE6  0E00               	movlw	0
 15112  001CE8  6F9A               	movwf	(pow@y+1)& (0+255),b
 15113  001CEA  0E00               	movlw	0
 15114  001CEC  6F9B               	movwf	(pow@y+2)& (0+255),b
 15115  001CEE  0E40               	movlw	64
 15116  001CF0  6F9C               	movwf	(pow@y+3)& (0+255),b
 15117  001CF2  C0B2  F095         	movff	calculateProbability@stdev,pow@x
 15118  001CF6  C0B3  F096         	movff	calculateProbability@stdev+1,pow@x+1
 15119  001CFA  C0B4  F097         	movff	calculateProbability@stdev+2,pow@x+2
 15120  001CFE  C0B5  F098         	movff	calculateProbability@stdev+3,pow@x+3
 15121  001D02  EC76  F00D         	call	_pow	;wreg free
 15122  001D06  C095  F0BA         	movff	?_pow,_calculateProbability$1376
 15123  001D0A  C096  F0BB         	movff	?_pow+1,_calculateProbability$1376+1
 15124  001D0E  C097  F0BC         	movff	?_pow+2,_calculateProbability$1376+2
 15125  001D12  C098  F0BD         	movff	?_pow+3,_calculateProbability$1376+3
 15126                           
 15127                           ;prediction.c: 28: double exponent = exp(-(pow(x-mean,2)/(2*pow(stdev,2))));
 15128  001D16  C0AA  F064         	movff	calculateProbability@x,___fladd@a
 15129  001D1A  C0AB  F065         	movff	calculateProbability@x+1,___fladd@a+1
 15130  001D1E  C0AC  F066         	movff	calculateProbability@x+2,___fladd@a+2
 15131  001D22  C0AD  F067         	movff	calculateProbability@x+3,___fladd@a+3
 15132  001D26  C0AE  F001         	movff	calculateProbability@mean,___flneg@f1
 15133  001D2A  C0AF  F002         	movff	calculateProbability@mean+1,___flneg@f1+1
 15134  001D2E  C0B0  F003         	movff	calculateProbability@mean+2,___flneg@f1+2
 15135  001D32  C0B1  F004         	movff	calculateProbability@mean+3,___flneg@f1+3
 15136  001D36  EC87  F001         	call	___flneg	;wreg free
 15137  001D3A  C001  F060         	movff	?___flneg,___fladd@b
 15138  001D3E  C002  F061         	movff	?___flneg+1,___fladd@b+1
 15139  001D42  C003  F062         	movff	?___flneg+2,___fladd@b+2
 15140  001D46  C004  F063         	movff	?___flneg+3,___fladd@b+3
 15141  001D4A  EC7C  F018         	call	___fladd	;wreg free
 15142  001D4E  C060  F0BE         	movff	?___fladd,_calculateProbability$1377
 15143  001D52  C061  F0BF         	movff	?___fladd+1,_calculateProbability$1377+1
 15144  001D56  C062  F0C0         	movff	?___fladd+2,_calculateProbability$1377+2
 15145  001D5A  C063  F0C1         	movff	?___fladd+3,_calculateProbability$1377+3
 15146                           
 15147                           ;prediction.c: 28: double exponent = exp(-(pow(x-mean,2)/(2*pow(stdev,2))));
 15148  001D5E  0E00               	movlw	0
 15149  001D60  0100               	movlb	0	; () banked
 15150  001D62  6F99               	movwf	pow@y& (0+255),b
 15151  001D64  0E00               	movlw	0
 15152  001D66  6F9A               	movwf	(pow@y+1)& (0+255),b
 15153  001D68  0E00               	movlw	0
 15154  001D6A  6F9B               	movwf	(pow@y+2)& (0+255),b
 15155  001D6C  0E40               	movlw	64
 15156  001D6E  6F9C               	movwf	(pow@y+3)& (0+255),b
 15157  001D70  C0BE  F095         	movff	_calculateProbability$1377,pow@x
 15158  001D74  C0BF  F096         	movff	_calculateProbability$1377+1,pow@x+1
 15159  001D78  C0C0  F097         	movff	_calculateProbability$1377+2,pow@x+2
 15160  001D7C  C0C1  F098         	movff	_calculateProbability$1377+3,pow@x+3
 15161  001D80  EC76  F00D         	call	_pow	;wreg free
 15162  001D84  C095  F0C2         	movff	?_pow,_calculateProbability$1378
 15163  001D88  C096  F0C3         	movff	?_pow+1,_calculateProbability$1378+1
 15164  001D8C  C097  F0C4         	movff	?_pow+2,_calculateProbability$1378+2
 15165  001D90  C098  F0C5         	movff	?_pow+3,_calculateProbability$1378+3
 15166                           
 15167                           ;prediction.c: 28: double exponent = exp(-(pow(x-mean,2)/(2*pow(stdev,2))));
 15168  001D94  0E00               	movlw	0
 15169  001D96  6E3B               	movwf	___flmul@a,c
 15170  001D98  0E00               	movlw	0
 15171  001D9A  6E3C               	movwf	___flmul@a+1,c
 15172  001D9C  0E00               	movlw	0
 15173  001D9E  6E3D               	movwf	___flmul@a+2,c
 15174  001DA0  0E40               	movlw	64
 15175  001DA2  6E3E               	movwf	___flmul@a+3,c
 15176  001DA4  C0BA  F037         	movff	_calculateProbability$1376,___flmul@b
 15177  001DA8  C0BB  F038         	movff	_calculateProbability$1376+1,___flmul@b+1
 15178  001DAC  C0BC  F039         	movff	_calculateProbability$1376+2,___flmul@b+2
 15179  001DB0  C0BD  F03A         	movff	_calculateProbability$1376+3,___flmul@b+3
 15180  001DB4  ECC8  F014         	call	___flmul	;wreg free
 15181  001DB8  C037  F022         	movff	?___flmul,___fldiv@a
 15182  001DBC  C038  F023         	movff	?___flmul+1,___fldiv@a+1
 15183  001DC0  C039  F024         	movff	?___flmul+2,___fldiv@a+2
 15184  001DC4  C03A  F025         	movff	?___flmul+3,___fldiv@a+3
 15185  001DC8  C0C2  F01E         	movff	_calculateProbability$1378,___fldiv@b
 15186  001DCC  C0C3  F01F         	movff	_calculateProbability$1378+1,___fldiv@b+1
 15187  001DD0  C0C4  F020         	movff	_calculateProbability$1378+2,___fldiv@b+2
 15188  001DD4  C0C5  F021         	movff	_calculateProbability$1378+3,___fldiv@b+3
 15189  001DD8  EC0C  F012         	call	___fldiv	;wreg free
 15190  001DDC  C01E  F001         	movff	?___fldiv,___flneg@f1
 15191  001DE0  C01F  F002         	movff	?___fldiv+1,___flneg@f1+1
 15192  001DE4  C020  F003         	movff	?___fldiv+2,___flneg@f1+2
 15193  001DE8  C021  F004         	movff	?___fldiv+3,___flneg@f1+3
 15194  001DEC  EC87  F001         	call	___flneg	;wreg free
 15195  001DF0  C001  F0C6         	movff	?___flneg,_calculateProbability$1379
 15196  001DF4  C002  F0C7         	movff	?___flneg+1,_calculateProbability$1379+1
 15197  001DF8  C003  F0C8         	movff	?___flneg+2,_calculateProbability$1379+2
 15198  001DFC  C004  F0C9         	movff	?___flneg+3,_calculateProbability$1379+3
 15199                           
 15200                           ;prediction.c: 28: double exponent = exp(-(pow(x-mean,2)/(2*pow(stdev,2))));
 15201  001E00  C0C6  F08A         	movff	_calculateProbability$1379,exp@x
 15202  001E04  C0C7  F08B         	movff	_calculateProbability$1379+1,exp@x+1
 15203  001E08  C0C8  F08C         	movff	_calculateProbability$1379+2,exp@x+2
 15204  001E0C  C0C9  F08D         	movff	_calculateProbability$1379+3,exp@x+3
 15205  001E10  ECC6  F010         	call	_exp	;wreg free
 15206  001E14  C08A  F0B6         	movff	?_exp,calculateProbability@exponent
 15207  001E18  C08B  F0B7         	movff	?_exp+1,calculateProbability@exponent+1
 15208  001E1C  C08C  F0B8         	movff	?_exp+2,calculateProbability@exponent+2
 15209  001E20  C08D  F0B9         	movff	?_exp+3,calculateProbability@exponent+3
 15210                           
 15211                           ;prediction.c: 30: double res = (1 / (sqrt(2*3.141592653589793) * stdev)) * exponent;
 15212  001E24  C0B2  F03B         	movff	calculateProbability@stdev,___flmul@a
 15213  001E28  C0B3  F03C         	movff	calculateProbability@stdev+1,___flmul@a+1
 15214  001E2C  C0B4  F03D         	movff	calculateProbability@stdev+2,___flmul@a+2
 15215  001E30  C0B5  F03E         	movff	calculateProbability@stdev+3,___flmul@a+3
 15216  001E34  0EDB               	movlw	219
 15217  001E36  6E01               	movwf	sqrt@a,c
 15218  001E38  0E0F               	movlw	15
 15219  001E3A  6E02               	movwf	sqrt@a+1,c
 15220  001E3C  0EC9               	movlw	201
 15221  001E3E  6E03               	movwf	sqrt@a+2,c
 15222  001E40  0E40               	movlw	64
 15223  001E42  6E04               	movwf	sqrt@a+3,c
 15224  001E44  EC66  F013         	call	_sqrt	;wreg free
 15225  001E48  C001  F037         	movff	?_sqrt,___flmul@b
 15226  001E4C  C002  F038         	movff	?_sqrt+1,___flmul@b+1
 15227  001E50  C003  F039         	movff	?_sqrt+2,___flmul@b+2
 15228  001E54  C004  F03A         	movff	?_sqrt+3,___flmul@b+3
 15229  001E58  ECC8  F014         	call	___flmul	;wreg free
 15230  001E5C  C037  F022         	movff	?___flmul,___fldiv@a
 15231  001E60  C038  F023         	movff	?___flmul+1,___fldiv@a+1
 15232  001E64  C039  F024         	movff	?___flmul+2,___fldiv@a+2
 15233  001E68  C03A  F025         	movff	?___flmul+3,___fldiv@a+3
 15234  001E6C  0E00               	movlw	0
 15235  001E6E  6E1E               	movwf	___fldiv@b,c
 15236  001E70  0E00               	movlw	0
 15237  001E72  6E1F               	movwf	___fldiv@b+1,c
 15238  001E74  0E80               	movlw	128
 15239  001E76  6E20               	movwf	___fldiv@b+2,c
 15240  001E78  0E3F               	movlw	63
 15241  001E7A  6E21               	movwf	___fldiv@b+3,c
 15242  001E7C  EC0C  F012         	call	___fldiv	;wreg free
 15243  001E80  C01E  F0CA         	movff	?___fldiv,_calculateProbability$1380
 15244  001E84  C01F  F0CB         	movff	?___fldiv+1,_calculateProbability$1380+1
 15245  001E88  C020  F0CC         	movff	?___fldiv+2,_calculateProbability$1380+2
 15246  001E8C  C021  F0CD         	movff	?___fldiv+3,_calculateProbability$1380+3
 15247                           
 15248                           ;prediction.c: 30: double res = (1 / (sqrt(2*3.141592653589793) * stdev)) * exponent;
 15249  001E90  C0CA  F037         	movff	_calculateProbability$1380,___flmul@b
 15250  001E94  C0CB  F038         	movff	_calculateProbability$1380+1,___flmul@b+1
 15251  001E98  C0CC  F039         	movff	_calculateProbability$1380+2,___flmul@b+2
 15252  001E9C  C0CD  F03A         	movff	_calculateProbability$1380+3,___flmul@b+3
 15253  001EA0  C0B6  F03B         	movff	calculateProbability@exponent,___flmul@a
 15254  001EA4  C0B7  F03C         	movff	calculateProbability@exponent+1,___flmul@a+1
 15255  001EA8  C0B8  F03D         	movff	calculateProbability@exponent+2,___flmul@a+2
 15256  001EAC  C0B9  F03E         	movff	calculateProbability@exponent+3,___flmul@a+3
 15257  001EB0  ECC8  F014         	call	___flmul	;wreg free
 15258  001EB4  C037  F0CE         	movff	?___flmul,calculateProbability@res
 15259  001EB8  C038  F0CF         	movff	?___flmul+1,calculateProbability@res+1
 15260  001EBC  C039  F0D0         	movff	?___flmul+2,calculateProbability@res+2
 15261  001EC0  C03A  F0D1         	movff	?___flmul+3,calculateProbability@res+3
 15262                           
 15263                           ;prediction.c: 31: if(res == 0.0)
 15264  001EC4  0100               	movlb	0	; () banked
 15265  001EC6  51CE               	movf	calculateProbability@res& (0+255),w,b
 15266  001EC8  0100               	movlb	0	; () banked
 15267  001ECA  11CF               	iorwf	(calculateProbability@res+1)& (0+255),w,b
 15268  001ECC  0100               	movlb	0	; () banked
 15269  001ECE  11D0               	iorwf	(calculateProbability@res+2)& (0+255),w,b
 15270  001ED0  0100               	movlb	0	; () banked
 15271  001ED2  11D1               	iorwf	(calculateProbability@res+3)& (0+255),w,b
 15272  001ED4  A4D8               	btfss	status,2,c
 15273  001ED6  D00A               	goto	l3889
 15274                           
 15275                           ; BSR set to: 0
 15276                           ;prediction.c: 32: {
 15277                           ;prediction.c: 33: return 0.0;
 15278  001ED8  0E00               	movlw	0
 15279  001EDA  0100               	movlb	0	; () banked
 15280  001EDC  6FAA               	movwf	?_calculateProbability& (0+255),b
 15281  001EDE  0E00               	movlw	0
 15282  001EE0  6FAB               	movwf	(?_calculateProbability+1)& (0+255),b
 15283  001EE2  0E00               	movlw	0
 15284  001EE4  6FAC               	movwf	(?_calculateProbability+2)& (0+255),b
 15285  001EE6  0E00               	movlw	0
 15286  001EE8  6FAD               	movwf	(?_calculateProbability+3)& (0+255),b
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;prediction.c: 34: }
 15290                           
 15291                           ; BSR set to: 0
 15292  001EEA  0012               	return	
 15293  001EEC                     l3889:
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;prediction.c: 35: else
 15297                           ;prediction.c: 36: {
 15298                           ;prediction.c: 37: return log(res);
 15299  001EEC  C0CE  F084         	movff	calculateProbability@res,log@x
 15300  001EF0  C0CF  F085         	movff	calculateProbability@res+1,log@x+1
 15301  001EF4  C0D0  F086         	movff	calculateProbability@res+2,log@x+2
 15302  001EF8  C0D1  F087         	movff	calculateProbability@res+3,log@x+3
 15303  001EFC  ECED  F00A         	call	_log	;wreg free
 15304  001F00  C084  F0AA         	movff	?_log,?_calculateProbability
 15305  001F04  C085  F0AB         	movff	?_log+1,?_calculateProbability+1
 15306  001F08  C086  F0AC         	movff	?_log+2,?_calculateProbability+2
 15307  001F0C  C087  F0AD         	movff	?_log+3,?_calculateProbability+3
 15308  001F10  0012               	return	
 15309  001F12                     __end_of_calculateProbability:
 15310                           	opt stack 0
 15311                           tblptru	equ	0xFF8
 15312                           tblptrh	equ	0xFF7
 15313                           tblptrl	equ	0xFF6
 15314                           tablat	equ	0xFF5
 15315                           prodh	equ	0xFF4
 15316                           prodl	equ	0xFF3
 15317                           postinc0	equ	0xFEE
 15318                           wreg	equ	0xFE8
 15319                           indf2	equ	0xFDF
 15320                           postinc2	equ	0xFDE
 15321                           postdec2	equ	0xFDD
 15322                           fsr2h	equ	0xFDA
 15323                           fsr2l	equ	0xFD9
 15324                           status	equ	0xFD8
 15325                           
 15326 ;; *************** function _sqrt *****************
 15327 ;; Defined at:
 15328 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcsqrt.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;  a               4    0[COMRAM] float 
 15331 ;; Auto vars:     Size  Location     Type
 15332 ;;  frac            4   25[COMRAM] unsigned long 
 15333 ;;  root            4   21[COMRAM] struct .
 15334 ;;  grs             4   15[COMRAM] unsigned long 
 15335 ;;  tfrac           4   10[COMRAM] unsigned long 
 15336 ;;  exp             2   19[COMRAM] int 
 15337 ;;  p               1   14[COMRAM] unsigned char 
 15338 ;;  i               1    9[COMRAM] unsigned char 
 15339 ;;  sign            1    8[COMRAM] unsigned char 
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  4    0[COMRAM] unsigned char 
 15342 ;; Registers used:
 15343 ;;		wreg, status,2, status,0
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15349 ;;      Params:         4       0       0       0       0       0       0       0       0
 15350 ;;      Locals:        21       0       0       0       0       0       0       0       0
 15351 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15352 ;;      Totals:        29       0       0       0       0       0       0       0       0
 15353 ;;Total ram usage:       29 bytes
 15354 ;; Hardware stack levels used:    1
 15355 ;; This function calls:
 15356 ;;		Nothing
 15357 ;; This function is called by:
 15358 ;;		_calculateProbability
 15359 ;; This function uses a non-reentrant model
 15360 ;;
 15361                           
 15362                           	psect	text23
 15363  0026CC                     __ptext23:
 15364                           	opt stack 0
 15365  0026CC                     _sqrt:
 15366                           	opt stack 25
 15367                           
 15368                           ;incstack = 0
 15369  0026CC  5004               	movf	sqrt@a+3,w,c
 15370  0026CE  0B80               	andlw	128
 15371  0026D0  6E09               	movwf	sqrt@sign,c
 15372  0026D2  5004               	movf	sqrt@a+3,w,c
 15373  0026D4  2404               	addwf	sqrt@a+3,w,c
 15374  0026D6  6E0F               	movwf	sqrt@p,c
 15375  0026D8  BE03               	btfsc	sqrt@a+2,7,c
 15376  0026DA  800F               	bsf	sqrt@p,0,c
 15377  0026DC  C00F  F014         	movff	sqrt@p,sqrt@exp
 15378  0026E0  6A15               	clrf	sqrt@exp+1,c
 15379  0026E2  0EFF               	movlw	255
 15380  0026E4  1401               	andwf	sqrt@a,w,c
 15381  0026E6  6E1A               	movwf	sqrt@frac,c
 15382  0026E8  0EFF               	movlw	255
 15383  0026EA  1402               	andwf	sqrt@a+1,w,c
 15384  0026EC  6E1B               	movwf	sqrt@frac+1,c
 15385  0026EE  0E7F               	movlw	127
 15386  0026F0  1403               	andwf	sqrt@a+2,w,c
 15387  0026F2  6E1C               	movwf	sqrt@frac+2,c
 15388  0026F4  0E00               	movlw	0
 15389  0026F6  1404               	andwf	sqrt@a+3,w,c
 15390  0026F8  6E1D               	movwf	sqrt@frac+3,c
 15391  0026FA  5014               	movf	sqrt@exp,w,c
 15392  0026FC  1015               	iorwf	sqrt@exp+1,w,c
 15393  0026FE  B4D8               	btfsc	status,2,c
 15394  002700  D005               	goto	l3787
 15395  002702  8E1C               	bsf	sqrt@frac+2,7,c
 15396  002704  2814               	incf	sqrt@exp,w,c
 15397  002706  1015               	iorwf	sqrt@exp+1,w,c
 15398  002708  A4D8               	btfss	status,2,c
 15399  00270A  D008               	goto	l3789
 15400  00270C                     l3787:
 15401  00270C  0E00               	movlw	0
 15402  00270E  6E1A               	movwf	sqrt@frac,c
 15403  002710  0E00               	movlw	0
 15404  002712  6E1B               	movwf	sqrt@frac+1,c
 15405  002714  0E00               	movlw	0
 15406  002716  6E1C               	movwf	sqrt@frac+2,c
 15407  002718  0E00               	movlw	0
 15408  00271A  6E1D               	movwf	sqrt@frac+3,c
 15409  00271C                     l3789:
 15410  00271C  5014               	movf	sqrt@exp,w,c
 15411  00271E  1015               	iorwf	sqrt@exp+1,w,c
 15412  002720  A4D8               	btfss	status,2,c
 15413  002722  D009               	goto	l3795
 15414  002724  0E00               	movlw	0
 15415  002726  6E01               	movwf	?_sqrt,c
 15416  002728  0E00               	movlw	0
 15417  00272A  6E02               	movwf	?_sqrt+1,c
 15418  00272C  0E00               	movlw	0
 15419  00272E  6E03               	movwf	?_sqrt+2,c
 15420  002730  0E00               	movlw	0
 15421  002732  6E04               	movwf	?_sqrt+3,c
 15422  002734  0012               	return	
 15423  002736                     l3795:
 15424  002736  5009               	movf	sqrt@sign,w,c
 15425  002738  B4D8               	btfsc	status,2,c
 15426  00273A  D01A               	goto	l3807
 15427  00273C  0E00               	movlw	0
 15428  00273E  6E16               	movwf	sqrt@root,c
 15429  002740  0E00               	movlw	0
 15430  002742  6E17               	movwf	sqrt@root+1,c
 15431  002744  0E40               	movlw	64
 15432  002746  6E18               	movwf	sqrt@root+2,c
 15433  002748  0E00               	movlw	0
 15434  00274A  6E19               	movwf	sqrt@root+3,c
 15435  00274C  0E80               	movlw	128
 15436  00274E  1218               	iorwf	sqrt@root+2,f,c
 15437  002750  0EFF               	movlw	255
 15438  002752  1219               	iorwf	sqrt@root+3,f,c
 15439  002754  0E00               	movlw	0
 15440  002756  0101               	movlb	1	; () banked
 15441  002758  6F3E               	movwf	(_errno+1)& (0+255),b
 15442  00275A  0E21               	movlw	33
 15443  00275C  6F3D               	movwf	_errno& (0+255),b
 15444                           
 15445                           ; BSR set to: 1
 15446  00275E  C016  F001         	movff	sqrt@root,?_sqrt
 15447  002762  C017  F002         	movff	sqrt@root+1,?_sqrt+1
 15448  002766  C018  F003         	movff	sqrt@root+2,?_sqrt+2
 15449  00276A  C019  F004         	movff	sqrt@root+3,?_sqrt+3
 15450                           
 15451                           ; BSR set to: 1
 15452  00276E  0012               	return	
 15453  002770                     l3807:
 15454  002770  2814               	incf	sqrt@exp,w,c
 15455  002772  1015               	iorwf	sqrt@exp+1,w,c
 15456  002774  A4D8               	btfss	status,2,c
 15457  002776  D011               	goto	l3815
 15458  002778  0E00               	movlw	0
 15459  00277A  6E16               	movwf	sqrt@root,c
 15460  00277C  0E00               	movlw	0
 15461  00277E  6E17               	movwf	sqrt@root+1,c
 15462  002780  0E80               	movlw	128
 15463  002782  6E18               	movwf	sqrt@root+2,c
 15464  002784  0E7F               	movlw	127
 15465  002786  6E19               	movwf	sqrt@root+3,c
 15466  002788  C016  F001         	movff	sqrt@root,?_sqrt
 15467  00278C  C017  F002         	movff	sqrt@root+1,?_sqrt+1
 15468  002790  C018  F003         	movff	sqrt@root+2,?_sqrt+2
 15469  002794  C019  F004         	movff	sqrt@root+3,?_sqrt+3
 15470  002798  0012               	return	
 15471  00279A                     l3815:
 15472  00279A  0E81               	movlw	129
 15473  00279C  2614               	addwf	sqrt@exp,f,c
 15474  00279E  0EFF               	movlw	255
 15475  0027A0  2215               	addwfc	sqrt@exp+1,f,c
 15476  0027A2  5014               	movf	sqrt@exp,w,c
 15477  0027A4  0B01               	andlw	1
 15478  0027A6  6E0F               	movwf	sqrt@p,c
 15479  0027A8  3415               	rlcf	sqrt@exp+1,w,c
 15480  0027AA  3215               	rrcf	sqrt@exp+1,f,c
 15481  0027AC  3214               	rrcf	sqrt@exp,f,c
 15482  0027AE  0E7F               	movlw	127
 15483  0027B0  2614               	addwf	sqrt@exp,f,c
 15484  0027B2  0E00               	movlw	0
 15485  0027B4  2215               	addwfc	sqrt@exp+1,f,c
 15486  0027B6  90D8               	bcf	status,0,c
 15487  0027B8  341A               	rlcf	sqrt@frac,w,c
 15488  0027BA  6E0B               	movwf	sqrt@tfrac,c
 15489  0027BC  341B               	rlcf	sqrt@frac+1,w,c
 15490  0027BE  6E0C               	movwf	sqrt@tfrac+1,c
 15491  0027C0  341C               	rlcf	sqrt@frac+2,w,c
 15492  0027C2  6E0D               	movwf	sqrt@tfrac+2,c
 15493  0027C4  341D               	rlcf	sqrt@frac+3,w,c
 15494  0027C6  6E0E               	movwf	sqrt@tfrac+3,c
 15495  0027C8  0E00               	movlw	0
 15496  0027CA  6E1A               	movwf	sqrt@frac,c
 15497  0027CC  0E00               	movlw	0
 15498  0027CE  6E1B               	movwf	sqrt@frac+1,c
 15499  0027D0  0E00               	movlw	0
 15500  0027D2  6E1C               	movwf	sqrt@frac+2,c
 15501  0027D4  0E00               	movlw	0
 15502  0027D6  6E1D               	movwf	sqrt@frac+3,c
 15503  0027D8  0E00               	movlw	0
 15504  0027DA  6E10               	movwf	sqrt@grs,c
 15505  0027DC  0E00               	movlw	0
 15506  0027DE  6E11               	movwf	sqrt@grs+1,c
 15507  0027E0  0E00               	movlw	0
 15508  0027E2  6E12               	movwf	sqrt@grs+2,c
 15509  0027E4  0E01               	movlw	1
 15510  0027E6  6E13               	movwf	sqrt@grs+3,c
 15511  0027E8  500F               	movf	sqrt@p,w,c
 15512  0027EA  B4D8               	btfsc	status,2,c
 15513  0027EC  D005               	goto	l3825
 15514  0027EE  90D8               	bcf	status,0,c
 15515  0027F0  360B               	rlcf	sqrt@tfrac,f,c
 15516  0027F2  360C               	rlcf	sqrt@tfrac+1,f,c
 15517  0027F4  360D               	rlcf	sqrt@tfrac+2,f,c
 15518  0027F6  360E               	rlcf	sqrt@tfrac+3,f,c
 15519  0027F8                     l3825:
 15520  0027F8  0E00               	movlw	0
 15521  0027FA  6E0A               	movwf	sqrt@i,c
 15522  0027FC  D052               	goto	l3839
 15523  0027FE                     l3827:
 15524  0027FE  5010               	movf	sqrt@grs,w,c
 15525  002800  121A               	iorwf	sqrt@frac,f,c
 15526  002802  5011               	movf	sqrt@grs+1,w,c
 15527  002804  121B               	iorwf	sqrt@frac+1,f,c
 15528  002806  5012               	movf	sqrt@grs+2,w,c
 15529  002808  121C               	iorwf	sqrt@frac+2,f,c
 15530  00280A  5013               	movf	sqrt@grs+3,w,c
 15531  00280C  121D               	iorwf	sqrt@frac+3,f,c
 15532  00280E  501A               	movf	sqrt@frac,w,c
 15533  002810  5C0B               	subwf	sqrt@tfrac,w,c
 15534  002812  501B               	movf	sqrt@frac+1,w,c
 15535  002814  580C               	subwfb	sqrt@tfrac+1,w,c
 15536  002816  501C               	movf	sqrt@frac+2,w,c
 15537  002818  580D               	subwfb	sqrt@tfrac+2,w,c
 15538  00281A  501D               	movf	sqrt@frac+3,w,c
 15539  00281C  580E               	subwfb	sqrt@tfrac+3,w,c
 15540  00281E  A0D8               	btfss	status,0,c
 15541  002820  D011               	goto	l3831
 15542  002822  501A               	movf	sqrt@frac,w,c
 15543  002824  5E0B               	subwf	sqrt@tfrac,f,c
 15544  002826  501B               	movf	sqrt@frac+1,w,c
 15545  002828  5A0C               	subwfb	sqrt@tfrac+1,f,c
 15546  00282A  501C               	movf	sqrt@frac+2,w,c
 15547  00282C  5A0D               	subwfb	sqrt@tfrac+2,f,c
 15548  00282E  501D               	movf	sqrt@frac+3,w,c
 15549  002830  5A0E               	subwfb	sqrt@tfrac+3,f,c
 15550  002832  5010               	movf	sqrt@grs,w,c
 15551  002834  261A               	addwf	sqrt@frac,f,c
 15552  002836  5011               	movf	sqrt@grs+1,w,c
 15553  002838  221B               	addwfc	sqrt@frac+1,f,c
 15554  00283A  5012               	movf	sqrt@grs+2,w,c
 15555  00283C  221C               	addwfc	sqrt@frac+2,f,c
 15556  00283E  5013               	movf	sqrt@grs+3,w,c
 15557  002840  221D               	addwfc	sqrt@frac+3,f,c
 15558  002842  D014               	goto	l3833
 15559  002844                     l3831:
 15560  002844  C010  F005         	movff	sqrt@grs,??_sqrt
 15561  002848  C011  F006         	movff	sqrt@grs+1,??_sqrt+1
 15562  00284C  C012  F007         	movff	sqrt@grs+2,??_sqrt+2
 15563  002850  C013  F008         	movff	sqrt@grs+3,??_sqrt+3
 15564  002854  1E05               	comf	??_sqrt,f,c
 15565  002856  1E06               	comf	??_sqrt+1,f,c
 15566  002858  1E07               	comf	??_sqrt+2,f,c
 15567  00285A  1E08               	comf	??_sqrt+3,f,c
 15568  00285C  5005               	movf	??_sqrt,w,c
 15569  00285E  161A               	andwf	sqrt@frac,f,c
 15570  002860  5006               	movf	??_sqrt+1,w,c
 15571  002862  161B               	andwf	sqrt@frac+1,f,c
 15572  002864  5007               	movf	??_sqrt+2,w,c
 15573  002866  161C               	andwf	sqrt@frac+2,f,c
 15574  002868  5008               	movf	??_sqrt+3,w,c
 15575  00286A  161D               	andwf	sqrt@frac+3,f,c
 15576  00286C                     l3833:
 15577  00286C  C010  F005         	movff	sqrt@grs,??_sqrt
 15578  002870  C011  F006         	movff	sqrt@grs+1,??_sqrt+1
 15579  002874  C012  F007         	movff	sqrt@grs+2,??_sqrt+2
 15580  002878  C013  F008         	movff	sqrt@grs+3,??_sqrt+3
 15581  00287C  90D8               	bcf	status,0,c
 15582  00287E  3208               	rrcf	??_sqrt+3,f,c
 15583  002880  3207               	rrcf	??_sqrt+2,f,c
 15584  002882  3206               	rrcf	??_sqrt+1,f,c
 15585  002884  3205               	rrcf	??_sqrt,f,c
 15586  002886  C005  F010         	movff	??_sqrt,sqrt@grs
 15587  00288A  C006  F011         	movff	??_sqrt+1,sqrt@grs+1
 15588  00288E  C007  F012         	movff	??_sqrt+2,sqrt@grs+2
 15589  002892  C008  F013         	movff	??_sqrt+3,sqrt@grs+3
 15590  002896  90D8               	bcf	status,0,c
 15591  002898  360B               	rlcf	sqrt@tfrac,f,c
 15592  00289A  360C               	rlcf	sqrt@tfrac+1,f,c
 15593  00289C  360D               	rlcf	sqrt@tfrac+2,f,c
 15594  00289E  360E               	rlcf	sqrt@tfrac+3,f,c
 15595  0028A0  2A0A               	incf	sqrt@i,f,c
 15596  0028A2                     l3839:
 15597  0028A2  0E18               	movlw	24
 15598  0028A4  640A               	cpfsgt	sqrt@i,c
 15599  0028A6  D7AB               	goto	l3827
 15600  0028A8  C01A  F005         	movff	sqrt@frac,??_sqrt
 15601  0028AC  C01B  F006         	movff	sqrt@frac+1,??_sqrt+1
 15602  0028B0  C01C  F007         	movff	sqrt@frac+2,??_sqrt+2
 15603  0028B4  C01D  F008         	movff	sqrt@frac+3,??_sqrt+3
 15604  0028B8  90D8               	bcf	status,0,c
 15605  0028BA  3208               	rrcf	??_sqrt+3,f,c
 15606  0028BC  3207               	rrcf	??_sqrt+2,f,c
 15607  0028BE  3206               	rrcf	??_sqrt+1,f,c
 15608  0028C0  3205               	rrcf	??_sqrt,f,c
 15609  0028C2  C005  F01A         	movff	??_sqrt,sqrt@frac
 15610  0028C6  C006  F01B         	movff	??_sqrt+1,sqrt@frac+1
 15611  0028CA  C007  F01C         	movff	??_sqrt+2,sqrt@frac+2
 15612  0028CE  C008  F01D         	movff	??_sqrt+3,sqrt@frac+3
 15613  0028D2  0E01               	movlw	1
 15614  0028D4  141A               	andwf	sqrt@frac,w,c
 15615  0028D6  6E10               	movwf	sqrt@grs,c
 15616  0028D8  0E00               	movlw	0
 15617  0028DA  141B               	andwf	sqrt@frac+1,w,c
 15618  0028DC  6E11               	movwf	sqrt@grs+1,c
 15619  0028DE  0E00               	movlw	0
 15620  0028E0  141C               	andwf	sqrt@frac+2,w,c
 15621  0028E2  6E12               	movwf	sqrt@grs+2,c
 15622  0028E4  0E00               	movlw	0
 15623  0028E6  141D               	andwf	sqrt@frac+3,w,c
 15624  0028E8  6E13               	movwf	sqrt@grs+3,c
 15625  0028EA  C01A  F005         	movff	sqrt@frac,??_sqrt
 15626  0028EE  C01B  F006         	movff	sqrt@frac+1,??_sqrt+1
 15627  0028F2  C01C  F007         	movff	sqrt@frac+2,??_sqrt+2
 15628  0028F6  C01D  F008         	movff	sqrt@frac+3,??_sqrt+3
 15629  0028FA  90D8               	bcf	status,0,c
 15630  0028FC  3208               	rrcf	??_sqrt+3,f,c
 15631  0028FE  3207               	rrcf	??_sqrt+2,f,c
 15632  002900  3206               	rrcf	??_sqrt+1,f,c
 15633  002902  3205               	rrcf	??_sqrt,f,c
 15634  002904  C005  F01A         	movff	??_sqrt,sqrt@frac
 15635  002908  C006  F01B         	movff	??_sqrt+1,sqrt@frac+1
 15636  00290C  C007  F01C         	movff	??_sqrt+2,sqrt@frac+2
 15637  002910  C008  F01D         	movff	??_sqrt+3,sqrt@frac+3
 15638  002914  5010               	movf	sqrt@grs,w,c
 15639  002916  261A               	addwf	sqrt@frac,f,c
 15640  002918  5011               	movf	sqrt@grs+1,w,c
 15641  00291A  221B               	addwfc	sqrt@frac+1,f,c
 15642  00291C  5012               	movf	sqrt@grs+2,w,c
 15643  00291E  221C               	addwfc	sqrt@frac+2,f,c
 15644  002920  5013               	movf	sqrt@grs+3,w,c
 15645  002922  221D               	addwfc	sqrt@frac+3,f,c
 15646  002924  A01D               	btfss	sqrt@frac+3,0,c
 15647  002926  D017               	goto	l3851
 15648  002928  C01A  F005         	movff	sqrt@frac,??_sqrt
 15649  00292C  C01B  F006         	movff	sqrt@frac+1,??_sqrt+1
 15650  002930  C01C  F007         	movff	sqrt@frac+2,??_sqrt+2
 15651  002934  C01D  F008         	movff	sqrt@frac+3,??_sqrt+3
 15652  002938  90D8               	bcf	status,0,c
 15653  00293A  3208               	rrcf	??_sqrt+3,f,c
 15654  00293C  3207               	rrcf	??_sqrt+2,f,c
 15655  00293E  3206               	rrcf	??_sqrt+1,f,c
 15656  002940  3205               	rrcf	??_sqrt,f,c
 15657  002942  C005  F01A         	movff	??_sqrt,sqrt@frac
 15658  002946  C006  F01B         	movff	??_sqrt+1,sqrt@frac+1
 15659  00294A  C007  F01C         	movff	??_sqrt+2,sqrt@frac+2
 15660  00294E  C008  F01D         	movff	??_sqrt+3,sqrt@frac+3
 15661  002952  4A14               	infsnz	sqrt@exp,f,c
 15662  002954  2A15               	incf	sqrt@exp+1,f,c
 15663  002956                     l3851:
 15664  002956  0EFF               	movlw	255
 15665  002958  141A               	andwf	sqrt@frac,w,c
 15666  00295A  6E16               	movwf	sqrt@root,c
 15667  00295C  0EFF               	movlw	255
 15668  00295E  141B               	andwf	sqrt@frac+1,w,c
 15669  002960  6E17               	movwf	sqrt@root+1,c
 15670  002962  0E7F               	movlw	127
 15671  002964  141C               	andwf	sqrt@frac+2,w,c
 15672  002966  6E18               	movwf	sqrt@root+2,c
 15673  002968  0E00               	movlw	0
 15674  00296A  141D               	andwf	sqrt@frac+3,w,c
 15675  00296C  6E19               	movwf	sqrt@root+3,c
 15676  00296E  C014  F00F         	movff	sqrt@exp,sqrt@p
 15677  002972  B00F               	btfsc	sqrt@p,0,c
 15678  002974  8E18               	bsf	sqrt@root+2,7,c
 15679  002976  90D8               	bcf	status,0,c
 15680  002978  300F               	rrcf	sqrt@p,w,c
 15681  00297A  6E19               	movwf	sqrt@root+3,c
 15682  00297C  9E19               	bcf	sqrt@root+3,7,c
 15683  00297E  C016  F001         	movff	sqrt@root,?_sqrt
 15684  002982  C017  F002         	movff	sqrt@root+1,?_sqrt+1
 15685  002986  C018  F003         	movff	sqrt@root+2,?_sqrt+2
 15686  00298A  C019  F004         	movff	sqrt@root+3,?_sqrt+3
 15687  00298E  0012               	return	
 15688  002990                     __end_of_sqrt:
 15689                           	opt stack 0
 15690                           tblptru	equ	0xFF8
 15691                           tblptrh	equ	0xFF7
 15692                           tblptrl	equ	0xFF6
 15693                           tablat	equ	0xFF5
 15694                           prodh	equ	0xFF4
 15695                           prodl	equ	0xFF3
 15696                           postinc0	equ	0xFEE
 15697                           wreg	equ	0xFE8
 15698                           indf2	equ	0xFDF
 15699                           postinc2	equ	0xFDE
 15700                           postdec2	equ	0xFDD
 15701                           fsr2h	equ	0xFDA
 15702                           fsr2l	equ	0xFD9
 15703                           status	equ	0xFD8
 15704                           
 15705 ;; *************** function _pow *****************
 15706 ;; Defined at:
 15707 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\pow.c"
 15708 ;; Parameters:    Size  Location     Type
 15709 ;;  x               4   53[BANK0 ] unsigned char 
 15710 ;;  y               4   57[BANK0 ] unsigned char 
 15711 ;; Auto vars:     Size  Location     Type
 15712 ;;  yi              4   70[BANK0 ] unsigned long 
 15713 ;;  sign            1   69[BANK0 ] unsigned char 
 15714 ;; Return value:  Size  Location     Type
 15715 ;;                  4   53[BANK0 ] unsigned char 
 15716 ;; Registers used:
 15717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15718 ;; Tracked objects:
 15719 ;;		On entry : 0/0
 15720 ;;		On exit  : 0/0
 15721 ;;		Unchanged: 0/0
 15722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15723 ;;      Params:         0       8       0       0       0       0       0       0       0
 15724 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15725 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15726 ;;      Totals:         0      21       0       0       0       0       0       0       0
 15727 ;;Total ram usage:       21 bytes
 15728 ;; Hardware stack levels used:    1
 15729 ;; Hardware stack levels required when called:    3
 15730 ;; This function calls:
 15731 ;;		___flge
 15732 ;;		___flmul
 15733 ;;		___flneg
 15734 ;;		___fltol
 15735 ;;		___xxtofl
 15736 ;;		_exp
 15737 ;;		_log
 15738 ;; This function is called by:
 15739 ;;		_calculateProbability
 15740 ;; This function uses a non-reentrant model
 15741 ;;
 15742                           
 15743                           	psect	text24
 15744  001AEC                     __ptext24:
 15745                           	opt stack 0
 15746  001AEC                     _pow:
 15747                           	opt stack 22
 15748                           
 15749                           ;incstack = 0
 15750  001AEC  0E00               	movlw	0
 15751  001AEE  0100               	movlb	0	; () banked
 15752  001AF0  6FA5               	movwf	pow@sign& (0+255),b
 15753                           
 15754                           ; BSR set to: 0
 15755  001AF2  0100               	movlb	0	; () banked
 15756  001AF4  5195               	movf	pow@x& (0+255),w,b
 15757  001AF6  0100               	movlb	0	; () banked
 15758  001AF8  1196               	iorwf	(pow@x+1)& (0+255),w,b
 15759  001AFA  0100               	movlb	0	; () banked
 15760  001AFC  1197               	iorwf	(pow@x+2)& (0+255),w,b
 15761  001AFE  0100               	movlb	0	; () banked
 15762  001B00  1198               	iorwf	(pow@x+3)& (0+255),w,b
 15763  001B02  A4D8               	btfss	status,2,c
 15764  001B04  D023               	goto	l3739
 15765                           
 15766                           ; BSR set to: 0
 15767  001B06  0E00               	movlw	0
 15768  001B08  6E01               	movwf	___flge@ff1,c
 15769  001B0A  0E00               	movlw	0
 15770  001B0C  6E02               	movwf	___flge@ff1+1,c
 15771  001B0E  0E00               	movlw	0
 15772  001B10  6E03               	movwf	___flge@ff1+2,c
 15773  001B12  0E00               	movlw	0
 15774  001B14  6E04               	movwf	___flge@ff1+3,c
 15775  001B16  C099  F005         	movff	pow@y,___flge@ff2
 15776  001B1A  C09A  F006         	movff	pow@y+1,___flge@ff2+1
 15777  001B1E  C09B  F007         	movff	pow@y+2,___flge@ff2+2
 15778  001B22  C09C  F008         	movff	pow@y+3,___flge@ff2+3
 15779  001B26  EC34  F007         	call	___flge	;wreg free
 15780  001B2A  A0D8               	btfss	status,0,c
 15781  001B2C  D005               	goto	l875
 15782  001B2E  0E00               	movlw	0
 15783  001B30  0101               	movlb	1	; () banked
 15784  001B32  6F3E               	movwf	(_errno+1)& (0+255),b
 15785  001B34  0E21               	movlw	33
 15786  001B36  6F3D               	movwf	_errno& (0+255),b
 15787  001B38                     l875:
 15788  001B38  0E00               	movlw	0
 15789  001B3A  0100               	movlb	0	; () banked
 15790  001B3C  6F95               	movwf	?_pow& (0+255),b
 15791  001B3E  0E00               	movlw	0
 15792  001B40  6F96               	movwf	(?_pow+1)& (0+255),b
 15793  001B42  0E00               	movlw	0
 15794  001B44  6F97               	movwf	(?_pow+2)& (0+255),b
 15795  001B46  0E00               	movlw	0
 15796  001B48  6F98               	movwf	(?_pow+3)& (0+255),b
 15797                           
 15798                           ; BSR set to: 0
 15799  001B4A  0012               	return	
 15800  001B4C                     l3739:
 15801                           
 15802                           ; BSR set to: 0
 15803  001B4C  0100               	movlb	0	; () banked
 15804  001B4E  5199               	movf	pow@y& (0+255),w,b
 15805  001B50  0100               	movlb	0	; () banked
 15806  001B52  119A               	iorwf	(pow@y+1)& (0+255),w,b
 15807  001B54  0100               	movlb	0	; () banked
 15808  001B56  119B               	iorwf	(pow@y+2)& (0+255),w,b
 15809  001B58  0100               	movlb	0	; () banked
 15810  001B5A  119C               	iorwf	(pow@y+3)& (0+255),w,b
 15811  001B5C  A4D8               	btfss	status,2,c
 15812  001B5E  D00A               	goto	l3745
 15813                           
 15814                           ; BSR set to: 0
 15815  001B60  0E00               	movlw	0
 15816  001B62  0100               	movlb	0	; () banked
 15817  001B64  6F95               	movwf	?_pow& (0+255),b
 15818  001B66  0E00               	movlw	0
 15819  001B68  6F96               	movwf	(?_pow+1)& (0+255),b
 15820  001B6A  0E80               	movlw	128
 15821  001B6C  6F97               	movwf	(?_pow+2)& (0+255),b
 15822  001B6E  0E3F               	movlw	63
 15823  001B70  6F98               	movwf	(?_pow+3)& (0+255),b
 15824                           
 15825                           ; BSR set to: 0
 15826  001B72  0012               	return	
 15827  001B74                     l3745:
 15828                           
 15829                           ; BSR set to: 0
 15830  001B74  0100               	movlb	0	; () banked
 15831  001B76  AF98               	btfss	(pow@x+3)& (0+255),7,b
 15832  001B78  D054               	goto	l3757
 15833                           
 15834                           ; BSR set to: 0
 15835  001B7A  C099  F059         	movff	pow@y,___fltol@f1
 15836  001B7E  C09A  F05A         	movff	pow@y+1,___fltol@f1+1
 15837  001B82  C09B  F05B         	movff	pow@y+2,___fltol@f1+2
 15838  001B86  C09C  F05C         	movff	pow@y+3,___fltol@f1+3
 15839  001B8A  ECB2  F003         	call	___fltol	;wreg free
 15840  001B8E  C059  F0A6         	movff	?___fltol,pow@yi
 15841  001B92  C05A  F0A7         	movff	?___fltol+1,pow@yi+1
 15842  001B96  C05B  F0A8         	movff	?___fltol+2,pow@yi+2
 15843  001B9A  C05C  F0A9         	movff	?___fltol+3,pow@yi+3
 15844  001B9E  C0A6  F007         	movff	pow@yi,___xxtofl@val
 15845  001BA2  C0A7  F008         	movff	pow@yi+1,___xxtofl@val+1
 15846  001BA6  C0A8  F009         	movff	pow@yi+2,___xxtofl@val+2
 15847  001BAA  C0A9  F00A         	movff	pow@yi+3,___xxtofl@val+3
 15848  001BAE  0E00               	movlw	0
 15849  001BB0  EC95  F009         	call	___xxtofl
 15850  001BB4  0100               	movlb	0	; () banked
 15851  001BB6  5199               	movf	pow@y& (0+255),w,b
 15852  001BB8  1807               	xorwf	?___xxtofl,w,c
 15853  001BBA  E10D               	bnz	u4230
 15854  001BBC  0100               	movlb	0	; () banked
 15855  001BBE  519A               	movf	(pow@y+1)& (0+255),w,b
 15856  001BC0  1808               	xorwf	?___xxtofl+1,w,c
 15857  001BC2  E109               	bnz	u4230
 15858  001BC4  0100               	movlb	0	; () banked
 15859  001BC6  519B               	movf	(pow@y+2)& (0+255),w,b
 15860  001BC8  1809               	xorwf	?___xxtofl+2,w,c
 15861  001BCA  E105               	bnz	u4230
 15862  001BCC  0100               	movlb	0	; () banked
 15863  001BCE  519C               	movf	(pow@y+3)& (0+255),w,b
 15864  001BD0  180A               	xorwf	?___xxtofl+3,w,c
 15865  001BD2  B4D8               	btfsc	status,2,c
 15866  001BD4  D00F               	goto	l3753
 15867  001BD6                     u4230:
 15868                           
 15869                           ; BSR set to: 0
 15870  001BD6  0E00               	movlw	0
 15871  001BD8  0101               	movlb	1	; () banked
 15872  001BDA  6F3E               	movwf	(_errno+1)& (0+255),b
 15873  001BDC  0E21               	movlw	33
 15874  001BDE  6F3D               	movwf	_errno& (0+255),b
 15875  001BE0  0E00               	movlw	0
 15876  001BE2  0100               	movlb	0	; () banked
 15877  001BE4  6F95               	movwf	?_pow& (0+255),b
 15878  001BE6  0E00               	movlw	0
 15879  001BE8  6F96               	movwf	(?_pow+1)& (0+255),b
 15880  001BEA  0E00               	movlw	0
 15881  001BEC  6F97               	movwf	(?_pow+2)& (0+255),b
 15882  001BEE  0E00               	movlw	0
 15883  001BF0  6F98               	movwf	(?_pow+3)& (0+255),b
 15884                           
 15885                           ; BSR set to: 0
 15886  001BF2  0012               	return	
 15887  001BF4                     l3753:
 15888                           
 15889                           ; BSR set to: 0
 15890  001BF4  0100               	movlb	0	; () banked
 15891  001BF6  51A6               	movf	pow@yi& (0+255),w,b
 15892  001BF8  0B01               	andlw	1
 15893  001BFA  0100               	movlb	0	; () banked
 15894  001BFC  6FA5               	movwf	pow@sign& (0+255),b
 15895                           
 15896                           ; BSR set to: 0
 15897  001BFE  C095  F001         	movff	pow@x,___flneg@f1
 15898  001C02  C096  F002         	movff	pow@x+1,___flneg@f1+1
 15899  001C06  C097  F003         	movff	pow@x+2,___flneg@f1+2
 15900  001C0A  C098  F004         	movff	pow@x+3,___flneg@f1+3
 15901  001C0E  EC87  F001         	call	___flneg	;wreg free
 15902  001C12  C001  F095         	movff	?___flneg,pow@x
 15903  001C16  C002  F096         	movff	?___flneg+1,pow@x+1
 15904  001C1A  C003  F097         	movff	?___flneg+2,pow@x+2
 15905  001C1E  C004  F098         	movff	?___flneg+3,pow@x+3
 15906  001C22                     l3757:
 15907  001C22  C095  F084         	movff	pow@x,log@x
 15908  001C26  C096  F085         	movff	pow@x+1,log@x+1
 15909  001C2A  C097  F086         	movff	pow@x+2,log@x+2
 15910  001C2E  C098  F087         	movff	pow@x+3,log@x+3
 15911  001C32  ECED  F00A         	call	_log	;wreg free
 15912  001C36  C084  F09D         	movff	?_log,_pow$1397
 15913  001C3A  C085  F09E         	movff	?_log+1,_pow$1397+1
 15914  001C3E  C086  F09F         	movff	?_log+2,_pow$1397+2
 15915  001C42  C087  F0A0         	movff	?_log+3,_pow$1397+3
 15916  001C46  C09D  F037         	movff	_pow$1397,___flmul@b
 15917  001C4A  C09E  F038         	movff	_pow$1397+1,___flmul@b+1
 15918  001C4E  C09F  F039         	movff	_pow$1397+2,___flmul@b+2
 15919  001C52  C0A0  F03A         	movff	_pow$1397+3,___flmul@b+3
 15920  001C56  C099  F03B         	movff	pow@y,___flmul@a
 15921  001C5A  C09A  F03C         	movff	pow@y+1,___flmul@a+1
 15922  001C5E  C09B  F03D         	movff	pow@y+2,___flmul@a+2
 15923  001C62  C09C  F03E         	movff	pow@y+3,___flmul@a+3
 15924  001C66  ECC8  F014         	call	___flmul	;wreg free
 15925  001C6A  C037  F0A1         	movff	?___flmul,_pow$1398
 15926  001C6E  C038  F0A2         	movff	?___flmul+1,_pow$1398+1
 15927  001C72  C039  F0A3         	movff	?___flmul+2,_pow$1398+2
 15928  001C76  C03A  F0A4         	movff	?___flmul+3,_pow$1398+3
 15929  001C7A  C0A1  F08A         	movff	_pow$1398,exp@x
 15930  001C7E  C0A2  F08B         	movff	_pow$1398+1,exp@x+1
 15931  001C82  C0A3  F08C         	movff	_pow$1398+2,exp@x+2
 15932  001C86  C0A4  F08D         	movff	_pow$1398+3,exp@x+3
 15933  001C8A  ECC6  F010         	call	_exp	;wreg free
 15934  001C8E  C08A  F095         	movff	?_exp,pow@x
 15935  001C92  C08B  F096         	movff	?_exp+1,pow@x+1
 15936  001C96  C08C  F097         	movff	?_exp+2,pow@x+2
 15937  001C9A  C08D  F098         	movff	?_exp+3,pow@x+3
 15938  001C9E  0100               	movlb	0	; () banked
 15939  001CA0  51A5               	movf	pow@sign& (0+255),w,b
 15940  001CA2  0100               	movlb	0	; () banked
 15941  001CA4  B4D8               	btfsc	status,2,c
 15942  001CA6  D013               	goto	l880
 15943                           
 15944                           ; BSR set to: 0
 15945  001CA8  C095  F001         	movff	pow@x,___flneg@f1
 15946  001CAC  C096  F002         	movff	pow@x+1,___flneg@f1+1
 15947  001CB0  C097  F003         	movff	pow@x+2,___flneg@f1+2
 15948  001CB4  C098  F004         	movff	pow@x+3,___flneg@f1+3
 15949  001CB8  EC87  F001         	call	___flneg	;wreg free
 15950  001CBC  C001  F095         	movff	?___flneg,?_pow
 15951  001CC0  C002  F096         	movff	?___flneg+1,?_pow+1
 15952  001CC4  C003  F097         	movff	?___flneg+2,?_pow+2
 15953  001CC8  C004  F098         	movff	?___flneg+3,?_pow+3
 15954  001CCC  0012               	return	
 15955  001CCE                     l880:
 15956                           
 15957                           ; BSR set to: 0
 15958  001CCE  C095  F095         	movff	pow@x,?_pow
 15959  001CD2  C096  F096         	movff	pow@x+1,?_pow+1
 15960  001CD6  C097  F097         	movff	pow@x+2,?_pow+2
 15961  001CDA  C098  F098         	movff	pow@x+3,?_pow+3
 15962  001CDE  0012               	return		;funcret
 15963  001CE0                     __end_of_pow:
 15964                           	opt stack 0
 15965                           tblptru	equ	0xFF8
 15966                           tblptrh	equ	0xFF7
 15967                           tblptrl	equ	0xFF6
 15968                           tablat	equ	0xFF5
 15969                           prodh	equ	0xFF4
 15970                           prodl	equ	0xFF3
 15971                           postinc0	equ	0xFEE
 15972                           wreg	equ	0xFE8
 15973                           indf2	equ	0xFDF
 15974                           postinc2	equ	0xFDE
 15975                           postdec2	equ	0xFDD
 15976                           fsr2h	equ	0xFDA
 15977                           fsr2l	equ	0xFD9
 15978                           status	equ	0xFD8
 15979                           
 15980 ;; *************** function _log *****************
 15981 ;; Defined at:
 15982 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\log.c"
 15983 ;; Parameters:    Size  Location     Type
 15984 ;;  x               4   36[BANK0 ] unsigned char 
 15985 ;; Auto vars:     Size  Location     Type
 15986 ;;  exponent        2   92[COMRAM] int 
 15987 ;; Return value:  Size  Location     Type
 15988 ;;                  4   36[BANK0 ] int 
 15989 ;; Registers used:
 15990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15991 ;; Tracked objects:
 15992 ;;		On entry : 0/0
 15993 ;;		On exit  : 0/0
 15994 ;;		Unchanged: 0/0
 15995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15996 ;;      Params:         0       4       0       0       0       0       0       0       0
 15997 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15998 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15999 ;;      Totals:         2       4       0       0       0       0       0       0       0
 16000 ;;Total ram usage:        6 bytes
 16001 ;; Hardware stack levels used:    1
 16002 ;; Hardware stack levels required when called:    2
 16003 ;; This function calls:
 16004 ;;		___fladd
 16005 ;;		___flmul
 16006 ;;		___xxtofl
 16007 ;;		_eval_poly
 16008 ;;		_frexp
 16009 ;; This function is called by:
 16010 ;;		_calculateProbability
 16011 ;;		_pow
 16012 ;; This function uses a non-reentrant model
 16013 ;;
 16014                           
 16015                           	psect	text25
 16016  0015DA                     __ptext25:
 16017                           	opt stack 0
 16018  0015DA                     _log:
 16019                           	opt stack 22
 16020                           
 16021                           ;incstack = 0
 16022  0015DA  0100               	movlb	0	; () banked
 16023  0015DC  AF87               	btfss	(log@x+3)& (0+255),7,b
 16024  0015DE  D00F               	goto	l3713
 16025                           
 16026                           ; BSR set to: 0
 16027  0015E0  0E00               	movlw	0
 16028  0015E2  0101               	movlb	1	; () banked
 16029  0015E4  6F3E               	movwf	(_errno+1)& (0+255),b
 16030  0015E6  0E21               	movlw	33
 16031  0015E8  6F3D               	movwf	_errno& (0+255),b
 16032  0015EA  0E00               	movlw	0
 16033  0015EC  0100               	movlb	0	; () banked
 16034  0015EE  6F84               	movwf	?_log& (0+255),b
 16035  0015F0  0E00               	movlw	0
 16036  0015F2  6F85               	movwf	(?_log+1)& (0+255),b
 16037  0015F4  0E00               	movlw	0
 16038  0015F6  6F86               	movwf	(?_log+2)& (0+255),b
 16039  0015F8  0E00               	movlw	0
 16040  0015FA  6F87               	movwf	(?_log+3)& (0+255),b
 16041                           
 16042                           ; BSR set to: 0
 16043  0015FC  0012               	return	
 16044  0015FE                     l3713:
 16045                           
 16046                           ; BSR set to: 0
 16047  0015FE  0100               	movlb	0	; () banked
 16048  001600  5184               	movf	log@x& (0+255),w,b
 16049  001602  0100               	movlb	0	; () banked
 16050  001604  1185               	iorwf	(log@x+1)& (0+255),w,b
 16051  001606  0100               	movlb	0	; () banked
 16052  001608  1186               	iorwf	(log@x+2)& (0+255),w,b
 16053  00160A  0100               	movlb	0	; () banked
 16054  00160C  1187               	iorwf	(log@x+3)& (0+255),w,b
 16055  00160E  A4D8               	btfss	status,2,c
 16056  001610  D00F               	goto	l3719
 16057                           
 16058                           ; BSR set to: 0
 16059  001612  0E00               	movlw	0
 16060  001614  0101               	movlb	1	; () banked
 16061  001616  6F3E               	movwf	(_errno+1)& (0+255),b
 16062  001618  0E22               	movlw	34
 16063  00161A  6F3D               	movwf	_errno& (0+255),b
 16064  00161C  0E00               	movlw	0
 16065  00161E  0100               	movlb	0	; () banked
 16066  001620  6F84               	movwf	?_log& (0+255),b
 16067  001622  0E00               	movlw	0
 16068  001624  6F85               	movwf	(?_log+1)& (0+255),b
 16069  001626  0E00               	movlw	0
 16070  001628  6F86               	movwf	(?_log+2)& (0+255),b
 16071  00162A  0E00               	movlw	0
 16072  00162C  6F87               	movwf	(?_log+3)& (0+255),b
 16073                           
 16074                           ; BSR set to: 0
 16075  00162E  0012               	return	
 16076  001630                     l3719:
 16077                           
 16078                           ; BSR set to: 0
 16079  001630  0E00               	movlw	0
 16080  001632  6E3B               	movwf	___flmul@a,c
 16081  001634  0E00               	movlw	0
 16082  001636  6E3C               	movwf	___flmul@a+1,c
 16083  001638  0E00               	movlw	0
 16084  00163A  6E3D               	movwf	___flmul@a+2,c
 16085  00163C  0E40               	movlw	64
 16086  00163E  6E3E               	movwf	___flmul@a+3,c
 16087  001640  0E5D               	movlw	low log@exponent
 16088  001642  6E05               	movwf	frexp@eptr,c
 16089  001644  0E00               	movlw	high log@exponent
 16090  001646  6E06               	movwf	frexp@eptr+1,c
 16091  001648  C084  F001         	movff	log@x,frexp@value
 16092  00164C  C085  F002         	movff	log@x+1,frexp@value+1
 16093  001650  C086  F003         	movff	log@x+2,frexp@value+2
 16094  001654  C087  F004         	movff	log@x+3,frexp@value+3
 16095  001658  EC01  F003         	call	_frexp	;wreg free
 16096  00165C  C001  F037         	movff	?_frexp,___flmul@b
 16097  001660  C002  F038         	movff	?_frexp+1,___flmul@b+1
 16098  001664  C003  F039         	movff	?_frexp+2,___flmul@b+2
 16099  001668  C004  F03A         	movff	?_frexp+3,___flmul@b+3
 16100  00166C  ECC8  F014         	call	___flmul	;wreg free
 16101  001670  C037  F060         	movff	?___flmul,___fladd@b
 16102  001674  C038  F061         	movff	?___flmul+1,___fladd@b+1
 16103  001678  C039  F062         	movff	?___flmul+2,___fladd@b+2
 16104  00167C  C03A  F063         	movff	?___flmul+3,___fladd@b+3
 16105  001680  0E00               	movlw	0
 16106  001682  0100               	movlb	0	; () banked
 16107  001684  6F64               	movwf	___fladd@a& (0+255),b
 16108  001686  0E00               	movlw	0
 16109  001688  6F65               	movwf	(___fladd@a+1)& (0+255),b
 16110  00168A  0E80               	movlw	128
 16111  00168C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 16112  00168E  0EBF               	movlw	191
 16113  001690  6F67               	movwf	(___fladd@a+3)& (0+255),b
 16114  001692  EC7C  F018         	call	___fladd	;wreg free
 16115  001696  C060  F084         	movff	?___fladd,log@x
 16116  00169A  C061  F085         	movff	?___fladd+1,log@x+1
 16117  00169E  C062  F086         	movff	?___fladd+2,log@x+2
 16118  0016A2  C063  F087         	movff	?___fladd+3,log@x+3
 16119  0016A6  065D               	decf	log@exponent,f,c
 16120  0016A8  A0D8               	btfss	status,0,c
 16121  0016AA  065E               	decf	log@exponent+1,f,c
 16122  0016AC  C084  F074         	movff	log@x,eval_poly@x
 16123  0016B0  C085  F075         	movff	log@x+1,eval_poly@x+1
 16124  0016B4  C086  F076         	movff	log@x+2,eval_poly@x+2
 16125  0016B8  C087  F077         	movff	log@x+3,eval_poly@x+3
 16126  0016BC  0E9F               	movlw	low log@coeff
 16127  0016BE  0100               	movlb	0	; () banked
 16128  0016C0  6F78               	movwf	eval_poly@d& (0+255),b
 16129  0016C2  0E7D               	movlw	high log@coeff
 16130  0016C4  0100               	movlb	0	; () banked
 16131  0016C6  6F79               	movwf	(eval_poly@d+1)& (0+255),b
 16132  0016C8  0E00               	movlw	0
 16133  0016CA  0100               	movlb	0	; () banked
 16134  0016CC  6F7B               	movwf	(eval_poly@n+1)& (0+255),b
 16135  0016CE  0E08               	movlw	8
 16136  0016D0  6F7A               	movwf	eval_poly@n& (0+255),b
 16137  0016D2  EC1D  F006         	call	_eval_poly	;wreg free
 16138  0016D6  C074  F084         	movff	?_eval_poly,log@x
 16139  0016DA  C075  F085         	movff	?_eval_poly+1,log@x+1
 16140  0016DE  C076  F086         	movff	?_eval_poly+2,log@x+2
 16141  0016E2  C077  F087         	movff	?_eval_poly+3,log@x+3
 16142  0016E6  0E18               	movlw	24
 16143  0016E8  6E3B               	movwf	___flmul@a,c
 16144  0016EA  0E72               	movlw	114
 16145  0016EC  6E3C               	movwf	___flmul@a+1,c
 16146  0016EE  0E31               	movlw	49
 16147  0016F0  6E3D               	movwf	___flmul@a+2,c
 16148  0016F2  0E3F               	movlw	63
 16149  0016F4  6E3E               	movwf	___flmul@a+3,c
 16150  0016F6  C05D  F007         	movff	log@exponent,___xxtofl@val
 16151  0016FA  C05E  F008         	movff	log@exponent+1,___xxtofl@val+1
 16152  0016FE  0E00               	movlw	0
 16153  001700  BE08               	btfsc	___xxtofl@val+1,7,c
 16154  001702  0EFF               	movlw	-1
 16155  001704  6E09               	movwf	___xxtofl@val+2,c
 16156  001706  6E0A               	movwf	___xxtofl@val+3,c
 16157  001708  0E01               	movlw	1
 16158  00170A  EC95  F009         	call	___xxtofl
 16159  00170E  C007  F037         	movff	?___xxtofl,___flmul@b
 16160  001712  C008  F038         	movff	?___xxtofl+1,___flmul@b+1
 16161  001716  C009  F039         	movff	?___xxtofl+2,___flmul@b+2
 16162  00171A  C00A  F03A         	movff	?___xxtofl+3,___flmul@b+3
 16163  00171E  ECC8  F014         	call	___flmul	;wreg free
 16164  001722  C037  F060         	movff	?___flmul,___fladd@b
 16165  001726  C038  F061         	movff	?___flmul+1,___fladd@b+1
 16166  00172A  C039  F062         	movff	?___flmul+2,___fladd@b+2
 16167  00172E  C03A  F063         	movff	?___flmul+3,___fladd@b+3
 16168  001732  C084  F064         	movff	log@x,___fladd@a
 16169  001736  C085  F065         	movff	log@x+1,___fladd@a+1
 16170  00173A  C086  F066         	movff	log@x+2,___fladd@a+2
 16171  00173E  C087  F067         	movff	log@x+3,___fladd@a+3
 16172  001742  EC7C  F018         	call	___fladd	;wreg free
 16173  001746  C060  F084         	movff	?___fladd,?_log
 16174  00174A  C061  F085         	movff	?___fladd+1,?_log+1
 16175  00174E  C062  F086         	movff	?___fladd+2,?_log+2
 16176  001752  C063  F087         	movff	?___fladd+3,?_log+3
 16177  001756  0012               	return	
 16178  001758                     __end_of_log:
 16179                           	opt stack 0
 16180                           tblptru	equ	0xFF8
 16181                           tblptrh	equ	0xFF7
 16182                           tblptrl	equ	0xFF6
 16183                           tablat	equ	0xFF5
 16184                           prodh	equ	0xFF4
 16185                           prodl	equ	0xFF3
 16186                           postinc0	equ	0xFEE
 16187                           wreg	equ	0xFE8
 16188                           indf2	equ	0xFDF
 16189                           postinc2	equ	0xFDE
 16190                           postdec2	equ	0xFDD
 16191                           fsr2h	equ	0xFDA
 16192                           fsr2l	equ	0xFD9
 16193                           status	equ	0xFD8
 16194                           
 16195 ;; *************** function _exp *****************
 16196 ;; Defined at:
 16197 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\exp.c"
 16198 ;; Parameters:    Size  Location     Type
 16199 ;;  x               4   42[BANK0 ] int 
 16200 ;; Auto vars:     Size  Location     Type
 16201 ;;  exponent        2   50[BANK0 ] int 
 16202 ;;  sign            1   52[BANK0 ] unsigned char 
 16203 ;; Return value:  Size  Location     Type
 16204 ;;                  4   42[BANK0 ] unsigned char 
 16205 ;; Registers used:
 16206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16207 ;; Tracked objects:
 16208 ;;		On entry : 0/0
 16209 ;;		On exit  : 0/0
 16210 ;;		Unchanged: 0/0
 16211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16212 ;;      Params:         0       4       0       0       0       0       0       0       0
 16213 ;;      Locals:         0       7       0       0       0       0       0       0       0
 16214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16215 ;;      Totals:         0      11       0       0       0       0       0       0       0
 16216 ;;Total ram usage:       11 bytes
 16217 ;; Hardware stack levels used:    1
 16218 ;; Hardware stack levels required when called:    2
 16219 ;; This function calls:
 16220 ;;		___fldiv
 16221 ;;		___flge
 16222 ;;		___flmul
 16223 ;;		___flneg
 16224 ;;		___flsub
 16225 ;;		___fltol
 16226 ;;		___xxtofl
 16227 ;;		_eval_poly
 16228 ;;		_floor
 16229 ;;		_ldexp
 16230 ;; This function is called by:
 16231 ;;		_calculateProbability
 16232 ;;		_pow
 16233 ;; This function uses a non-reentrant model
 16234 ;;
 16235                           
 16236                           	psect	text26
 16237  00218C                     __ptext26:
 16238                           	opt stack 0
 16239  00218C                     _exp:
 16240                           	opt stack 22
 16241                           
 16242                           ;incstack = 0
 16243  00218C  0100               	movlb	0	; () banked
 16244  00218E  518A               	movf	exp@x& (0+255),w,b
 16245  002190  0100               	movlb	0	; () banked
 16246  002192  118B               	iorwf	(exp@x+1)& (0+255),w,b
 16247  002194  0100               	movlb	0	; () banked
 16248  002196  118C               	iorwf	(exp@x+2)& (0+255),w,b
 16249  002198  0100               	movlb	0	; () banked
 16250  00219A  118D               	iorwf	(exp@x+3)& (0+255),w,b
 16251  00219C  A4D8               	btfss	status,2,c
 16252  00219E  D00A               	goto	l3667
 16253                           
 16254                           ; BSR set to: 0
 16255  0021A0  0E00               	movlw	0
 16256  0021A2  0100               	movlb	0	; () banked
 16257  0021A4  6F8A               	movwf	?_exp& (0+255),b
 16258  0021A6  0E00               	movlw	0
 16259  0021A8  6F8B               	movwf	(?_exp+1)& (0+255),b
 16260  0021AA  0E80               	movlw	128
 16261  0021AC  6F8C               	movwf	(?_exp+2)& (0+255),b
 16262  0021AE  0E3F               	movlw	63
 16263  0021B0  6F8D               	movwf	(?_exp+3)& (0+255),b
 16264                           
 16265                           ; BSR set to: 0
 16266  0021B2  0012               	return	
 16267  0021B4                     l3667:
 16268                           
 16269                           ; BSR set to: 0
 16270  0021B4  0E18               	movlw	24
 16271  0021B6  6E01               	movwf	___flge@ff1,c
 16272  0021B8  0E72               	movlw	114
 16273  0021BA  6E02               	movwf	___flge@ff1+1,c
 16274  0021BC  0E31               	movlw	49
 16275  0021BE  6E03               	movwf	___flge@ff1+2,c
 16276  0021C0  0E44               	movlw	68
 16277  0021C2  6E04               	movwf	___flge@ff1+3,c
 16278  0021C4  C08A  F005         	movff	exp@x,___flge@ff2
 16279  0021C8  C08B  F006         	movff	exp@x+1,___flge@ff2+1
 16280  0021CC  C08C  F007         	movff	exp@x+2,___flge@ff2+2
 16281  0021D0  C08D  F008         	movff	exp@x+3,___flge@ff2+3
 16282  0021D4  EC34  F007         	call	___flge	;wreg free
 16283  0021D8  B0D8               	btfsc	status,0,c
 16284  0021DA  D00F               	goto	l3673
 16285  0021DC  0E00               	movlw	0
 16286  0021DE  0101               	movlb	1	; () banked
 16287  0021E0  6F3E               	movwf	(_errno+1)& (0+255),b
 16288  0021E2  0E22               	movlw	34
 16289  0021E4  6F3D               	movwf	_errno& (0+255),b
 16290  0021E6  0EFF               	movlw	255
 16291  0021E8  0100               	movlb	0	; () banked
 16292  0021EA  6F8A               	movwf	?_exp& (0+255),b
 16293  0021EC  0EFF               	movlw	255
 16294  0021EE  6F8B               	movwf	(?_exp+1)& (0+255),b
 16295  0021F0  0E7F               	movlw	127
 16296  0021F2  6F8C               	movwf	(?_exp+2)& (0+255),b
 16297  0021F4  0E7F               	movlw	127
 16298  0021F6  6F8D               	movwf	(?_exp+3)& (0+255),b
 16299                           
 16300                           ; BSR set to: 0
 16301  0021F8  0012               	return	
 16302  0021FA                     l3673:
 16303  0021FA  C08A  F001         	movff	exp@x,___flge@ff1
 16304  0021FE  C08B  F002         	movff	exp@x+1,___flge@ff1+1
 16305  002202  C08C  F003         	movff	exp@x+2,___flge@ff1+2
 16306  002206  C08D  F004         	movff	exp@x+3,___flge@ff1+3
 16307  00220A  0E87               	movlw	135
 16308  00220C  6E05               	movwf	___flge@ff2,c
 16309  00220E  0E48               	movlw	72
 16310  002210  6E06               	movwf	___flge@ff2+1,c
 16311  002212  0E3A               	movlw	58
 16312  002214  6E07               	movwf	___flge@ff2+2,c
 16313  002216  0EC4               	movlw	196
 16314  002218  6E08               	movwf	___flge@ff2+3,c
 16315  00221A  EC34  F007         	call	___flge	;wreg free
 16316  00221E  B0D8               	btfsc	status,0,c
 16317  002220  D00F               	goto	l3679
 16318  002222  0E00               	movlw	0
 16319  002224  0101               	movlb	1	; () banked
 16320  002226  6F3E               	movwf	(_errno+1)& (0+255),b
 16321  002228  0E22               	movlw	34
 16322  00222A  6F3D               	movwf	_errno& (0+255),b
 16323  00222C  0E00               	movlw	0
 16324  00222E  0100               	movlb	0	; () banked
 16325  002230  6F8A               	movwf	?_exp& (0+255),b
 16326  002232  0E00               	movlw	0
 16327  002234  6F8B               	movwf	(?_exp+1)& (0+255),b
 16328  002236  0E00               	movlw	0
 16329  002238  6F8C               	movwf	(?_exp+2)& (0+255),b
 16330  00223A  0E00               	movlw	0
 16331  00223C  6F8D               	movwf	(?_exp+3)& (0+255),b
 16332                           
 16333                           ; BSR set to: 0
 16334  00223E  0012               	return	
 16335  002240                     l3679:
 16336  002240  0100               	movlb	0	; () banked
 16337  002242  AF8D               	btfss	(exp@x+3)& (0+255),7,b
 16338  002244  D002               	goto	u4120
 16339  002246  0E01               	movlw	1
 16340  002248  D001               	goto	u4130
 16341  00224A                     u4120:
 16342  00224A  0E00               	movlw	0
 16343  00224C                     u4130:
 16344  00224C  0100               	movlb	0	; () banked
 16345  00224E  6F94               	movwf	exp@sign& (0+255),b
 16346                           
 16347                           ; BSR set to: 0
 16348  002250  0100               	movlb	0	; () banked
 16349  002252  5194               	movf	exp@sign& (0+255),w,b
 16350  002254  0100               	movlb	0	; () banked
 16351  002256  B4D8               	btfsc	status,2,c
 16352  002258  D012               	goto	l3685
 16353                           
 16354                           ; BSR set to: 0
 16355  00225A  C08A  F001         	movff	exp@x,___flneg@f1
 16356  00225E  C08B  F002         	movff	exp@x+1,___flneg@f1+1
 16357  002262  C08C  F003         	movff	exp@x+2,___flneg@f1+2
 16358  002266  C08D  F004         	movff	exp@x+3,___flneg@f1+3
 16359  00226A  EC87  F001         	call	___flneg	;wreg free
 16360  00226E  C001  F08A         	movff	?___flneg,exp@x
 16361  002272  C002  F08B         	movff	?___flneg+1,exp@x+1
 16362  002276  C003  F08C         	movff	?___flneg+2,exp@x+2
 16363  00227A  C004  F08D         	movff	?___flneg+3,exp@x+3
 16364  00227E                     l3685:
 16365  00227E  C08A  F037         	movff	exp@x,___flmul@b
 16366  002282  C08B  F038         	movff	exp@x+1,___flmul@b+1
 16367  002286  C08C  F039         	movff	exp@x+2,___flmul@b+2
 16368  00228A  C08D  F03A         	movff	exp@x+3,___flmul@b+3
 16369  00228E  0E3B               	movlw	59
 16370  002290  6E3B               	movwf	___flmul@a,c
 16371  002292  0EAA               	movlw	170
 16372  002294  6E3C               	movwf	___flmul@a+1,c
 16373  002296  0EB8               	movlw	184
 16374  002298  6E3D               	movwf	___flmul@a+2,c
 16375  00229A  0E3F               	movlw	63
 16376  00229C  6E3E               	movwf	___flmul@a+3,c
 16377  00229E  ECC8  F014         	call	___flmul	;wreg free
 16378  0022A2  C037  F08A         	movff	?___flmul,exp@x
 16379  0022A6  C038  F08B         	movff	?___flmul+1,exp@x+1
 16380  0022AA  C039  F08C         	movff	?___flmul+2,exp@x+2
 16381  0022AE  C03A  F08D         	movff	?___flmul+3,exp@x+3
 16382  0022B2  C08A  F074         	movff	exp@x,floor@x
 16383  0022B6  C08B  F075         	movff	exp@x+1,floor@x+1
 16384  0022BA  C08C  F076         	movff	exp@x+2,floor@x+2
 16385  0022BE  C08D  F077         	movff	exp@x+3,floor@x+3
 16386  0022C2  ECA5  F006         	call	_floor	;wreg free
 16387  0022C6  C074  F08E         	movff	?_floor,_exp$1395
 16388  0022CA  C075  F08F         	movff	?_floor+1,_exp$1395+1
 16389  0022CE  C076  F090         	movff	?_floor+2,_exp$1395+2
 16390  0022D2  C077  F091         	movff	?_floor+3,_exp$1395+3
 16391  0022D6  C08E  F059         	movff	_exp$1395,___fltol@f1
 16392  0022DA  C08F  F05A         	movff	_exp$1395+1,___fltol@f1+1
 16393  0022DE  C090  F05B         	movff	_exp$1395+2,___fltol@f1+2
 16394  0022E2  C091  F05C         	movff	_exp$1395+3,___fltol@f1+3
 16395  0022E6  ECB2  F003         	call	___fltol	;wreg free
 16396  0022EA  C059  F092         	movff	?___fltol,exp@exponent
 16397  0022EE  C05A  F093         	movff	?___fltol+1,exp@exponent+1
 16398  0022F2  C08A  F074         	movff	exp@x,___flsub@b
 16399  0022F6  C08B  F075         	movff	exp@x+1,___flsub@b+1
 16400  0022FA  C08C  F076         	movff	exp@x+2,___flsub@b+2
 16401  0022FE  C08D  F077         	movff	exp@x+3,___flsub@b+3
 16402  002302  C092  F007         	movff	exp@exponent,___xxtofl@val
 16403  002306  C093  F008         	movff	exp@exponent+1,___xxtofl@val+1
 16404  00230A  0E00               	movlw	0
 16405  00230C  BE08               	btfsc	___xxtofl@val+1,7,c
 16406  00230E  0EFF               	movlw	-1
 16407  002310  6E09               	movwf	___xxtofl@val+2,c
 16408  002312  6E0A               	movwf	___xxtofl@val+3,c
 16409  002314  0E01               	movlw	1
 16410  002316  EC95  F009         	call	___xxtofl
 16411  00231A  C007  F078         	movff	?___xxtofl,___flsub@a
 16412  00231E  C008  F079         	movff	?___xxtofl+1,___flsub@a+1
 16413  002322  C009  F07A         	movff	?___xxtofl+2,___flsub@a+2
 16414  002326  C00A  F07B         	movff	?___xxtofl+3,___flsub@a+3
 16415  00232A  ECBF  F001         	call	___flsub	;wreg free
 16416  00232E  C074  F08A         	movff	?___flsub,exp@x
 16417  002332  C075  F08B         	movff	?___flsub+1,exp@x+1
 16418  002336  C076  F08C         	movff	?___flsub+2,exp@x+2
 16419  00233A  C077  F08D         	movff	?___flsub+3,exp@x+3
 16420  00233E  C08A  F074         	movff	exp@x,eval_poly@x
 16421  002342  C08B  F075         	movff	exp@x+1,eval_poly@x+1
 16422  002346  C08C  F076         	movff	exp@x+2,eval_poly@x+2
 16423  00234A  C08D  F077         	movff	exp@x+3,eval_poly@x+3
 16424  00234E  0E77               	movlw	low exp@coeff
 16425  002350  0100               	movlb	0	; () banked
 16426  002352  6F78               	movwf	eval_poly@d& (0+255),b
 16427  002354  0E7D               	movlw	high exp@coeff
 16428  002356  0100               	movlb	0	; () banked
 16429  002358  6F79               	movwf	(eval_poly@d+1)& (0+255),b
 16430  00235A  0E00               	movlw	0
 16431  00235C  0100               	movlb	0	; () banked
 16432  00235E  6F7B               	movwf	(eval_poly@n+1)& (0+255),b
 16433  002360  0E09               	movlw	9
 16434  002362  6F7A               	movwf	eval_poly@n& (0+255),b
 16435  002364  EC1D  F006         	call	_eval_poly	;wreg free
 16436  002368  C074  F084         	movff	?_eval_poly,ldexp@value
 16437  00236C  C075  F085         	movff	?_eval_poly+1,ldexp@value+1
 16438  002370  C076  F086         	movff	?_eval_poly+2,ldexp@value+2
 16439  002374  C077  F087         	movff	?_eval_poly+3,ldexp@value+3
 16440  002378  C092  F088         	movff	exp@exponent,ldexp@newexp
 16441  00237C  C093  F089         	movff	exp@exponent+1,ldexp@newexp+1
 16442  002380  EC98  F005         	call	_ldexp	;wreg free
 16443  002384  C084  F08A         	movff	?_ldexp,exp@x
 16444  002388  C085  F08B         	movff	?_ldexp+1,exp@x+1
 16445  00238C  C086  F08C         	movff	?_ldexp+2,exp@x+2
 16446  002390  C087  F08D         	movff	?_ldexp+3,exp@x+3
 16447  002394  0100               	movlb	0	; () banked
 16448  002396  5194               	movf	exp@sign& (0+255),w,b
 16449  002398  0100               	movlb	0	; () banked
 16450  00239A  B4D8               	btfsc	status,2,c
 16451  00239C  D034               	goto	l556
 16452                           
 16453                           ; BSR set to: 0
 16454  00239E  0100               	movlb	0	; () banked
 16455  0023A0  298A               	incf	exp@x& (0+255),w,b
 16456  0023A2  E116               	bnz	l3703
 16457  0023A4  0100               	movlb	0	; () banked
 16458  0023A6  298B               	incf	(exp@x+1)& (0+255),w,b
 16459  0023A8  E113               	bnz	l3703
 16460  0023AA  0E7F               	movlw	127
 16461  0023AC  0100               	movlb	0	; () banked
 16462  0023AE  198C               	xorwf	(exp@x+2)& (0+255),w,b
 16463  0023B0  E10F               	bnz	l3703
 16464  0023B2  0E7F               	movlw	127
 16465  0023B4  0100               	movlb	0	; () banked
 16466  0023B6  198D               	xorwf	(exp@x+3)& (0+255),w,b
 16467  0023B8  A4D8               	btfss	status,2,c
 16468  0023BA  D00A               	goto	l3703
 16469                           
 16470                           ; BSR set to: 0
 16471  0023BC  0E00               	movlw	0
 16472  0023BE  0100               	movlb	0	; () banked
 16473  0023C0  6F8A               	movwf	?_exp& (0+255),b
 16474  0023C2  0E00               	movlw	0
 16475  0023C4  6F8B               	movwf	(?_exp+1)& (0+255),b
 16476  0023C6  0E00               	movlw	0
 16477  0023C8  6F8C               	movwf	(?_exp+2)& (0+255),b
 16478  0023CA  0E00               	movlw	0
 16479  0023CC  6F8D               	movwf	(?_exp+3)& (0+255),b
 16480                           
 16481                           ; BSR set to: 0
 16482  0023CE  0012               	return	
 16483  0023D0                     l3703:
 16484                           
 16485                           ; BSR set to: 0
 16486  0023D0  0E00               	movlw	0
 16487  0023D2  6E1E               	movwf	___fldiv@b,c
 16488  0023D4  0E00               	movlw	0
 16489  0023D6  6E1F               	movwf	___fldiv@b+1,c
 16490  0023D8  0E80               	movlw	128
 16491  0023DA  6E20               	movwf	___fldiv@b+2,c
 16492  0023DC  0E3F               	movlw	63
 16493  0023DE  6E21               	movwf	___fldiv@b+3,c
 16494  0023E0  C08A  F022         	movff	exp@x,___fldiv@a
 16495  0023E4  C08B  F023         	movff	exp@x+1,___fldiv@a+1
 16496  0023E8  C08C  F024         	movff	exp@x+2,___fldiv@a+2
 16497  0023EC  C08D  F025         	movff	exp@x+3,___fldiv@a+3
 16498  0023F0  EC0C  F012         	call	___fldiv	;wreg free
 16499  0023F4  C01E  F08A         	movff	?___fldiv,?_exp
 16500  0023F8  C01F  F08B         	movff	?___fldiv+1,?_exp+1
 16501  0023FC  C020  F08C         	movff	?___fldiv+2,?_exp+2
 16502  002400  C021  F08D         	movff	?___fldiv+3,?_exp+3
 16503  002404  0012               	return	
 16504  002406                     l556:
 16505                           
 16506                           ; BSR set to: 0
 16507  002406  C08A  F08A         	movff	exp@x,?_exp
 16508  00240A  C08B  F08B         	movff	exp@x+1,?_exp+1
 16509  00240E  C08C  F08C         	movff	exp@x+2,?_exp+2
 16510  002412  C08D  F08D         	movff	exp@x+3,?_exp+3
 16511  002416  0012               	return		;funcret
 16512  002418                     __end_of_exp:
 16513                           	opt stack 0
 16514                           tblptru	equ	0xFF8
 16515                           tblptrh	equ	0xFF7
 16516                           tblptrl	equ	0xFF6
 16517                           tablat	equ	0xFF5
 16518                           prodh	equ	0xFF4
 16519                           prodl	equ	0xFF3
 16520                           postinc0	equ	0xFEE
 16521                           wreg	equ	0xFE8
 16522                           indf2	equ	0xFDF
 16523                           postinc2	equ	0xFDE
 16524                           postdec2	equ	0xFDD
 16525                           fsr2h	equ	0xFDA
 16526                           fsr2l	equ	0xFD9
 16527                           status	equ	0xFD8
 16528                           
 16529 ;; *************** function _ldexp *****************
 16530 ;; Defined at:
 16531 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
 16532 ;; Parameters:    Size  Location     Type
 16533 ;;  value           4   36[BANK0 ] unsigned char 
 16534 ;;  newexp          2   40[BANK0 ] int 
 16535 ;; Auto vars:     Size  Location     Type
 16536 ;;		None
 16537 ;; Return value:  Size  Location     Type
 16538 ;;                  4   36[BANK0 ] int 
 16539 ;; Registers used:
 16540 ;;		wreg, status,2, status,0
 16541 ;; Tracked objects:
 16542 ;;		On entry : 0/0
 16543 ;;		On exit  : 0/0
 16544 ;;		Unchanged: 0/0
 16545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16546 ;;      Params:         0       6       0       0       0       0       0       0       0
 16547 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16548 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16549 ;;      Totals:         2       6       0       0       0       0       0       0       0
 16550 ;;Total ram usage:        8 bytes
 16551 ;; Hardware stack levels used:    1
 16552 ;; This function calls:
 16553 ;;		Nothing
 16554 ;; This function is called by:
 16555 ;;		_exp
 16556 ;; This function uses a non-reentrant model
 16557 ;;
 16558                           
 16559                           	psect	text27
 16560  000B30                     __ptext27:
 16561                           	opt stack 0
 16562  000B30                     _ldexp:
 16563                           	opt stack 23
 16564                           
 16565                           ;incstack = 0
 16566  000B30  0100               	movlb	0	; () banked
 16567  000B32  5184               	movf	ldexp@value& (0+255),w,b
 16568  000B34  0100               	movlb	0	; () banked
 16569  000B36  1185               	iorwf	(ldexp@value+1)& (0+255),w,b
 16570  000B38  0100               	movlb	0	; () banked
 16571  000B3A  1186               	iorwf	(ldexp@value+2)& (0+255),w,b
 16572  000B3C  0100               	movlb	0	; () banked
 16573  000B3E  1187               	iorwf	(ldexp@value+3)& (0+255),w,b
 16574  000B40  A4D8               	btfss	status,2,c
 16575  000B42  D00A               	goto	l3623
 16576                           
 16577                           ; BSR set to: 0
 16578  000B44  0E00               	movlw	0
 16579  000B46  0100               	movlb	0	; () banked
 16580  000B48  6F84               	movwf	?_ldexp& (0+255),b
 16581  000B4A  0E00               	movlw	0
 16582  000B4C  6F85               	movwf	(?_ldexp+1)& (0+255),b
 16583  000B4E  0E00               	movlw	0
 16584  000B50  6F86               	movwf	(?_ldexp+2)& (0+255),b
 16585  000B52  0E00               	movlw	0
 16586  000B54  6F87               	movwf	(?_ldexp+3)& (0+255),b
 16587                           
 16588                           ; BSR set to: 0
 16589  000B56  0012               	return	
 16590  000B58                     l3623:
 16591                           
 16592                           ; BSR set to: 0
 16593  000B58  0100               	movlb	0	; () banked
 16594  000B5A  5187               	movf	(ldexp@value+3)& (0+255),w,b
 16595  000B5C  0B7F               	andlw	127
 16596  000B5E  6E5D               	movwf	??_ldexp& (0+255),c
 16597  000B60  6A5E               	clrf	(??_ldexp+1)& (0+255),c
 16598  000B62  90D8               	bcf	status,0,c
 16599  000B64  365D               	rlcf	??_ldexp,f,c
 16600  000B66  365E               	rlcf	??_ldexp+1,f,c
 16601  000B68  505D               	movf	??_ldexp,w,c
 16602  000B6A  0100               	movlb	0	; () banked
 16603  000B6C  2788               	addwf	ldexp@newexp& (0+255),f,b
 16604  000B6E  505E               	movf	??_ldexp+1,w,c
 16605  000B70  0100               	movlb	0	; () banked
 16606  000B72  2389               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 16607  000B74  0100               	movlb	0	; () banked
 16608  000B76  AF86               	btfss	(ldexp@value+2)& (0+255),7,b
 16609  000B78  D003               	goto	u4040
 16610  000B7A  6A5D               	clrf	??_ldexp& (0+255),c
 16611  000B7C  2A5D               	incf	??_ldexp& (0+255),f,c
 16612  000B7E  D001               	goto	u4048
 16613  000B80                     u4040:
 16614  000B80  6A5D               	clrf	??_ldexp& (0+255),c
 16615  000B82                     u4048:
 16616  000B82  505D               	movf	??_ldexp,w,c
 16617  000B84  0100               	movlb	0	; () banked
 16618  000B86  2788               	addwf	ldexp@newexp& (0+255),f,b
 16619  000B88  0E00               	movlw	0
 16620  000B8A  2389               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 16621  000B8C  0100               	movlb	0	; () banked
 16622  000B8E  AF89               	btfss	(ldexp@newexp+1)& (0+255),7,b
 16623  000B90  D00F               	goto	l3631
 16624                           
 16625                           ; BSR set to: 0
 16626  000B92  0E00               	movlw	0
 16627  000B94  0101               	movlb	1	; () banked
 16628  000B96  6F3E               	movwf	(_errno+1)& (0+255),b
 16629  000B98  0E22               	movlw	34
 16630  000B9A  6F3D               	movwf	_errno& (0+255),b
 16631  000B9C  0E00               	movlw	0
 16632  000B9E  0100               	movlb	0	; () banked
 16633  000BA0  6F84               	movwf	?_ldexp& (0+255),b
 16634  000BA2  0E00               	movlw	0
 16635  000BA4  6F85               	movwf	(?_ldexp+1)& (0+255),b
 16636  000BA6  0E00               	movlw	0
 16637  000BA8  6F86               	movwf	(?_ldexp+2)& (0+255),b
 16638  000BAA  0E00               	movlw	0
 16639  000BAC                     L9:
 16640  000BAC  6F87               	movwf	(?_ldexp+3)& (0+255),b
 16641                           
 16642                           ; BSR set to: 0
 16643  000BAE  0012               	return	
 16644  000BB0                     l3631:
 16645                           
 16646                           ; BSR set to: 0
 16647  000BB0  0100               	movlb	0	; () banked
 16648  000BB2  BF89               	btfsc	(ldexp@newexp+1)& (0+255),7,b
 16649  000BB4  D01E               	goto	l3647
 16650  000BB6  0100               	movlb	0	; () banked
 16651  000BB8  0589               	decf	(ldexp@newexp+1)& (0+255),w,b
 16652  000BBA  A0D8               	btfss	status,0,c
 16653  000BBC  D01A               	goto	l3647
 16654                           
 16655                           ; BSR set to: 0
 16656  000BBE  0E00               	movlw	0
 16657  000BC0  0101               	movlb	1	; () banked
 16658  000BC2  6F3E               	movwf	(_errno+1)& (0+255),b
 16659  000BC4  0E22               	movlw	34
 16660  000BC6  6F3D               	movwf	_errno& (0+255),b
 16661                           
 16662                           ; BSR set to: 1
 16663  000BC8  0100               	movlb	0	; () banked
 16664  000BCA  AF87               	btfss	(ldexp@value+3)& (0+255),7,b
 16665  000BCC  D009               	goto	l3643
 16666                           
 16667                           ; BSR set to: 0
 16668  000BCE  0EFF               	movlw	255
 16669  000BD0  0100               	movlb	0	; () banked
 16670  000BD2  6F84               	movwf	?_ldexp& (0+255),b
 16671  000BD4  0EFF               	movlw	255
 16672  000BD6  6F85               	movwf	(?_ldexp+1)& (0+255),b
 16673  000BD8  0E7F               	movlw	127
 16674  000BDA  6F86               	movwf	(?_ldexp+2)& (0+255),b
 16675  000BDC  0EFF               	movlw	255
 16676  000BDE  D7E6               	goto	L9
 16677  000BE0                     l3643:
 16678                           
 16679                           ; BSR set to: 0
 16680  000BE0  0EFF               	movlw	255
 16681  000BE2  0100               	movlb	0	; () banked
 16682  000BE4  6F84               	movwf	?_ldexp& (0+255),b
 16683  000BE6  0EFF               	movlw	255
 16684  000BE8  6F85               	movwf	(?_ldexp+1)& (0+255),b
 16685  000BEA  0E7F               	movlw	127
 16686  000BEC  6F86               	movwf	(?_ldexp+2)& (0+255),b
 16687  000BEE  0E7F               	movlw	127
 16688  000BF0  D7DD               	goto	L9
 16689  000BF2                     l3647:
 16690                           
 16691                           ; BSR set to: 0
 16692  000BF2  0100               	movlb	0	; () banked
 16693  000BF4  3589               	rlcf	(ldexp@newexp+1)& (0+255),w,b
 16694  000BF6  3189               	rrcf	(ldexp@newexp+1)& (0+255),w,b
 16695  000BF8  6E5E               	movwf	(??_ldexp+1)& (0+255),c
 16696  000BFA  0100               	movlb	0	; () banked
 16697  000BFC  3188               	rrcf	ldexp@newexp& (0+255),w,b
 16698  000BFE  6E5D               	movwf	??_ldexp& (0+255),c
 16699  000C00  0100               	movlb	0	; () banked
 16700  000C02  5187               	movf	(ldexp@value+3)& (0+255),w,b
 16701  000C04  185D               	xorwf	??_ldexp,w,c
 16702  000C06  0B80               	andlw	-128
 16703  000C08  185D               	xorwf	??_ldexp,w,c
 16704  000C0A  0100               	movlb	0	; () banked
 16705  000C0C  6F87               	movwf	(ldexp@value+3)& (0+255),b
 16706  000C0E  C088  F05D         	movff	ldexp@newexp,??_ldexp
 16707  000C12  0E01               	movlw	1
 16708  000C14  165D               	andwf	??_ldexp,f,c
 16709  000C16  325D               	rrcf	??_ldexp,f,c
 16710  000C18  325D               	rrcf	??_ldexp,f,c
 16711  000C1A  0100               	movlb	0	; () banked
 16712  000C1C  5186               	movf	(ldexp@value+2)& (0+255),w,b
 16713  000C1E  185D               	xorwf	??_ldexp,w,c
 16714  000C20  0B7F               	andlw	-129
 16715  000C22  185D               	xorwf	??_ldexp,w,c
 16716  000C24  0100               	movlb	0	; () banked
 16717  000C26  6F86               	movwf	(ldexp@value+2)& (0+255),b
 16718                           
 16719                           ; BSR set to: 0
 16720                           
 16721                           ; BSR set to: 0
 16722                           
 16723                           ; BSR set to: 0
 16724  000C28  C084  F084         	movff	ldexp@value,?_ldexp
 16725  000C2C  C085  F085         	movff	ldexp@value+1,?_ldexp+1
 16726  000C30  C086  F086         	movff	ldexp@value+2,?_ldexp+2
 16727  000C34  C087  F087         	movff	ldexp@value+3,?_ldexp+3
 16728  000C38  0012               	return	
 16729  000C3A                     __end_of_ldexp:
 16730                           	opt stack 0
 16731                           tblptru	equ	0xFF8
 16732                           tblptrh	equ	0xFF7
 16733                           tblptrl	equ	0xFF6
 16734                           tablat	equ	0xFF5
 16735                           prodh	equ	0xFF4
 16736                           prodl	equ	0xFF3
 16737                           postinc0	equ	0xFEE
 16738                           wreg	equ	0xFE8
 16739                           indf2	equ	0xFDF
 16740                           postinc2	equ	0xFDE
 16741                           postdec2	equ	0xFDD
 16742                           fsr2h	equ	0xFDA
 16743                           fsr2l	equ	0xFD9
 16744                           status	equ	0xFD8
 16745                           
 16746 ;; *************** function _floor *****************
 16747 ;; Defined at:
 16748 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\floor.c"
 16749 ;; Parameters:    Size  Location     Type
 16750 ;;  x               4   20[BANK0 ] int 
 16751 ;; Auto vars:     Size  Location     Type
 16752 ;;  i               4   24[BANK0 ] int 
 16753 ;;  expon           2   28[BANK0 ] int 
 16754 ;; Return value:  Size  Location     Type
 16755 ;;                  4   20[BANK0 ] int 
 16756 ;; Registers used:
 16757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16758 ;; Tracked objects:
 16759 ;;		On entry : 0/0
 16760 ;;		On exit  : 0/0
 16761 ;;		Unchanged: 0/0
 16762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16763 ;;      Params:         0       4       0       0       0       0       0       0       0
 16764 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16766 ;;      Totals:         0      10       0       0       0       0       0       0       0
 16767 ;;Total ram usage:       10 bytes
 16768 ;; Hardware stack levels used:    1
 16769 ;; Hardware stack levels required when called:    1
 16770 ;; This function calls:
 16771 ;;		___fladd
 16772 ;;		___flge
 16773 ;;		___fltol
 16774 ;;		___xxtofl
 16775 ;;		_frexp
 16776 ;; This function is called by:
 16777 ;;		_exp
 16778 ;; This function uses a non-reentrant model
 16779 ;;
 16780                           
 16781                           	psect	text28
 16782  000D4A                     __ptext28:
 16783                           	opt stack 0
 16784  000D4A                     _floor:
 16785                           	opt stack 22
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;incstack = 0
 16789  000D4A  C074  F001         	movff	floor@x,frexp@value
 16790  000D4E  C075  F002         	movff	floor@x+1,frexp@value+1
 16791  000D52  C076  F003         	movff	floor@x+2,frexp@value+2
 16792  000D56  C077  F004         	movff	floor@x+3,frexp@value+3
 16793  000D5A  0E7C               	movlw	low floor@expon
 16794  000D5C  6E05               	movwf	frexp@eptr,c
 16795  000D5E  0E00               	movlw	high floor@expon
 16796  000D60  6E06               	movwf	frexp@eptr+1,c
 16797  000D62  EC01  F003         	call	_frexp	;wreg free
 16798  000D66  0100               	movlb	0	; () banked
 16799  000D68  AF7D               	btfss	(floor@expon+1)& (0+255),7,b
 16800  000D6A  D017               	goto	l3601
 16801                           
 16802                           ; BSR set to: 0
 16803  000D6C  0100               	movlb	0	; () banked
 16804  000D6E  AF77               	btfss	(floor@x+3)& (0+255),7,b
 16805  000D70  D00A               	goto	l3597
 16806                           
 16807                           ; BSR set to: 0
 16808  000D72  0E00               	movlw	0
 16809  000D74  0100               	movlb	0	; () banked
 16810  000D76  6F74               	movwf	?_floor& (0+255),b
 16811  000D78  0E00               	movlw	0
 16812  000D7A  6F75               	movwf	(?_floor+1)& (0+255),b
 16813  000D7C  0E80               	movlw	128
 16814  000D7E  6F76               	movwf	(?_floor+2)& (0+255),b
 16815  000D80  0EBF               	movlw	191
 16816  000D82  6F77               	movwf	(?_floor+3)& (0+255),b
 16817                           
 16818                           ; BSR set to: 0
 16819  000D84  0012               	return	
 16820  000D86                     l3597:
 16821                           
 16822                           ; BSR set to: 0
 16823  000D86  0E00               	movlw	0
 16824  000D88  0100               	movlb	0	; () banked
 16825  000D8A  6F74               	movwf	?_floor& (0+255),b
 16826  000D8C  0E00               	movlw	0
 16827  000D8E  6F75               	movwf	(?_floor+1)& (0+255),b
 16828  000D90  0E00               	movlw	0
 16829  000D92  6F76               	movwf	(?_floor+2)& (0+255),b
 16830  000D94  0E00               	movlw	0
 16831  000D96  6F77               	movwf	(?_floor+3)& (0+255),b
 16832                           
 16833                           ; BSR set to: 0
 16834  000D98  0012               	return	
 16835  000D9A                     l3601:
 16836                           
 16837                           ; BSR set to: 0
 16838  000D9A  0100               	movlb	0	; () banked
 16839  000D9C  517D               	movf	(floor@expon+1)& (0+255),w,b
 16840  000D9E  E105               	bnz	u4000
 16841  000DA0  0E1D               	movlw	29
 16842  000DA2  0100               	movlb	0	; () banked
 16843  000DA4  5D7C               	subwf	floor@expon& (0+255),w,b
 16844  000DA6  A0D8               	btfss	status,0,c
 16845  000DA8  D009               	goto	l3605
 16846  000DAA                     u4000:
 16847                           
 16848                           ; BSR set to: 0
 16849  000DAA  C074  F074         	movff	floor@x,?_floor
 16850  000DAE  C075  F075         	movff	floor@x+1,?_floor+1
 16851  000DB2  C076  F076         	movff	floor@x+2,?_floor+2
 16852  000DB6  C077  F077         	movff	floor@x+3,?_floor+3
 16853  000DBA  0012               	return	
 16854  000DBC                     l3605:
 16855                           
 16856                           ; BSR set to: 0
 16857  000DBC  C074  F059         	movff	floor@x,___fltol@f1
 16858  000DC0  C075  F05A         	movff	floor@x+1,___fltol@f1+1
 16859  000DC4  C076  F05B         	movff	floor@x+2,___fltol@f1+2
 16860  000DC8  C077  F05C         	movff	floor@x+3,___fltol@f1+3
 16861  000DCC  ECB2  F003         	call	___fltol	;wreg free
 16862  000DD0  C059  F007         	movff	?___fltol,___xxtofl@val
 16863  000DD4  C05A  F008         	movff	?___fltol+1,___xxtofl@val+1
 16864  000DD8  C05B  F009         	movff	?___fltol+2,___xxtofl@val+2
 16865  000DDC  C05C  F00A         	movff	?___fltol+3,___xxtofl@val+3
 16866  000DE0  0E01               	movlw	1
 16867  000DE2  EC95  F009         	call	___xxtofl
 16868  000DE6  C007  F078         	movff	?___xxtofl,floor@i
 16869  000DEA  C008  F079         	movff	?___xxtofl+1,floor@i+1
 16870  000DEE  C009  F07A         	movff	?___xxtofl+2,floor@i+2
 16871  000DF2  C00A  F07B         	movff	?___xxtofl+3,floor@i+3
 16872  000DF6  C074  F001         	movff	floor@x,___flge@ff1
 16873  000DFA  C075  F002         	movff	floor@x+1,___flge@ff1+1
 16874  000DFE  C076  F003         	movff	floor@x+2,___flge@ff1+2
 16875  000E02  C077  F004         	movff	floor@x+3,___flge@ff1+3
 16876  000E06  C078  F005         	movff	floor@i,___flge@ff2
 16877  000E0A  C079  F006         	movff	floor@i+1,___flge@ff2+1
 16878  000E0E  C07A  F007         	movff	floor@i+2,___flge@ff2+2
 16879  000E12  C07B  F008         	movff	floor@i+3,___flge@ff2+3
 16880  000E16  EC34  F007         	call	___flge	;wreg free
 16881  000E1A  B0D8               	btfsc	status,0,c
 16882  000E1C  D01C               	goto	l613
 16883  000E1E  C078  F060         	movff	floor@i,___fladd@b
 16884  000E22  C079  F061         	movff	floor@i+1,___fladd@b+1
 16885  000E26  C07A  F062         	movff	floor@i+2,___fladd@b+2
 16886  000E2A  C07B  F063         	movff	floor@i+3,___fladd@b+3
 16887  000E2E  0E00               	movlw	0
 16888  000E30  0100               	movlb	0	; () banked
 16889  000E32  6F64               	movwf	___fladd@a& (0+255),b
 16890  000E34  0E00               	movlw	0
 16891  000E36  6F65               	movwf	(___fladd@a+1)& (0+255),b
 16892  000E38  0E80               	movlw	128
 16893  000E3A  6F66               	movwf	(___fladd@a+2)& (0+255),b
 16894  000E3C  0EBF               	movlw	191
 16895  000E3E  6F67               	movwf	(___fladd@a+3)& (0+255),b
 16896  000E40  EC7C  F018         	call	___fladd	;wreg free
 16897  000E44  C060  F074         	movff	?___fladd,?_floor
 16898  000E48  C061  F075         	movff	?___fladd+1,?_floor+1
 16899  000E4C  C062  F076         	movff	?___fladd+2,?_floor+2
 16900  000E50  C063  F077         	movff	?___fladd+3,?_floor+3
 16901  000E54  0012               	return	
 16902  000E56                     l613:
 16903  000E56  C078  F074         	movff	floor@i,?_floor
 16904  000E5A  C079  F075         	movff	floor@i+1,?_floor+1
 16905  000E5E  C07A  F076         	movff	floor@i+2,?_floor+2
 16906  000E62  C07B  F077         	movff	floor@i+3,?_floor+3
 16907  000E66  0012               	return		;funcret
 16908  000E68                     __end_of_floor:
 16909                           	opt stack 0
 16910                           tblptru	equ	0xFF8
 16911                           tblptrh	equ	0xFF7
 16912                           tblptrl	equ	0xFF6
 16913                           tablat	equ	0xFF5
 16914                           prodh	equ	0xFF4
 16915                           prodl	equ	0xFF3
 16916                           postinc0	equ	0xFEE
 16917                           wreg	equ	0xFE8
 16918                           indf2	equ	0xFDF
 16919                           postinc2	equ	0xFDE
 16920                           postdec2	equ	0xFDD
 16921                           fsr2h	equ	0xFDA
 16922                           fsr2l	equ	0xFD9
 16923                           status	equ	0xFD8
 16924                           
 16925 ;; *************** function _frexp *****************
 16926 ;; Defined at:
 16927 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
 16928 ;; Parameters:    Size  Location     Type
 16929 ;;  value           4    0[COMRAM] int 
 16930 ;;  eptr            2    4[COMRAM] PTR int 
 16931 ;;		 -> log@exponent(2), floor@expon(2), 
 16932 ;; Auto vars:     Size  Location     Type
 16933 ;;		None
 16934 ;; Return value:  Size  Location     Type
 16935 ;;                  4    0[COMRAM] PTR int 
 16936 ;; Registers used:
 16937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16938 ;; Tracked objects:
 16939 ;;		On entry : 0/0
 16940 ;;		On exit  : 0/0
 16941 ;;		Unchanged: 0/0
 16942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16943 ;;      Params:         6       0       0       0       0       0       0       0       0
 16944 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16945 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16946 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16947 ;;Total ram usage:        8 bytes
 16948 ;; Hardware stack levels used:    1
 16949 ;; This function calls:
 16950 ;;		Nothing
 16951 ;; This function is called by:
 16952 ;;		_floor
 16953 ;;		_log
 16954 ;; This function uses a non-reentrant model
 16955 ;;
 16956                           
 16957                           	psect	text29
 16958  000602                     __ptext29:
 16959                           	opt stack 0
 16960  000602                     _frexp:
 16961                           	opt stack 23
 16962                           
 16963                           ;incstack = 0
 16964  000602  5001               	movf	frexp@value,w,c
 16965  000604  1002               	iorwf	frexp@value+1,w,c
 16966  000606  1003               	iorwf	frexp@value+2,w,c
 16967  000608  1004               	iorwf	frexp@value+3,w,c
 16968  00060A  A4D8               	btfss	status,2,c
 16969  00060C  D011               	goto	l3347
 16970  00060E  C005  FFD9         	movff	frexp@eptr,fsr2l
 16971  000612  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 16972  000616  0E00               	movlw	0
 16973  000618  6EDE               	movwf	postinc2,c
 16974  00061A  0E00               	movlw	0
 16975  00061C  6EDD               	movwf	postdec2,c
 16976  00061E  0E00               	movlw	0
 16977  000620  6E01               	movwf	?_frexp,c
 16978  000622  0E00               	movlw	0
 16979  000624  6E02               	movwf	?_frexp+1,c
 16980  000626  0E00               	movlw	0
 16981  000628  6E03               	movwf	?_frexp+2,c
 16982  00062A  0E00               	movlw	0
 16983  00062C  6E04               	movwf	?_frexp+3,c
 16984  00062E  0012               	return	
 16985  000630                     l3347:
 16986  000630  5004               	movf	frexp@value+3,w,c
 16987  000632  0B7F               	andlw	127
 16988  000634  6E07               	movwf	??_frexp& (0+255),c
 16989  000636  6A08               	clrf	(??_frexp+1)& (0+255),c
 16990  000638  90D8               	bcf	status,0,c
 16991  00063A  3607               	rlcf	??_frexp,f,c
 16992  00063C  3608               	rlcf	??_frexp+1,f,c
 16993  00063E  C005  FFD9         	movff	frexp@eptr,fsr2l
 16994  000642  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 16995  000646  C007  FFDE         	movff	??_frexp,postinc2
 16996  00064A  C008  FFDD         	movff	??_frexp+1,postdec2
 16997  00064E  AE03               	btfss	frexp@value+2,7,c
 16998  000650  D003               	goto	u3570
 16999  000652  6A07               	clrf	??_frexp& (0+255),c
 17000  000654  2A07               	incf	??_frexp& (0+255),f,c
 17001  000656  D001               	goto	u3578
 17002  000658                     u3570:
 17003  000658  6A07               	clrf	??_frexp& (0+255),c
 17004  00065A                     u3578:
 17005  00065A  5007               	movf	??_frexp,w,c
 17006  00065C  C005  FFD9         	movff	frexp@eptr,fsr2l
 17007  000660  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 17008  000664  12DE               	iorwf	postinc2,f,c
 17009  000666  0E00               	movlw	0
 17010  000668  12DD               	iorwf	postdec2,f,c
 17011  00066A  C005  FFD9         	movff	frexp@eptr,fsr2l
 17012  00066E  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 17013  000672  0E82               	movlw	130
 17014  000674  26DE               	addwf	postinc2,f,c
 17015  000676  0EFF               	movlw	255
 17016  000678  22DD               	addwfc	postdec2,f,c
 17017  00067A  8004               	bsf	frexp@value+3,0,c
 17018  00067C  8204               	bsf	frexp@value+3,1,c
 17019  00067E  8404               	bsf	frexp@value+3,2,c
 17020  000680  8604               	bsf	frexp@value+3,3,c
 17021  000682  8804               	bsf	frexp@value+3,4,c
 17022  000684  8A04               	bsf	frexp@value+3,5,c
 17023  000686  9C04               	bcf	frexp@value+3,6,c
 17024  000688  9E03               	bcf	frexp@value+2,7,c
 17025  00068A  C001  F001         	movff	frexp@value,?_frexp
 17026  00068E  C002  F002         	movff	frexp@value+1,?_frexp+1
 17027  000692  C003  F003         	movff	frexp@value+2,?_frexp+2
 17028  000696  C004  F004         	movff	frexp@value+3,?_frexp+3
 17029  00069A  0012               	return	
 17030  00069C                     __end_of_frexp:
 17031                           	opt stack 0
 17032                           tblptru	equ	0xFF8
 17033                           tblptrh	equ	0xFF7
 17034                           tblptrl	equ	0xFF6
 17035                           tablat	equ	0xFF5
 17036                           prodh	equ	0xFF4
 17037                           prodl	equ	0xFF3
 17038                           postinc0	equ	0xFEE
 17039                           wreg	equ	0xFE8
 17040                           indf2	equ	0xFDF
 17041                           postinc2	equ	0xFDE
 17042                           postdec2	equ	0xFDD
 17043                           fsr2h	equ	0xFDA
 17044                           fsr2l	equ	0xFD9
 17045                           status	equ	0xFD8
 17046                           
 17047 ;; *************** function ___xxtofl *****************
 17048 ;; Defined at:
 17049 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;  sign            1    wreg     unsigned char 
 17052 ;;  val             4    6[COMRAM] long 
 17053 ;; Auto vars:     Size  Location     Type
 17054 ;;  sign            1   14[COMRAM] unsigned char 
 17055 ;;  arg             4   16[COMRAM] unsigned long 
 17056 ;;  exp             1   15[COMRAM] unsigned char 
 17057 ;; Return value:  Size  Location     Type
 17058 ;;                  4    6[COMRAM] unsigned char 
 17059 ;; Registers used:
 17060 ;;		wreg, status,2, status,0
 17061 ;; Tracked objects:
 17062 ;;		On entry : 0/0
 17063 ;;		On exit  : 0/0
 17064 ;;		Unchanged: 0/0
 17065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17066 ;;      Params:         4       0       0       0       0       0       0       0       0
 17067 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17068 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17069 ;;      Totals:        14       0       0       0       0       0       0       0       0
 17070 ;;Total ram usage:       14 bytes
 17071 ;; Hardware stack levels used:    1
 17072 ;; This function calls:
 17073 ;;		Nothing
 17074 ;; This function is called by:
 17075 ;;		_getAccuracy
 17076 ;;		_getRecall
 17077 ;;		_getPrecision
 17078 ;;		_printf
 17079 ;;		_exp
 17080 ;;		_floor
 17081 ;;		_log
 17082 ;;		_pow
 17083 ;;		_showOff
 17084 ;; This function uses a non-reentrant model
 17085 ;;
 17086                           
 17087                           	psect	text30
 17088  00132A                     __ptext30:
 17089                           	opt stack 0
 17090  00132A                     ___xxtofl:
 17091                           	opt stack 29
 17092                           
 17093                           ;incstack = 0
 17094                           ;___xxtofl@sign stored from wreg
 17095  00132A  6E0F               	movwf	___xxtofl@sign,c
 17096  00132C  500F               	movf	___xxtofl@sign,w,c
 17097  00132E  A4D8               	btfss	status,2,c
 17098  001330  AE0A               	btfss	___xxtofl@val+3,7,c
 17099  001332  D01A               	goto	l1027
 17100  001334  C007  F00B         	movff	___xxtofl@val,??___xxtofl
 17101  001338  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
 17102  00133C  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
 17103  001340  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
 17104  001344  1E0B               	comf	??___xxtofl,f,c
 17105  001346  1E0C               	comf	??___xxtofl+1,f,c
 17106  001348  1E0D               	comf	??___xxtofl+2,f,c
 17107  00134A  1E0E               	comf	??___xxtofl+3,f,c
 17108  00134C  2A0B               	incf	??___xxtofl,f,c
 17109  00134E  0E00               	movlw	0
 17110  001350  220C               	addwfc	??___xxtofl+1,f,c
 17111  001352  220D               	addwfc	??___xxtofl+2,f,c
 17112  001354  220E               	addwfc	??___xxtofl+3,f,c
 17113  001356  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
 17114  00135A  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
 17115  00135E  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
 17116  001362  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
 17117  001366  D008               	goto	l3409
 17118  001368                     l1027:
 17119  001368  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
 17120  00136C  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17121  001370  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17122  001374  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17123  001378                     l3409:
 17124  001378  5007               	movf	___xxtofl@val,w,c
 17125  00137A  1008               	iorwf	___xxtofl@val+1,w,c
 17126  00137C  1009               	iorwf	___xxtofl@val+2,w,c
 17127  00137E  100A               	iorwf	___xxtofl@val+3,w,c
 17128  001380  A4D8               	btfss	status,2,c
 17129  001382  D009               	goto	l3415
 17130  001384  0E00               	movlw	0
 17131  001386  6E07               	movwf	?___xxtofl,c
 17132  001388  0E00               	movlw	0
 17133  00138A  6E08               	movwf	?___xxtofl+1,c
 17134  00138C  0E00               	movlw	0
 17135  00138E  6E09               	movwf	?___xxtofl+2,c
 17136  001390  0E00               	movlw	0
 17137  001392  6E0A               	movwf	?___xxtofl+3,c
 17138  001394  0012               	return	
 17139  001396                     l3415:
 17140  001396  0E96               	movlw	150
 17141  001398  6E10               	movwf	___xxtofl@exp,c
 17142  00139A  D006               	goto	l3419
 17143  00139C                     l3417:
 17144  00139C  2A10               	incf	___xxtofl@exp,f,c
 17145  00139E  90D8               	bcf	status,0,c
 17146  0013A0  3214               	rrcf	___xxtofl@arg+3,f,c
 17147  0013A2  3213               	rrcf	___xxtofl@arg+2,f,c
 17148  0013A4  3212               	rrcf	___xxtofl@arg+1,f,c
 17149  0013A6  3211               	rrcf	___xxtofl@arg,f,c
 17150  0013A8                     l3419:
 17151  0013A8  0E00               	movlw	0
 17152  0013AA  1411               	andwf	___xxtofl@arg,w,c
 17153  0013AC  6E0B               	movwf	??___xxtofl& (0+255),c
 17154  0013AE  0E00               	movlw	0
 17155  0013B0  1412               	andwf	___xxtofl@arg+1,w,c
 17156  0013B2  6E0C               	movwf	(??___xxtofl+1)& (0+255),c
 17157  0013B4  0E00               	movlw	0
 17158  0013B6  1413               	andwf	___xxtofl@arg+2,w,c
 17159  0013B8  6E0D               	movwf	(??___xxtofl+2)& (0+255),c
 17160  0013BA  0EFE               	movlw	254
 17161  0013BC  1414               	andwf	___xxtofl@arg+3,w,c
 17162  0013BE  6E0E               	movwf	(??___xxtofl+3)& (0+255),c
 17163  0013C0  500B               	movf	??___xxtofl,w,c
 17164  0013C2  100C               	iorwf	??___xxtofl+1,w,c
 17165  0013C4  100D               	iorwf	??___xxtofl+2,w,c
 17166  0013C6  100E               	iorwf	??___xxtofl+3,w,c
 17167  0013C8  B4D8               	btfsc	status,2,c
 17168  0013CA  D00D               	goto	l1034
 17169  0013CC  D7E7               	goto	l3417
 17170  0013CE                     l3421:
 17171  0013CE  2A10               	incf	___xxtofl@exp,f,c
 17172  0013D0  0E01               	movlw	1
 17173  0013D2  2611               	addwf	___xxtofl@arg,f,c
 17174  0013D4  0E00               	movlw	0
 17175  0013D6  2212               	addwfc	___xxtofl@arg+1,f,c
 17176  0013D8  2213               	addwfc	___xxtofl@arg+2,f,c
 17177  0013DA  2214               	addwfc	___xxtofl@arg+3,f,c
 17178  0013DC  90D8               	bcf	status,0,c
 17179  0013DE  3214               	rrcf	___xxtofl@arg+3,f,c
 17180  0013E0  3213               	rrcf	___xxtofl@arg+2,f,c
 17181  0013E2  3212               	rrcf	___xxtofl@arg+1,f,c
 17182  0013E4  3211               	rrcf	___xxtofl@arg,f,c
 17183  0013E6                     l1034:
 17184  0013E6  0E00               	movlw	0
 17185  0013E8  1411               	andwf	___xxtofl@arg,w,c
 17186  0013EA  6E0B               	movwf	??___xxtofl& (0+255),c
 17187  0013EC  0E00               	movlw	0
 17188  0013EE  1412               	andwf	___xxtofl@arg+1,w,c
 17189  0013F0  6E0C               	movwf	(??___xxtofl+1)& (0+255),c
 17190  0013F2  0E00               	movlw	0
 17191  0013F4  1413               	andwf	___xxtofl@arg+2,w,c
 17192  0013F6  6E0D               	movwf	(??___xxtofl+2)& (0+255),c
 17193  0013F8  0EFF               	movlw	255
 17194  0013FA  1414               	andwf	___xxtofl@arg+3,w,c
 17195  0013FC  6E0E               	movwf	(??___xxtofl+3)& (0+255),c
 17196  0013FE  500B               	movf	??___xxtofl,w,c
 17197  001400  100C               	iorwf	??___xxtofl+1,w,c
 17198  001402  100D               	iorwf	??___xxtofl+2,w,c
 17199  001404  100E               	iorwf	??___xxtofl+3,w,c
 17200  001406  B4D8               	btfsc	status,2,c
 17201  001408  D007               	goto	l3429
 17202  00140A  D7E1               	goto	l3421
 17203  00140C                     l3427:
 17204  00140C  0610               	decf	___xxtofl@exp,f,c
 17205  00140E  90D8               	bcf	status,0,c
 17206  001410  3611               	rlcf	___xxtofl@arg,f,c
 17207  001412  3612               	rlcf	___xxtofl@arg+1,f,c
 17208  001414  3613               	rlcf	___xxtofl@arg+2,f,c
 17209  001416  3614               	rlcf	___xxtofl@arg+3,f,c
 17210  001418                     l3429:
 17211  001418  BE13               	btfsc	___xxtofl@arg+2,7,c
 17212  00141A  D003               	goto	l1041
 17213  00141C  0E02               	movlw	2
 17214  00141E  6010               	cpfslt	___xxtofl@exp,c
 17215  001420  D7F5               	goto	l3427
 17216  001422                     l1041:
 17217  001422  B010               	btfsc	___xxtofl@exp,0,c
 17218  001424  D008               	goto	l1042
 17219  001426  0EFF               	movlw	255
 17220  001428  1611               	andwf	___xxtofl@arg,f,c
 17221  00142A  0EFF               	movlw	255
 17222  00142C  1612               	andwf	___xxtofl@arg+1,f,c
 17223  00142E  0E7F               	movlw	127
 17224  001430  1613               	andwf	___xxtofl@arg+2,f,c
 17225  001432  0EFF               	movlw	255
 17226  001434  1614               	andwf	___xxtofl@arg+3,f,c
 17227  001436                     l1042:
 17228  001436  90D8               	bcf	status,0,c
 17229  001438  3210               	rrcf	___xxtofl@exp,f,c
 17230  00143A  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
 17231  00143E  6A0C               	clrf	(??___xxtofl+1)& (0+255),c
 17232  001440  6A0D               	clrf	(??___xxtofl+2)& (0+255),c
 17233  001442  6A0E               	clrf	(??___xxtofl+3)& (0+255),c
 17234  001444  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
 17235  001448  6A0D               	clrf	??___xxtofl+2,c
 17236  00144A  6A0C               	clrf	??___xxtofl+1,c
 17237  00144C  6A0B               	clrf	??___xxtofl,c
 17238  00144E  500B               	movf	??___xxtofl,w,c
 17239  001450  1211               	iorwf	___xxtofl@arg,f,c
 17240  001452  500C               	movf	??___xxtofl+1,w,c
 17241  001454  1212               	iorwf	___xxtofl@arg+1,f,c
 17242  001456  500D               	movf	??___xxtofl+2,w,c
 17243  001458  1213               	iorwf	___xxtofl@arg+2,f,c
 17244  00145A  500E               	movf	??___xxtofl+3,w,c
 17245  00145C  1214               	iorwf	___xxtofl@arg+3,f,c
 17246  00145E  500F               	movf	___xxtofl@sign,w,c
 17247  001460  A4D8               	btfss	status,2,c
 17248  001462  AE0A               	btfss	___xxtofl@val+3,7,c
 17249  001464  D001               	goto	l3441
 17250  001466  8E14               	bsf	___xxtofl@arg+3,7,c
 17251  001468                     l3441:
 17252  001468  C011  F007         	movff	___xxtofl@arg,?___xxtofl
 17253  00146C  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
 17254  001470  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
 17255  001474  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
 17256  001478  0012               	return	
 17257  00147A                     __end_of___xxtofl:
 17258                           	opt stack 0
 17259                           tblptru	equ	0xFF8
 17260                           tblptrh	equ	0xFF7
 17261                           tblptrl	equ	0xFF6
 17262                           tablat	equ	0xFF5
 17263                           prodh	equ	0xFF4
 17264                           prodl	equ	0xFF3
 17265                           postinc0	equ	0xFEE
 17266                           wreg	equ	0xFE8
 17267                           indf2	equ	0xFDF
 17268                           postinc2	equ	0xFDE
 17269                           postdec2	equ	0xFDD
 17270                           fsr2h	equ	0xFDA
 17271                           fsr2l	equ	0xFD9
 17272                           status	equ	0xFD8
 17273                           
 17274 ;; *************** function ___fltol *****************
 17275 ;; Defined at:
 17276 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
 17277 ;; Parameters:    Size  Location     Type
 17278 ;;  f1              4   88[COMRAM] unsigned char 
 17279 ;; Auto vars:     Size  Location     Type
 17280 ;;  exp1            1   93[COMRAM] unsigned char 
 17281 ;;  sign1           1   92[COMRAM] unsigned char 
 17282 ;; Return value:  Size  Location     Type
 17283 ;;                  4   88[COMRAM] long 
 17284 ;; Registers used:
 17285 ;;		wreg, status,2, status,0
 17286 ;; Tracked objects:
 17287 ;;		On entry : 0/0
 17288 ;;		On exit  : 0/0
 17289 ;;		Unchanged: 0/0
 17290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17291 ;;      Params:         4       0       0       0       0       0       0       0       0
 17292 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17293 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17294 ;;      Totals:         6       4       0       0       0       0       0       0       0
 17295 ;;Total ram usage:       10 bytes
 17296 ;; Hardware stack levels used:    1
 17297 ;; This function calls:
 17298 ;;		Nothing
 17299 ;; This function is called by:
 17300 ;;		_calculateMetrics
 17301 ;;		_getAccuracy
 17302 ;;		_printf
 17303 ;;		_exp
 17304 ;;		_floor
 17305 ;;		_pow
 17306 ;; This function uses a non-reentrant model
 17307 ;;
 17308                           
 17309                           	psect	text31
 17310  000764                     __ptext31:
 17311                           	opt stack 0
 17312  000764                     ___fltol:
 17313                           	opt stack 29
 17314                           
 17315                           ;incstack = 0
 17316  000764  345B               	rlcf	___fltol@f1+2,w,c
 17317  000766  345C               	rlcf	___fltol@f1+3,w,c
 17318  000768  6E5E               	movwf	___fltol@exp1,c
 17319  00076A  505E               	movf	___fltol@exp1,w,c
 17320  00076C  A4D8               	btfss	status,2,c
 17321  00076E  D009               	goto	l3365
 17322  000770  0E00               	movlw	0
 17323  000772  6E59               	movwf	?___fltol,c
 17324  000774  0E00               	movlw	0
 17325  000776  6E5A               	movwf	?___fltol+1,c
 17326  000778  0E00               	movlw	0
 17327  00077A  6E5B               	movwf	?___fltol+2,c
 17328  00077C  0E00               	movlw	0
 17329  00077E  6E5C               	movwf	?___fltol+3,c
 17330  000780  0012               	return	
 17331  000782                     l3365:
 17332  000782  C059  F060         	movff	___fltol@f1,??___fltol
 17333  000786  C05A  F061         	movff	___fltol@f1+1,??___fltol+1
 17334  00078A  C05B  F062         	movff	___fltol@f1+2,??___fltol+2
 17335  00078E  C05C  F063         	movff	___fltol@f1+3,??___fltol+3
 17336  000792  0E20               	movlw	32
 17337  000794  D006               	goto	u3590
 17338  000796                     u3595:
 17339  000796  0100               	movlb	0	; () banked
 17340  000798  90D8               	bcf	status,0,c
 17341  00079A  3363               	rrcf	(??___fltol+3)& (0+255),f,b
 17342  00079C  3362               	rrcf	(??___fltol+2)& (0+255),f,b
 17343  00079E  3361               	rrcf	(??___fltol+1)& (0+255),f,b
 17344  0007A0  3360               	rrcf	??___fltol& (0+255),f,b
 17345  0007A2                     u3590:
 17346  0007A2  2EE8               	decfsz	wreg,f,c
 17347  0007A4  D7F8               	goto	u3595
 17348  0007A6  0100               	movlb	0	; () banked
 17349  0007A8  5160               	movf	??___fltol& (0+255),w,b
 17350  0007AA  6E5D               	movwf	___fltol@sign1,c
 17351                           
 17352                           ; BSR set to: 0
 17353  0007AC  8E5B               	bsf	___fltol@f1+2,7,c
 17354                           
 17355                           ; BSR set to: 0
 17356  0007AE  0EFF               	movlw	255
 17357  0007B0  1659               	andwf	___fltol@f1,f,c
 17358  0007B2  0EFF               	movlw	255
 17359  0007B4  165A               	andwf	___fltol@f1+1,f,c
 17360  0007B6  0EFF               	movlw	255
 17361  0007B8  165B               	andwf	___fltol@f1+2,f,c
 17362  0007BA  0E00               	movlw	0
 17363  0007BC  165C               	andwf	___fltol@f1+3,f,c
 17364                           
 17365                           ; BSR set to: 0
 17366  0007BE  0E96               	movlw	150
 17367  0007C0  5E5E               	subwf	___fltol@exp1,f,c
 17368                           
 17369                           ; BSR set to: 0
 17370  0007C2  AE5E               	btfss	___fltol@exp1,7,c
 17371  0007C4  D016               	goto	l3385
 17372                           
 17373                           ; BSR set to: 0
 17374  0007C6  505E               	movf	___fltol@exp1,w,c
 17375  0007C8  0A80               	xorlw	128
 17376  0007CA  0F97               	addlw	151
 17377  0007CC  B0D8               	btfsc	status,0,c
 17378  0007CE  D009               	goto	l3381
 17379                           
 17380                           ; BSR set to: 0
 17381  0007D0  0E00               	movlw	0
 17382  0007D2  6E59               	movwf	?___fltol,c
 17383  0007D4  0E00               	movlw	0
 17384  0007D6  6E5A               	movwf	?___fltol+1,c
 17385  0007D8  0E00               	movlw	0
 17386  0007DA  6E5B               	movwf	?___fltol+2,c
 17387  0007DC  0E00               	movlw	0
 17388  0007DE  6E5C               	movwf	?___fltol+3,c
 17389                           
 17390                           ; BSR set to: 0
 17391  0007E0  0012               	return	
 17392  0007E2                     l3381:
 17393  0007E2  90D8               	bcf	status,0,c
 17394  0007E4  325C               	rrcf	___fltol@f1+3,f,c
 17395  0007E6  325B               	rrcf	___fltol@f1+2,f,c
 17396  0007E8  325A               	rrcf	___fltol@f1+1,f,c
 17397  0007EA  3259               	rrcf	___fltol@f1,f,c
 17398  0007EC  3E5E               	incfsz	___fltol@exp1,f,c
 17399  0007EE  D7F9               	goto	l3381
 17400  0007F0  D015               	goto	l3395
 17401  0007F2                     l3385:
 17402  0007F2  0E1F               	movlw	31
 17403  0007F4  645E               	cpfsgt	___fltol@exp1,c
 17404  0007F6  D00F               	goto	l3393
 17405  0007F8  0E00               	movlw	0
 17406  0007FA  6E59               	movwf	?___fltol,c
 17407  0007FC  0E00               	movlw	0
 17408  0007FE  6E5A               	movwf	?___fltol+1,c
 17409  000800  0E00               	movlw	0
 17410  000802  6E5B               	movwf	?___fltol+2,c
 17411  000804  0E00               	movlw	0
 17412  000806  6E5C               	movwf	?___fltol+3,c
 17413  000808  0012               	return	
 17414  00080A                     l3391:
 17415  00080A  90D8               	bcf	status,0,c
 17416  00080C  3659               	rlcf	___fltol@f1,f,c
 17417  00080E  365A               	rlcf	___fltol@f1+1,f,c
 17418  000810  365B               	rlcf	___fltol@f1+2,f,c
 17419  000812  365C               	rlcf	___fltol@f1+3,f,c
 17420  000814  065E               	decf	___fltol@exp1,f,c
 17421  000816                     l3393:
 17422  000816  505E               	movf	___fltol@exp1,w,c
 17423  000818  A4D8               	btfss	status,2,c
 17424  00081A  D7F7               	goto	l3391
 17425  00081C                     l3395:
 17426  00081C  505D               	movf	___fltol@sign1,w,c
 17427  00081E  B4D8               	btfsc	status,2,c
 17428  000820  D008               	goto	l3399
 17429  000822  1E5C               	comf	___fltol@f1+3,f,c
 17430  000824  1E5B               	comf	___fltol@f1+2,f,c
 17431  000826  1E5A               	comf	___fltol@f1+1,f,c
 17432  000828  6C59               	negf	___fltol@f1,c
 17433  00082A  0E00               	movlw	0
 17434  00082C  225A               	addwfc	___fltol@f1+1,f,c
 17435  00082E  225B               	addwfc	___fltol@f1+2,f,c
 17436  000830  225C               	addwfc	___fltol@f1+3,f,c
 17437  000832                     l3399:
 17438  000832  C059  F059         	movff	___fltol@f1,?___fltol
 17439  000836  C05A  F05A         	movff	___fltol@f1+1,?___fltol+1
 17440  00083A  C05B  F05B         	movff	___fltol@f1+2,?___fltol+2
 17441  00083E  C05C  F05C         	movff	___fltol@f1+3,?___fltol+3
 17442  000842  0012               	return	
 17443  000844                     __end_of___fltol:
 17444                           	opt stack 0
 17445                           tblptru	equ	0xFF8
 17446                           tblptrh	equ	0xFF7
 17447                           tblptrl	equ	0xFF6
 17448                           tablat	equ	0xFF5
 17449                           prodh	equ	0xFF4
 17450                           prodl	equ	0xFF3
 17451                           postinc0	equ	0xFEE
 17452                           wreg	equ	0xFE8
 17453                           indf2	equ	0xFDF
 17454                           postinc2	equ	0xFDE
 17455                           postdec2	equ	0xFDD
 17456                           fsr2h	equ	0xFDA
 17457                           fsr2l	equ	0xFD9
 17458                           status	equ	0xFD8
 17459                           
 17460 ;; *************** function ___flge *****************
 17461 ;; Defined at:
 17462 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
 17463 ;; Parameters:    Size  Location     Type
 17464 ;;  ff1             4    0[COMRAM] long 
 17465 ;;  ff2             4    4[COMRAM] long 
 17466 ;; Auto vars:     Size  Location     Type
 17467 ;;		None
 17468 ;; Return value:  Size  Location     Type
 17469 ;;		None               void
 17470 ;; Registers used:
 17471 ;;		wreg, status,2, status,0
 17472 ;; Tracked objects:
 17473 ;;		On entry : 0/0
 17474 ;;		On exit  : 0/0
 17475 ;;		Unchanged: 0/0
 17476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17477 ;;      Params:         8       0       0       0       0       0       0       0       0
 17478 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17479 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17480 ;;      Totals:        12       0       0       0       0       0       0       0       0
 17481 ;;Total ram usage:       12 bytes
 17482 ;; Hardware stack levels used:    1
 17483 ;; This function calls:
 17484 ;;		Nothing
 17485 ;; This function is called by:
 17486 ;;		_predict
 17487 ;;		_printf
 17488 ;;		_exp
 17489 ;;		_floor
 17490 ;;		_pow
 17491 ;; This function uses a non-reentrant model
 17492 ;;
 17493                           
 17494                           	psect	text32
 17495  000E68                     __ptext32:
 17496                           	opt stack 0
 17497  000E68                     ___flge:
 17498                           	opt stack 29
 17499                           
 17500                           ;incstack = 0
 17501  000E68  0E00               	movlw	0
 17502  000E6A  1401               	andwf	___flge@ff1,w,c
 17503  000E6C  6E09               	movwf	??___flge& (0+255),c
 17504  000E6E  0E00               	movlw	0
 17505  000E70  1402               	andwf	___flge@ff1+1,w,c
 17506  000E72  6E0A               	movwf	(??___flge+1)& (0+255),c
 17507  000E74  0E80               	movlw	128
 17508  000E76  1403               	andwf	___flge@ff1+2,w,c
 17509  000E78  6E0B               	movwf	(??___flge+2)& (0+255),c
 17510  000E7A  0E7F               	movlw	127
 17511  000E7C  1404               	andwf	___flge@ff1+3,w,c
 17512  000E7E  6E0C               	movwf	(??___flge+3)& (0+255),c
 17513  000E80  5009               	movf	??___flge,w,c
 17514  000E82  100A               	iorwf	??___flge+1,w,c
 17515  000E84  100B               	iorwf	??___flge+2,w,c
 17516  000E86  100C               	iorwf	??___flge+3,w,c
 17517  000E88  A4D8               	btfss	status,2,c
 17518  000E8A  D008               	goto	l3321
 17519  000E8C  0E00               	movlw	0
 17520  000E8E  6E01               	movwf	___flge@ff1,c
 17521  000E90  0E00               	movlw	0
 17522  000E92  6E02               	movwf	___flge@ff1+1,c
 17523  000E94  0E00               	movlw	0
 17524  000E96  6E03               	movwf	___flge@ff1+2,c
 17525  000E98  0E00               	movlw	0
 17526  000E9A  6E04               	movwf	___flge@ff1+3,c
 17527  000E9C                     l3321:
 17528  000E9C  0E00               	movlw	0
 17529  000E9E  1405               	andwf	___flge@ff2,w,c
 17530  000EA0  6E09               	movwf	??___flge& (0+255),c
 17531  000EA2  0E00               	movlw	0
 17532  000EA4  1406               	andwf	___flge@ff2+1,w,c
 17533  000EA6  6E0A               	movwf	(??___flge+1)& (0+255),c
 17534  000EA8  0E80               	movlw	128
 17535  000EAA  1407               	andwf	___flge@ff2+2,w,c
 17536  000EAC  6E0B               	movwf	(??___flge+2)& (0+255),c
 17537  000EAE  0E7F               	movlw	127
 17538  000EB0  1408               	andwf	___flge@ff2+3,w,c
 17539  000EB2  6E0C               	movwf	(??___flge+3)& (0+255),c
 17540  000EB4  5009               	movf	??___flge,w,c
 17541  000EB6  100A               	iorwf	??___flge+1,w,c
 17542  000EB8  100B               	iorwf	??___flge+2,w,c
 17543  000EBA  100C               	iorwf	??___flge+3,w,c
 17544  000EBC  A4D8               	btfss	status,2,c
 17545  000EBE  D008               	goto	l3325
 17546  000EC0  0E00               	movlw	0
 17547  000EC2  6E05               	movwf	___flge@ff2,c
 17548  000EC4  0E00               	movlw	0
 17549  000EC6  6E06               	movwf	___flge@ff2+1,c
 17550  000EC8  0E00               	movlw	0
 17551  000ECA  6E07               	movwf	___flge@ff2+2,c
 17552  000ECC  0E00               	movlw	0
 17553  000ECE  6E08               	movwf	___flge@ff2+3,c
 17554  000ED0                     l3325:
 17555  000ED0  AE04               	btfss	___flge@ff1+3,7,c
 17556  000ED2  D01D               	goto	l3329
 17557  000ED4  C001  F009         	movff	___flge@ff1,??___flge
 17558  000ED8  C002  F00A         	movff	___flge@ff1+1,??___flge+1
 17559  000EDC  C003  F00B         	movff	___flge@ff1+2,??___flge+2
 17560  000EE0  C004  F00C         	movff	___flge@ff1+3,??___flge+3
 17561  000EE4  1E09               	comf	??___flge,f,c
 17562  000EE6  1E0A               	comf	??___flge+1,f,c
 17563  000EE8  1E0B               	comf	??___flge+2,f,c
 17564  000EEA  1E0C               	comf	??___flge+3,f,c
 17565  000EEC  2A09               	incf	??___flge,f,c
 17566  000EEE  0E00               	movlw	0
 17567  000EF0  220A               	addwfc	??___flge+1,f,c
 17568  000EF2  220B               	addwfc	??___flge+2,f,c
 17569  000EF4  220C               	addwfc	??___flge+3,f,c
 17570  000EF6  0E00               	movlw	0
 17571  000EF8  2409               	addwf	??___flge,w,c
 17572  000EFA  6E01               	movwf	___flge@ff1,c
 17573  000EFC  0E00               	movlw	0
 17574  000EFE  200A               	addwfc	??___flge+1,w,c
 17575  000F00  6E02               	movwf	___flge@ff1+1,c
 17576  000F02  0E00               	movlw	0
 17577  000F04  200B               	addwfc	??___flge+2,w,c
 17578  000F06  6E03               	movwf	___flge@ff1+2,c
 17579  000F08  0E80               	movlw	128
 17580  000F0A  200C               	addwfc	??___flge+3,w,c
 17581  000F0C  6E04               	movwf	___flge@ff1+3,c
 17582  000F0E                     l3329:
 17583  000F0E  AE08               	btfss	___flge@ff2+3,7,c
 17584  000F10  D01D               	goto	l580
 17585  000F12  C005  F009         	movff	___flge@ff2,??___flge
 17586  000F16  C006  F00A         	movff	___flge@ff2+1,??___flge+1
 17587  000F1A  C007  F00B         	movff	___flge@ff2+2,??___flge+2
 17588  000F1E  C008  F00C         	movff	___flge@ff2+3,??___flge+3
 17589  000F22  1E09               	comf	??___flge,f,c
 17590  000F24  1E0A               	comf	??___flge+1,f,c
 17591  000F26  1E0B               	comf	??___flge+2,f,c
 17592  000F28  1E0C               	comf	??___flge+3,f,c
 17593  000F2A  2A09               	incf	??___flge,f,c
 17594  000F2C  0E00               	movlw	0
 17595  000F2E  220A               	addwfc	??___flge+1,f,c
 17596  000F30  220B               	addwfc	??___flge+2,f,c
 17597  000F32  220C               	addwfc	??___flge+3,f,c
 17598  000F34  0E00               	movlw	0
 17599  000F36  2409               	addwf	??___flge,w,c
 17600  000F38  6E05               	movwf	___flge@ff2,c
 17601  000F3A  0E00               	movlw	0
 17602  000F3C  200A               	addwfc	??___flge+1,w,c
 17603  000F3E  6E06               	movwf	___flge@ff2+1,c
 17604  000F40  0E00               	movlw	0
 17605  000F42  200B               	addwfc	??___flge+2,w,c
 17606  000F44  6E07               	movwf	___flge@ff2+2,c
 17607  000F46  0E80               	movlw	128
 17608  000F48  200C               	addwfc	??___flge+3,w,c
 17609  000F4A  6E08               	movwf	___flge@ff2+3,c
 17610  000F4C                     l580:
 17611  000F4C  0E00               	movlw	0
 17612  000F4E  1A01               	xorwf	___flge@ff1,f,c
 17613  000F50  0E00               	movlw	0
 17614  000F52  1A02               	xorwf	___flge@ff1+1,f,c
 17615  000F54  0E00               	movlw	0
 17616  000F56  1A03               	xorwf	___flge@ff1+2,f,c
 17617  000F58  0E80               	movlw	128
 17618  000F5A  1A04               	xorwf	___flge@ff1+3,f,c
 17619  000F5C  0E00               	movlw	0
 17620  000F5E  1A05               	xorwf	___flge@ff2,f,c
 17621  000F60  0E00               	movlw	0
 17622  000F62  1A06               	xorwf	___flge@ff2+1,f,c
 17623  000F64  0E00               	movlw	0
 17624  000F66  1A07               	xorwf	___flge@ff2+2,f,c
 17625  000F68  0E80               	movlw	128
 17626  000F6A  1A08               	xorwf	___flge@ff2+3,f,c
 17627  000F6C  5005               	movf	___flge@ff2,w,c
 17628  000F6E  5C01               	subwf	___flge@ff1,w,c
 17629  000F70  5006               	movf	___flge@ff2+1,w,c
 17630  000F72  5802               	subwfb	___flge@ff1+1,w,c
 17631  000F74  5007               	movf	___flge@ff2+2,w,c
 17632  000F76  5803               	subwfb	___flge@ff1+2,w,c
 17633  000F78  5008               	movf	___flge@ff2+3,w,c
 17634  000F7A  5804               	subwfb	___flge@ff1+3,w,c
 17635  000F7C  B0D8               	btfsc	status,0,c
 17636  000F7E  D002               	goto	l3335
 17637  000F80  90D8               	bcf	status,0,c
 17638  000F82  0012               	return	
 17639  000F84                     l3335:
 17640  000F84  80D8               	bsf	status,0,c
 17641  000F86  0012               	return	
 17642  000F88                     __end_of___flge:
 17643                           	opt stack 0
 17644                           tblptru	equ	0xFF8
 17645                           tblptrh	equ	0xFF7
 17646                           tblptrl	equ	0xFF6
 17647                           tablat	equ	0xFF5
 17648                           prodh	equ	0xFF4
 17649                           prodl	equ	0xFF3
 17650                           postinc0	equ	0xFEE
 17651                           wreg	equ	0xFE8
 17652                           indf2	equ	0xFDF
 17653                           postinc2	equ	0xFDE
 17654                           postdec2	equ	0xFDD
 17655                           fsr2h	equ	0xFDA
 17656                           fsr2l	equ	0xFD9
 17657                           status	equ	0xFD8
 17658                           
 17659 ;; *************** function _eval_poly *****************
 17660 ;; Defined at:
 17661 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\evalpoly.c"
 17662 ;; Parameters:    Size  Location     Type
 17663 ;;  x               4   20[BANK0 ] long 
 17664 ;;  d               2   24[BANK0 ] PTR const 
 17665 ;;		 -> log@coeff(36), exp@coeff(40), 
 17666 ;;  n               2   26[BANK0 ] int 
 17667 ;; Auto vars:     Size  Location     Type
 17668 ;;  res             4   32[BANK0 ] int 
 17669 ;; Return value:  Size  Location     Type
 17670 ;;                  4   20[BANK0 ] int 
 17671 ;; Registers used:
 17672 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17673 ;; Tracked objects:
 17674 ;;		On entry : 0/0
 17675 ;;		On exit  : 0/0
 17676 ;;		Unchanged: 0/0
 17677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17678 ;;      Params:         0       8       0       0       0       0       0       0       0
 17679 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17680 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17681 ;;      Totals:         0      16       0       0       0       0       0       0       0
 17682 ;;Total ram usage:       16 bytes
 17683 ;; Hardware stack levels used:    1
 17684 ;; Hardware stack levels required when called:    1
 17685 ;; This function calls:
 17686 ;;		___fladd
 17687 ;;		___flmul
 17688 ;; This function is called by:
 17689 ;;		_exp
 17690 ;;		_log
 17691 ;; This function uses a non-reentrant model
 17692 ;;
 17693                           
 17694                           	psect	text33
 17695  000C3A                     __ptext33:
 17696                           	opt stack 0
 17697  000C3A                     _eval_poly:
 17698                           	opt stack 22
 17699                           
 17700                           ;incstack = 0
 17701  000C3A  C07A  F07C         	movff	eval_poly@n,??_eval_poly
 17702  000C3E  C07B  F07D         	movff	eval_poly@n+1,??_eval_poly+1
 17703  000C42  0100               	movlb	0	; () banked
 17704  000C44  90D8               	bcf	status,0,c
 17705  000C46  377C               	rlcf	??_eval_poly& (0+255),f,b
 17706  000C48  377D               	rlcf	(??_eval_poly+1)& (0+255),f,b
 17707  000C4A  0100               	movlb	0	; () banked
 17708  000C4C  90D8               	bcf	status,0,c
 17709  000C4E  377C               	rlcf	??_eval_poly& (0+255),f,b
 17710  000C50  377D               	rlcf	(??_eval_poly+1)& (0+255),f,b
 17711  000C52  C078  F07E         	movff	eval_poly@d,??_eval_poly+2
 17712  000C56  C079  F07F         	movff	eval_poly@d+1,??_eval_poly+3
 17713  000C5A  0100               	movlb	0	; () banked
 17714  000C5C  517C               	movf	??_eval_poly& (0+255),w,b
 17715  000C5E  0100               	movlb	0	; () banked
 17716  000C60  277E               	addwf	(??_eval_poly+2)& (0+255),f,b
 17717  000C62  0100               	movlb	0	; () banked
 17718  000C64  517D               	movf	(??_eval_poly+1)& (0+255),w,b
 17719  000C66  0100               	movlb	0	; () banked
 17720  000C68  237F               	addwfc	(??_eval_poly+3)& (0+255),f,b
 17721  000C6A  C07E  FFF6         	movff	??_eval_poly+2,tblptrl
 17722  000C6E  C07F  FFF7         	movff	??_eval_poly+3,tblptrh
 17723  000C72                     	if	0	;tblptru may be non-zero
 17724  000C72                     	endif
 17725  000C72                     	if	0	;tblptru may be non-zero
 17726  000C72                     	endif
 17727  000C72  0009               	tblrd		*+
 17728  000C74  CFF5 F080          	movff	tablat,eval_poly@res
 17729  000C78  0009               	tblrd		*+
 17730  000C7A  CFF5 F081          	movff	tablat,eval_poly@res+1
 17731  000C7E  0009               	tblrd		*+
 17732  000C80  CFF5 F082          	movff	tablat,eval_poly@res+2
 17733  000C84  000A               	tblrd		*-
 17734  000C86  CFF5 F083          	movff	tablat,eval_poly@res+3
 17735  000C8A  D050               	goto	l3615
 17736  000C8C                     l3613:
 17737                           
 17738                           ; BSR set to: 0
 17739  000C8C  C080  F03B         	movff	eval_poly@res,___flmul@a
 17740  000C90  C081  F03C         	movff	eval_poly@res+1,___flmul@a+1
 17741  000C94  C082  F03D         	movff	eval_poly@res+2,___flmul@a+2
 17742  000C98  C083  F03E         	movff	eval_poly@res+3,___flmul@a+3
 17743  000C9C  C074  F037         	movff	eval_poly@x,___flmul@b
 17744  000CA0  C075  F038         	movff	eval_poly@x+1,___flmul@b+1
 17745  000CA4  C076  F039         	movff	eval_poly@x+2,___flmul@b+2
 17746  000CA8  C077  F03A         	movff	eval_poly@x+3,___flmul@b+3
 17747  000CAC  ECC8  F014         	call	___flmul	;wreg free
 17748  000CB0  C037  F060         	movff	?___flmul,___fladd@b
 17749  000CB4  C038  F061         	movff	?___flmul+1,___fladd@b+1
 17750  000CB8  C039  F062         	movff	?___flmul+2,___fladd@b+2
 17751  000CBC  C03A  F063         	movff	?___flmul+3,___fladd@b+3
 17752  000CC0  0100               	movlb	0	; () banked
 17753  000CC2  077A               	decf	eval_poly@n& (0+255),f,b
 17754  000CC4  A0D8               	btfss	status,0,c
 17755  000CC6  077B               	decf	(eval_poly@n+1)& (0+255),f,b
 17756  000CC8  C07A  F07C         	movff	eval_poly@n,??_eval_poly
 17757  000CCC  C07B  F07D         	movff	eval_poly@n+1,??_eval_poly+1
 17758  000CD0  0100               	movlb	0	; () banked
 17759  000CD2  90D8               	bcf	status,0,c
 17760  000CD4  377C               	rlcf	??_eval_poly& (0+255),f,b
 17761  000CD6  377D               	rlcf	(??_eval_poly+1)& (0+255),f,b
 17762  000CD8  0100               	movlb	0	; () banked
 17763  000CDA  90D8               	bcf	status,0,c
 17764  000CDC  377C               	rlcf	??_eval_poly& (0+255),f,b
 17765  000CDE  377D               	rlcf	(??_eval_poly+1)& (0+255),f,b
 17766  000CE0  C078  F07E         	movff	eval_poly@d,??_eval_poly+2
 17767  000CE4  C079  F07F         	movff	eval_poly@d+1,??_eval_poly+3
 17768  000CE8  0100               	movlb	0	; () banked
 17769  000CEA  517C               	movf	??_eval_poly& (0+255),w,b
 17770  000CEC  0100               	movlb	0	; () banked
 17771  000CEE  277E               	addwf	(??_eval_poly+2)& (0+255),f,b
 17772  000CF0  0100               	movlb	0	; () banked
 17773  000CF2  517D               	movf	(??_eval_poly+1)& (0+255),w,b
 17774  000CF4  0100               	movlb	0	; () banked
 17775  000CF6  237F               	addwfc	(??_eval_poly+3)& (0+255),f,b
 17776  000CF8  C07E  FFF6         	movff	??_eval_poly+2,tblptrl
 17777  000CFC  C07F  FFF7         	movff	??_eval_poly+3,tblptrh
 17778  000D00                     	if	0	;tblptru may be non-zero
 17779  000D00                     	endif
 17780  000D00                     	if	0	;tblptru may be non-zero
 17781  000D00                     	endif
 17782  000D00  0009               	tblrd		*+
 17783  000D02  CFF5 F064          	movff	tablat,___fladd@a
 17784  000D06  0009               	tblrd		*+
 17785  000D08  CFF5 F065          	movff	tablat,___fladd@a+1
 17786  000D0C  0009               	tblrd		*+
 17787  000D0E  CFF5 F066          	movff	tablat,___fladd@a+2
 17788  000D12  000A               	tblrd		*-
 17789  000D14  CFF5 F067          	movff	tablat,___fladd@a+3
 17790  000D18  EC7C  F018         	call	___fladd	;wreg free
 17791  000D1C  C060  F080         	movff	?___fladd,eval_poly@res
 17792  000D20  C061  F081         	movff	?___fladd+1,eval_poly@res+1
 17793  000D24  C062  F082         	movff	?___fladd+2,eval_poly@res+2
 17794  000D28  C063  F083         	movff	?___fladd+3,eval_poly@res+3
 17795  000D2C                     l3615:
 17796  000D2C  0100               	movlb	0	; () banked
 17797  000D2E  517A               	movf	eval_poly@n& (0+255),w,b
 17798  000D30  0100               	movlb	0	; () banked
 17799  000D32  117B               	iorwf	(eval_poly@n+1)& (0+255),w,b
 17800  000D34  A4D8               	btfss	status,2,c
 17801  000D36  D7AA               	goto	l3613
 17802                           
 17803                           ; BSR set to: 0
 17804  000D38  C080  F074         	movff	eval_poly@res,?_eval_poly
 17805  000D3C  C081  F075         	movff	eval_poly@res+1,?_eval_poly+1
 17806  000D40  C082  F076         	movff	eval_poly@res+2,?_eval_poly+2
 17807  000D44  C083  F077         	movff	eval_poly@res+3,?_eval_poly+3
 17808                           
 17809                           ; BSR set to: 0
 17810  000D48  0012               	return		;funcret
 17811  000D4A                     __end_of_eval_poly:
 17812                           	opt stack 0
 17813                           tblptru	equ	0xFF8
 17814                           tblptrh	equ	0xFF7
 17815                           tblptrl	equ	0xFF6
 17816                           tablat	equ	0xFF5
 17817                           prodh	equ	0xFF4
 17818                           prodl	equ	0xFF3
 17819                           postinc0	equ	0xFEE
 17820                           wreg	equ	0xFE8
 17821                           indf2	equ	0xFDF
 17822                           postinc2	equ	0xFDE
 17823                           postdec2	equ	0xFDD
 17824                           fsr2h	equ	0xFDA
 17825                           fsr2l	equ	0xFD9
 17826                           status	equ	0xFD8
 17827                           
 17828 ;; *************** function ___flmul *****************
 17829 ;; Defined at:
 17830 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;  b               4   54[COMRAM] int 
 17833 ;;  a               4   58[COMRAM] int 
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;  prod            4   73[COMRAM] struct .
 17836 ;;  grs             4   67[COMRAM] unsigned long 
 17837 ;;  temp            2   77[COMRAM] struct .
 17838 ;;  bexp            1   72[COMRAM] unsigned char 
 17839 ;;  aexp            1   71[COMRAM] unsigned char 
 17840 ;;  sign            1   66[COMRAM] unsigned char 
 17841 ;; Return value:  Size  Location     Type
 17842 ;;                  4   54[COMRAM] unsigned char 
 17843 ;; Registers used:
 17844 ;;		wreg, status,2, status,0, prodl, prodh
 17845 ;; Tracked objects:
 17846 ;;		On entry : 0/0
 17847 ;;		On exit  : 0/0
 17848 ;;		Unchanged: 0/0
 17849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17850 ;;      Params:         8       0       0       0       0       0       0       0       0
 17851 ;;      Locals:        13       0       0       0       0       0       0       0       0
 17852 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17853 ;;      Totals:        25       0       0       0       0       0       0       0       0
 17854 ;;Total ram usage:       25 bytes
 17855 ;; Hardware stack levels used:    1
 17856 ;; This function calls:
 17857 ;;		Nothing
 17858 ;; This function is called by:
 17859 ;;		_calculateProbability
 17860 ;;		_getAccuracy
 17861 ;;		_fround
 17862 ;;		_scale
 17863 ;;		_printf
 17864 ;;		_exp
 17865 ;;		_log
 17866 ;;		_pow
 17867 ;;		_eval_poly
 17868 ;; This function uses a non-reentrant model
 17869 ;;
 17870                           
 17871                           	psect	text34
 17872  002990                     __ptext34:
 17873                           	opt stack 0
 17874  002990                     ___flmul:
 17875                           	opt stack 28
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;incstack = 0
 17879  002990  503A               	movf	___flmul@b+3,w,c
 17880  002992  0B80               	andlw	128
 17881  002994  6E43               	movwf	___flmul@sign,c
 17882  002996  503A               	movf	___flmul@b+3,w,c
 17883  002998  243A               	addwf	___flmul@b+3,w,c
 17884  00299A  6E49               	movwf	___flmul@bexp,c
 17885  00299C  BE39               	btfsc	___flmul@b+2,7,c
 17886  00299E  8049               	bsf	___flmul@bexp,0,c
 17887  0029A0  5049               	movf	___flmul@bexp,w,c
 17888  0029A2  B4D8               	btfsc	status,2,c
 17889  0029A4  D00D               	goto	l3201
 17890  0029A6  2849               	incf	___flmul@bexp,w,c
 17891  0029A8  A4D8               	btfss	status,2,c
 17892  0029AA  D008               	goto	l3199
 17893  0029AC  0E00               	movlw	0
 17894  0029AE  6E37               	movwf	___flmul@b,c
 17895  0029B0  0E00               	movlw	0
 17896  0029B2  6E38               	movwf	___flmul@b+1,c
 17897  0029B4  0E00               	movlw	0
 17898  0029B6  6E39               	movwf	___flmul@b+2,c
 17899  0029B8  0E00               	movlw	0
 17900  0029BA  6E3A               	movwf	___flmul@b+3,c
 17901  0029BC                     l3199:
 17902  0029BC  8E39               	bsf	___flmul@b+2,7,c
 17903  0029BE  D008               	goto	l3203
 17904  0029C0                     l3201:
 17905  0029C0  0E00               	movlw	0
 17906  0029C2  6E37               	movwf	___flmul@b,c
 17907  0029C4  0E00               	movlw	0
 17908  0029C6  6E38               	movwf	___flmul@b+1,c
 17909  0029C8  0E00               	movlw	0
 17910  0029CA  6E39               	movwf	___flmul@b+2,c
 17911  0029CC  0E00               	movlw	0
 17912  0029CE  6E3A               	movwf	___flmul@b+3,c
 17913  0029D0                     l3203:
 17914  0029D0  503E               	movf	___flmul@a+3,w,c
 17915  0029D2  0B80               	andlw	128
 17916  0029D4  1A43               	xorwf	___flmul@sign,f,c
 17917  0029D6  503E               	movf	___flmul@a+3,w,c
 17918  0029D8  243E               	addwf	___flmul@a+3,w,c
 17919  0029DA  6E48               	movwf	___flmul@aexp,c
 17920  0029DC  BE3D               	btfsc	___flmul@a+2,7,c
 17921  0029DE  8048               	bsf	___flmul@aexp,0,c
 17922  0029E0  5048               	movf	___flmul@aexp,w,c
 17923  0029E2  B4D8               	btfsc	status,2,c
 17924  0029E4  D00D               	goto	l3219
 17925  0029E6  2848               	incf	___flmul@aexp,w,c
 17926  0029E8  A4D8               	btfss	status,2,c
 17927  0029EA  D008               	goto	l3217
 17928  0029EC  0E00               	movlw	0
 17929  0029EE  6E3B               	movwf	___flmul@a,c
 17930  0029F0  0E00               	movlw	0
 17931  0029F2  6E3C               	movwf	___flmul@a+1,c
 17932  0029F4  0E00               	movlw	0
 17933  0029F6  6E3D               	movwf	___flmul@a+2,c
 17934  0029F8  0E00               	movlw	0
 17935  0029FA  6E3E               	movwf	___flmul@a+3,c
 17936  0029FC                     l3217:
 17937  0029FC  8E3D               	bsf	___flmul@a+2,7,c
 17938  0029FE  D008               	goto	l985
 17939  002A00                     l3219:
 17940  002A00  0E00               	movlw	0
 17941  002A02  6E3B               	movwf	___flmul@a,c
 17942  002A04  0E00               	movlw	0
 17943  002A06  6E3C               	movwf	___flmul@a+1,c
 17944  002A08  0E00               	movlw	0
 17945  002A0A  6E3D               	movwf	___flmul@a+2,c
 17946  002A0C  0E00               	movlw	0
 17947  002A0E  6E3E               	movwf	___flmul@a+3,c
 17948  002A10                     l985:
 17949  002A10  5048               	movf	___flmul@aexp,w,c
 17950  002A12  B4D8               	btfsc	status,2,c
 17951  002A14  D003               	goto	l3223
 17952  002A16  5049               	movf	___flmul@bexp,w,c
 17953  002A18  A4D8               	btfss	status,2,c
 17954  002A1A  D009               	goto	l3227
 17955  002A1C                     l3223:
 17956  002A1C  0E00               	movlw	0
 17957  002A1E  6E37               	movwf	?___flmul,c
 17958  002A20  0E00               	movlw	0
 17959  002A22  6E38               	movwf	?___flmul+1,c
 17960  002A24  0E00               	movlw	0
 17961  002A26  6E39               	movwf	?___flmul+2,c
 17962  002A28  0E00               	movlw	0
 17963  002A2A  6E3A               	movwf	?___flmul+3,c
 17964  002A2C  0012               	return	
 17965  002A2E                     l3227:
 17966  002A2E  503D               	movf	___flmul@a+2,w,c
 17967  002A30  0237               	mulwf	___flmul@b,c
 17968  002A32  CFF3 F04E          	movff	prodl,___flmul@temp
 17969  002A36  CFF4 F04F          	movff	prodh,___flmul@temp+1
 17970  002A3A  504E               	movf	___flmul@temp,w,c
 17971  002A3C  6E44               	movwf	___flmul@grs,c
 17972  002A3E  6A45               	clrf	___flmul@grs+1,c
 17973  002A40  6A46               	clrf	___flmul@grs+2,c
 17974  002A42  6A47               	clrf	___flmul@grs+3,c
 17975  002A44  504F               	movf	___flmul@temp+1,w,c
 17976  002A46  6E4A               	movwf	___flmul@prod,c
 17977  002A48  6A4B               	clrf	___flmul@prod+1,c
 17978  002A4A  6A4C               	clrf	___flmul@prod+2,c
 17979  002A4C  6A4D               	clrf	___flmul@prod+3,c
 17980  002A4E  503C               	movf	___flmul@a+1,w,c
 17981  002A50  0238               	mulwf	___flmul@b+1,c
 17982  002A52  CFF3 F04E          	movff	prodl,___flmul@temp
 17983  002A56  CFF4 F04F          	movff	prodh,___flmul@temp+1
 17984  002A5A  504E               	movf	___flmul@temp,w,c
 17985  002A5C  2644               	addwf	___flmul@grs,f,c
 17986  002A5E  0E00               	movlw	0
 17987  002A60  2245               	addwfc	___flmul@grs+1,f,c
 17988  002A62  2246               	addwfc	___flmul@grs+2,f,c
 17989  002A64  2247               	addwfc	___flmul@grs+3,f,c
 17990  002A66  504F               	movf	___flmul@temp+1,w,c
 17991  002A68  264A               	addwf	___flmul@prod,f,c
 17992  002A6A  0E00               	movlw	0
 17993  002A6C  224B               	addwfc	___flmul@prod+1,f,c
 17994  002A6E  224C               	addwfc	___flmul@prod+2,f,c
 17995  002A70  224D               	addwfc	___flmul@prod+3,f,c
 17996  002A72  503B               	movf	___flmul@a,w,c
 17997  002A74  0239               	mulwf	___flmul@b+2,c
 17998  002A76  CFF3 F04E          	movff	prodl,___flmul@temp
 17999  002A7A  CFF4 F04F          	movff	prodh,___flmul@temp+1
 18000  002A7E  504E               	movf	___flmul@temp,w,c
 18001  002A80  2644               	addwf	___flmul@grs,f,c
 18002  002A82  0E00               	movlw	0
 18003  002A84  2245               	addwfc	___flmul@grs+1,f,c
 18004  002A86  2246               	addwfc	___flmul@grs+2,f,c
 18005  002A88  2247               	addwfc	___flmul@grs+3,f,c
 18006  002A8A  504F               	movf	___flmul@temp+1,w,c
 18007  002A8C  264A               	addwf	___flmul@prod,f,c
 18008  002A8E  0E00               	movlw	0
 18009  002A90  224B               	addwfc	___flmul@prod+1,f,c
 18010  002A92  224C               	addwfc	___flmul@prod+2,f,c
 18011  002A94  224D               	addwfc	___flmul@prod+3,f,c
 18012  002A96  C046  F047         	movff	___flmul@grs+2,___flmul@grs+3
 18013  002A9A  C045  F046         	movff	___flmul@grs+1,___flmul@grs+2
 18014  002A9E  C044  F045         	movff	___flmul@grs,___flmul@grs+1
 18015  002AA2  6A44               	clrf	___flmul@grs,c
 18016  002AA4  503B               	movf	___flmul@a,w,c
 18017  002AA6  0238               	mulwf	___flmul@b+1,c
 18018  002AA8  CFF3 F04E          	movff	prodl,___flmul@temp
 18019  002AAC  CFF4 F04F          	movff	prodh,___flmul@temp+1
 18020  002AB0  504E               	movf	___flmul@temp,w,c
 18021  002AB2  2644               	addwf	___flmul@grs,f,c
 18022  002AB4  504F               	movf	___flmul@temp+1,w,c
 18023  002AB6  2245               	addwfc	___flmul@grs+1,f,c
 18024  002AB8  0E00               	movlw	0
 18025  002ABA  2246               	addwfc	___flmul@grs+2,f,c
 18026  002ABC  0E00               	movlw	0
 18027  002ABE  2247               	addwfc	___flmul@grs+3,f,c
 18028  002AC0  503C               	movf	___flmul@a+1,w,c
 18029  002AC2  0237               	mulwf	___flmul@b,c
 18030  002AC4  CFF3 F04E          	movff	prodl,___flmul@temp
 18031  002AC8  CFF4 F04F          	movff	prodh,___flmul@temp+1
 18032  002ACC  504E               	movf	___flmul@temp,w,c
 18033  002ACE  2644               	addwf	___flmul@grs,f,c
 18034  002AD0  504F               	movf	___flmul@temp+1,w,c
 18035  002AD2  2245               	addwfc	___flmul@grs+1,f,c
 18036  002AD4  0E00               	movlw	0
 18037  002AD6  2246               	addwfc	___flmul@grs+2,f,c
 18038  002AD8  0E00               	movlw	0
 18039  002ADA  2247               	addwfc	___flmul@grs+3,f,c
 18040  002ADC  C046  F047         	movff	___flmul@grs+2,___flmul@grs+3
 18041  002AE0  C045  F046         	movff	___flmul@grs+1,___flmul@grs+2
 18042  002AE4  C044  F045         	movff	___flmul@grs,___flmul@grs+1
 18043  002AE8  6A44               	clrf	___flmul@grs,c
 18044  002AEA  503B               	movf	___flmul@a,w,c
 18045  002AEC  0237               	mulwf	___flmul@b,c
 18046  002AEE  CFF3 F04E          	movff	prodl,___flmul@temp
 18047  002AF2  CFF4 F04F          	movff	prodh,___flmul@temp+1
 18048  002AF6  504E               	movf	___flmul@temp,w,c
 18049  002AF8  2644               	addwf	___flmul@grs,f,c
 18050  002AFA  504F               	movf	___flmul@temp+1,w,c
 18051  002AFC  2245               	addwfc	___flmul@grs+1,f,c
 18052  002AFE  0E00               	movlw	0
 18053  002B00  2246               	addwfc	___flmul@grs+2,f,c
 18054  002B02  0E00               	movlw	0
 18055  002B04  2247               	addwfc	___flmul@grs+3,f,c
 18056  002B06  503D               	movf	___flmul@a+2,w,c
 18057  002B08  0238               	mulwf	___flmul@b+1,c
 18058  002B0A  CFF3 F04E          	movff	prodl,___flmul@temp
 18059  002B0E  CFF4 F04F          	movff	prodh,___flmul@temp+1
 18060  002B12  504E               	movf	___flmul@temp,w,c
 18061  002B14  264A               	addwf	___flmul@prod,f,c
 18062  002B16  504F               	movf	___flmul@temp+1,w,c
 18063  002B18  224B               	addwfc	___flmul@prod+1,f,c
 18064  002B1A  0E00               	movlw	0
 18065  002B1C  224C               	addwfc	___flmul@prod+2,f,c
 18066  002B1E  0E00               	movlw	0
 18067  002B20  224D               	addwfc	___flmul@prod+3,f,c
 18068  002B22  503C               	movf	___flmul@a+1,w,c
 18069  002B24  0239               	mulwf	___flmul@b+2,c
 18070  002B26  CFF3 F04E          	movff	prodl,___flmul@temp
 18071  002B2A  CFF4 F04F          	movff	prodh,___flmul@temp+1
 18072  002B2E  504E               	movf	___flmul@temp,w,c
 18073  002B30  264A               	addwf	___flmul@prod,f,c
 18074  002B32  504F               	movf	___flmul@temp+1,w,c
 18075  002B34  224B               	addwfc	___flmul@prod+1,f,c
 18076  002B36  0E00               	movlw	0
 18077  002B38  224C               	addwfc	___flmul@prod+2,f,c
 18078  002B3A  0E00               	movlw	0
 18079  002B3C  224D               	addwfc	___flmul@prod+3,f,c
 18080  002B3E  503D               	movf	___flmul@a+2,w,c
 18081  002B40  0239               	mulwf	___flmul@b+2,c
 18082  002B42  CFF3 F04E          	movff	prodl,___flmul@temp
 18083  002B46  CFF4 F04F          	movff	prodh,___flmul@temp+1
 18084  002B4A  504E               	movf	___flmul@temp,w,c
 18085  002B4C  6E3F               	movwf	??___flmul& (0+255),c
 18086  002B4E  504F               	movf	___flmul@temp+1,w,c
 18087  002B50  6E40               	movwf	(??___flmul+1)& (0+255),c
 18088  002B52  6A41               	clrf	(??___flmul+2)& (0+255),c
 18089  002B54  6A42               	clrf	(??___flmul+3)& (0+255),c
 18090  002B56  C041  F042         	movff	??___flmul+2,??___flmul+3
 18091  002B5A  C040  F041         	movff	??___flmul+1,??___flmul+2
 18092  002B5E  C03F  F040         	movff	??___flmul,??___flmul+1
 18093  002B62  6A3F               	clrf	??___flmul,c
 18094  002B64  503F               	movf	??___flmul,w,c
 18095  002B66  264A               	addwf	___flmul@prod,f,c
 18096  002B68  5040               	movf	??___flmul+1,w,c
 18097  002B6A  224B               	addwfc	___flmul@prod+1,f,c
 18098  002B6C  5041               	movf	??___flmul+2,w,c
 18099  002B6E  224C               	addwfc	___flmul@prod+2,f,c
 18100  002B70  5042               	movf	??___flmul+3,w,c
 18101  002B72  224D               	addwfc	___flmul@prod+3,f,c
 18102  002B74  C044  F03F         	movff	___flmul@grs,??___flmul
 18103  002B78  C045  F040         	movff	___flmul@grs+1,??___flmul+1
 18104  002B7C  C046  F041         	movff	___flmul@grs+2,??___flmul+2
 18105  002B80  C047  F042         	movff	___flmul@grs+3,??___flmul+3
 18106  002B84  0E19               	movlw	25
 18107  002B86  D005               	goto	u3400
 18108  002B88                     u3405:
 18109  002B88  90D8               	bcf	status,0,c
 18110  002B8A  3242               	rrcf	??___flmul+3,f,c
 18111  002B8C  3241               	rrcf	??___flmul+2,f,c
 18112  002B8E  3240               	rrcf	??___flmul+1,f,c
 18113  002B90  323F               	rrcf	??___flmul,f,c
 18114  002B92                     u3400:
 18115  002B92  2EE8               	decfsz	wreg,f,c
 18116  002B94  D7F9               	goto	u3405
 18117  002B96  503F               	movf	??___flmul,w,c
 18118  002B98  264A               	addwf	___flmul@prod,f,c
 18119  002B9A  5040               	movf	??___flmul+1,w,c
 18120  002B9C  224B               	addwfc	___flmul@prod+1,f,c
 18121  002B9E  5041               	movf	??___flmul+2,w,c
 18122  002BA0  224C               	addwfc	___flmul@prod+2,f,c
 18123  002BA2  5042               	movf	??___flmul+3,w,c
 18124  002BA4  224D               	addwfc	___flmul@prod+3,f,c
 18125  002BA6  C046  F047         	movff	___flmul@grs+2,___flmul@grs+3
 18126  002BAA  C045  F046         	movff	___flmul@grs+1,___flmul@grs+2
 18127  002BAE  C044  F045         	movff	___flmul@grs,___flmul@grs+1
 18128  002BB2  6A44               	clrf	___flmul@grs,c
 18129  002BB4  5048               	movf	___flmul@aexp,w,c
 18130  002BB6  C049  F03F         	movff	___flmul@bexp,??___flmul
 18131  002BBA  6A40               	clrf	(??___flmul+1)& (0+255),c
 18132  002BBC  263F               	addwf	??___flmul,f,c
 18133  002BBE  0E00               	movlw	0
 18134  002BC0  2240               	addwfc	??___flmul+1,f,c
 18135  002BC2  0E82               	movlw	130
 18136  002BC4  243F               	addwf	??___flmul,w,c
 18137  002BC6  6E4E               	movwf	___flmul@temp,c
 18138  002BC8  0EFF               	movlw	255
 18139  002BCA  2040               	addwfc	??___flmul+1,w,c
 18140  002BCC  6E4F               	movwf	___flmul@temp+1,c
 18141  002BCE  D00F               	goto	l3275
 18142  002BD0                     l3269:
 18143  002BD0  90D8               	bcf	status,0,c
 18144  002BD2  364A               	rlcf	___flmul@prod,f,c
 18145  002BD4  364B               	rlcf	___flmul@prod+1,f,c
 18146  002BD6  364C               	rlcf	___flmul@prod+2,f,c
 18147  002BD8  364D               	rlcf	___flmul@prod+3,f,c
 18148  002BDA  BE47               	btfsc	___flmul@grs+3,7,c
 18149  002BDC  804A               	bsf	___flmul@prod,0,c
 18150  002BDE  90D8               	bcf	status,0,c
 18151  002BE0  3644               	rlcf	___flmul@grs,f,c
 18152  002BE2  3645               	rlcf	___flmul@grs+1,f,c
 18153  002BE4  3646               	rlcf	___flmul@grs+2,f,c
 18154  002BE6  3647               	rlcf	___flmul@grs+3,f,c
 18155  002BE8  064E               	decf	___flmul@temp,f,c
 18156  002BEA  A0D8               	btfss	status,0,c
 18157  002BEC  064F               	decf	___flmul@temp+1,f,c
 18158  002BEE                     l3275:
 18159  002BEE  AE4C               	btfss	___flmul@prod+2,7,c
 18160  002BF0  D7EF               	goto	l3269
 18161  002BF2  0E00               	movlw	0
 18162  002BF4  6E48               	movwf	___flmul@aexp,c
 18163  002BF6  AE47               	btfss	___flmul@grs+3,7,c
 18164  002BF8  D016               	goto	l994
 18165  002BFA  0EFF               	movlw	255
 18166  002BFC  1444               	andwf	___flmul@grs,w,c
 18167  002BFE  6E3F               	movwf	??___flmul& (0+255),c
 18168  002C00  0EFF               	movlw	255
 18169  002C02  1445               	andwf	___flmul@grs+1,w,c
 18170  002C04  6E40               	movwf	(??___flmul+1)& (0+255),c
 18171  002C06  0EFF               	movlw	255
 18172  002C08  1446               	andwf	___flmul@grs+2,w,c
 18173  002C0A  6E41               	movwf	(??___flmul+2)& (0+255),c
 18174  002C0C  0E7F               	movlw	127
 18175  002C0E  1447               	andwf	___flmul@grs+3,w,c
 18176  002C10  6E42               	movwf	(??___flmul+3)& (0+255),c
 18177  002C12  503F               	movf	??___flmul,w,c
 18178  002C14  1040               	iorwf	??___flmul+1,w,c
 18179  002C16  1041               	iorwf	??___flmul+2,w,c
 18180  002C18  1042               	iorwf	??___flmul+3,w,c
 18181  002C1A  A4D8               	btfss	status,2,c
 18182  002C1C  D002               	goto	l3285
 18183  002C1E  A04A               	btfss	___flmul@prod,0,c
 18184  002C20  D002               	goto	l994
 18185  002C22                     l3285:
 18186  002C22  0E01               	movlw	1
 18187  002C24  6E48               	movwf	___flmul@aexp,c
 18188  002C26                     l994:
 18189  002C26  5048               	movf	___flmul@aexp,w,c
 18190  002C28  B4D8               	btfsc	status,2,c
 18191  002C2A  D01F               	goto	l3295
 18192  002C2C  0E01               	movlw	1
 18193  002C2E  264A               	addwf	___flmul@prod,f,c
 18194  002C30  0E00               	movlw	0
 18195  002C32  224B               	addwfc	___flmul@prod+1,f,c
 18196  002C34  224C               	addwfc	___flmul@prod+2,f,c
 18197  002C36  224D               	addwfc	___flmul@prod+3,f,c
 18198  002C38  A04D               	btfss	___flmul@prod+3,0,c
 18199  002C3A  D017               	goto	l3295
 18200  002C3C  C04A  F03F         	movff	___flmul@prod,??___flmul
 18201  002C40  C04B  F040         	movff	___flmul@prod+1,??___flmul+1
 18202  002C44  C04C  F041         	movff	___flmul@prod+2,??___flmul+2
 18203  002C48  C04D  F042         	movff	___flmul@prod+3,??___flmul+3
 18204  002C4C  3442               	rlcf	??___flmul+3,w,c
 18205  002C4E  3242               	rrcf	??___flmul+3,f,c
 18206  002C50  3241               	rrcf	??___flmul+2,f,c
 18207  002C52  3240               	rrcf	??___flmul+1,f,c
 18208  002C54  323F               	rrcf	??___flmul,f,c
 18209  002C56  C03F  F04A         	movff	??___flmul,___flmul@prod
 18210  002C5A  C040  F04B         	movff	??___flmul+1,___flmul@prod+1
 18211  002C5E  C041  F04C         	movff	??___flmul+2,___flmul@prod+2
 18212  002C62  C042  F04D         	movff	??___flmul+3,___flmul@prod+3
 18213  002C66  4A4E               	infsnz	___flmul@temp,f,c
 18214  002C68  2A4F               	incf	___flmul@temp+1,f,c
 18215  002C6A                     l3295:
 18216  002C6A  BE4F               	btfsc	___flmul@temp+1,7,c
 18217  002C6C  D00D               	goto	l3299
 18218  002C6E  504F               	movf	___flmul@temp+1,w,c
 18219  002C70  E103               	bnz	u3480
 18220  002C72  284E               	incf	___flmul@temp,w,c
 18221  002C74  A0D8               	btfss	status,0,c
 18222  002C76  D008               	goto	l3299
 18223  002C78                     u3480:
 18224  002C78  0E00               	movlw	0
 18225  002C7A  6E4A               	movwf	___flmul@prod,c
 18226  002C7C  0E00               	movlw	0
 18227  002C7E  6E4B               	movwf	___flmul@prod+1,c
 18228  002C80  0E80               	movlw	128
 18229  002C82  6E4C               	movwf	___flmul@prod+2,c
 18230  002C84  0E7F               	movlw	127
 18231  002C86  D020               	goto	L10
 18232  002C88                     l3299:
 18233  002C88  BE4F               	btfsc	___flmul@temp+1,7,c
 18234  002C8A  D005               	goto	l3301
 18235  002C8C  504F               	movf	___flmul@temp+1,w,c
 18236  002C8E  E10E               	bnz	l1002
 18237  002C90  044E               	decf	___flmul@temp,w,c
 18238  002C92  B0D8               	btfsc	status,0,c
 18239  002C94  D00B               	goto	l1002
 18240  002C96                     l3301:
 18241  002C96  0E00               	movlw	0
 18242  002C98  6E4A               	movwf	___flmul@prod,c
 18243  002C9A  0E00               	movlw	0
 18244  002C9C  6E4B               	movwf	___flmul@prod+1,c
 18245  002C9E  0E00               	movlw	0
 18246  002CA0  6E4C               	movwf	___flmul@prod+2,c
 18247  002CA2  0E00               	movlw	0
 18248  002CA4  6E4D               	movwf	___flmul@prod+3,c
 18249  002CA6  0E00               	movlw	0
 18250  002CA8  6E43               	movwf	___flmul@sign,c
 18251  002CAA  D00F               	goto	l3311
 18252  002CAC                     l1002:
 18253  002CAC  C04E  F049         	movff	___flmul@temp,___flmul@bexp
 18254  002CB0  0EFF               	movlw	255
 18255  002CB2  164A               	andwf	___flmul@prod,f,c
 18256  002CB4  0EFF               	movlw	255
 18257  002CB6  164B               	andwf	___flmul@prod+1,f,c
 18258  002CB8  0E7F               	movlw	127
 18259  002CBA  164C               	andwf	___flmul@prod+2,f,c
 18260  002CBC  0E00               	movlw	0
 18261  002CBE  164D               	andwf	___flmul@prod+3,f,c
 18262  002CC0  B049               	btfsc	___flmul@bexp,0,c
 18263  002CC2  8E4C               	bsf	___flmul@prod+2,7,c
 18264  002CC4  90D8               	bcf	status,0,c
 18265  002CC6  3049               	rrcf	___flmul@bexp,w,c
 18266  002CC8                     L10:
 18267  002CC8  6E4D               	movwf	___flmul@prod+3,c
 18268  002CCA                     l3311:
 18269  002CCA  5043               	movf	___flmul@sign,w,c
 18270  002CCC  124D               	iorwf	___flmul@prod+3,f,c
 18271  002CCE  C04A  F037         	movff	___flmul@prod,?___flmul
 18272  002CD2  C04B  F038         	movff	___flmul@prod+1,?___flmul+1
 18273  002CD6  C04C  F039         	movff	___flmul@prod+2,?___flmul+2
 18274  002CDA  C04D  F03A         	movff	___flmul@prod+3,?___flmul+3
 18275  002CDE  0012               	return	
 18276  002CE0                     __end_of___flmul:
 18277                           	opt stack 0
 18278                           tblptru	equ	0xFF8
 18279                           tblptrh	equ	0xFF7
 18280                           tblptrl	equ	0xFF6
 18281                           tablat	equ	0xFF5
 18282                           prodh	equ	0xFF4
 18283                           prodl	equ	0xFF3
 18284                           postinc0	equ	0xFEE
 18285                           wreg	equ	0xFE8
 18286                           indf2	equ	0xFDF
 18287                           postinc2	equ	0xFDE
 18288                           postdec2	equ	0xFDD
 18289                           fsr2h	equ	0xFDA
 18290                           fsr2l	equ	0xFD9
 18291                           status	equ	0xFD8
 18292                           
 18293 ;; *************** function ___flsub *****************
 18294 ;; Defined at:
 18295 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
 18296 ;; Parameters:    Size  Location     Type
 18297 ;;  b               4   20[BANK0 ] unsigned char 
 18298 ;;  a               4   24[BANK0 ] unsigned char 
 18299 ;; Auto vars:     Size  Location     Type
 18300 ;;		None
 18301 ;; Return value:  Size  Location     Type
 18302 ;;                  4   20[BANK0 ] unsigned char 
 18303 ;; Registers used:
 18304 ;;		wreg, status,2, status,0, cstack
 18305 ;; Tracked objects:
 18306 ;;		On entry : 0/0
 18307 ;;		On exit  : 0/0
 18308 ;;		Unchanged: 0/0
 18309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18310 ;;      Params:         0       8       0       0       0       0       0       0       0
 18311 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18312 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18313 ;;      Totals:         0       8       0       0       0       0       0       0       0
 18314 ;;Total ram usage:        8 bytes
 18315 ;; Hardware stack levels used:    1
 18316 ;; Hardware stack levels required when called:    1
 18317 ;; This function calls:
 18318 ;;		___fladd
 18319 ;; This function is called by:
 18320 ;;		_printf
 18321 ;;		_exp
 18322 ;; This function uses a non-reentrant model
 18323 ;;
 18324                           
 18325                           	psect	text35
 18326  00037E                     __ptext35:
 18327                           	opt stack 0
 18328  00037E                     ___flsub:
 18329                           	opt stack 28
 18330                           
 18331                           ;incstack = 0
 18332  00037E  0E00               	movlw	0
 18333  000380  0100               	movlb	0	; () banked
 18334  000382  1B78               	xorwf	___flsub@a& (0+255),f,b
 18335  000384  0E00               	movlw	0
 18336  000386  1B79               	xorwf	(___flsub@a+1)& (0+255),f,b
 18337  000388  0E00               	movlw	0
 18338  00038A  1B7A               	xorwf	(___flsub@a+2)& (0+255),f,b
 18339  00038C  0E80               	movlw	128
 18340  00038E  1B7B               	xorwf	(___flsub@a+3)& (0+255),f,b
 18341                           
 18342                           ; BSR set to: 0
 18343  000390  C074  F060         	movff	___flsub@b,___fladd@b
 18344  000394  C075  F061         	movff	___flsub@b+1,___fladd@b+1
 18345  000398  C076  F062         	movff	___flsub@b+2,___fladd@b+2
 18346  00039C  C077  F063         	movff	___flsub@b+3,___fladd@b+3
 18347  0003A0  C078  F064         	movff	___flsub@a,___fladd@a
 18348  0003A4  C079  F065         	movff	___flsub@a+1,___fladd@a+1
 18349  0003A8  C07A  F066         	movff	___flsub@a+2,___fladd@a+2
 18350  0003AC  C07B  F067         	movff	___flsub@a+3,___fladd@a+3
 18351  0003B0  EC7C  F018         	call	___fladd	;wreg free
 18352  0003B4  C060  F074         	movff	?___fladd,?___flsub
 18353  0003B8  C061  F075         	movff	?___fladd+1,?___flsub+1
 18354  0003BC  C062  F076         	movff	?___fladd+2,?___flsub+2
 18355  0003C0  C063  F077         	movff	?___fladd+3,?___flsub+3
 18356  0003C4  0012               	return	
 18357  0003C6                     __end_of___flsub:
 18358                           	opt stack 0
 18359                           tblptru	equ	0xFF8
 18360                           tblptrh	equ	0xFF7
 18361                           tblptrl	equ	0xFF6
 18362                           tablat	equ	0xFF5
 18363                           prodh	equ	0xFF4
 18364                           prodl	equ	0xFF3
 18365                           postinc0	equ	0xFEE
 18366                           wreg	equ	0xFE8
 18367                           indf2	equ	0xFDF
 18368                           postinc2	equ	0xFDE
 18369                           postdec2	equ	0xFDD
 18370                           fsr2h	equ	0xFDA
 18371                           fsr2l	equ	0xFD9
 18372                           status	equ	0xFD8
 18373                           
 18374 ;; *************** function ___fladd *****************
 18375 ;; Defined at:
 18376 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
 18377 ;; Parameters:    Size  Location     Type
 18378 ;;  b               4    0[BANK0 ] unsigned char 
 18379 ;;  a               4    4[BANK0 ] unsigned char 
 18380 ;; Auto vars:     Size  Location     Type
 18381 ;;  grs             1   19[BANK0 ] unsigned char 
 18382 ;;  bexp            1   18[BANK0 ] unsigned char 
 18383 ;;  aexp            1   17[BANK0 ] unsigned char 
 18384 ;;  signs           1   16[BANK0 ] unsigned char 
 18385 ;; Return value:  Size  Location     Type
 18386 ;;                  4    0[BANK0 ] unsigned char 
 18387 ;; Registers used:
 18388 ;;		wreg, status,2, status,0
 18389 ;; Tracked objects:
 18390 ;;		On entry : 0/0
 18391 ;;		On exit  : 0/0
 18392 ;;		Unchanged: 0/0
 18393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18394 ;;      Params:         0       8       0       0       0       0       0       0       0
 18395 ;;      Locals:         0       4       0       0       0       0       0       0       0
 18396 ;;      Temps:          0       8       0       0       0       0       0       0       0
 18397 ;;      Totals:         0      20       0       0       0       0       0       0       0
 18398 ;;Total ram usage:       20 bytes
 18399 ;; Hardware stack levels used:    1
 18400 ;; This function calls:
 18401 ;;		Nothing
 18402 ;; This function is called by:
 18403 ;;		_calculateProbability
 18404 ;;		_calculateClassProbability
 18405 ;;		_printf
 18406 ;;		_floor
 18407 ;;		_log
 18408 ;;		___flsub
 18409 ;;		_eval_poly
 18410 ;;		_getCrossAccuracy
 18411 ;; This function uses a non-reentrant model
 18412 ;;
 18413                           
 18414                           	psect	text36
 18415  0030F8                     __ptext36:
 18416                           	opt stack 0
 18417  0030F8                     ___fladd:
 18418                           	opt stack 28
 18419                           
 18420                           ;incstack = 0
 18421  0030F8  0100               	movlb	0	; () banked
 18422  0030FA  5163               	movf	(___fladd@b+3)& (0+255),w,b
 18423  0030FC  0B80               	andlw	128
 18424  0030FE  0100               	movlb	0	; () banked
 18425  003100  6F70               	movwf	___fladd@signs& (0+255),b
 18426  003102  0100               	movlb	0	; () banked
 18427  003104  5163               	movf	(___fladd@b+3)& (0+255),w,b
 18428  003106  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 18429  003108  0100               	movlb	0	; () banked
 18430  00310A  6F72               	movwf	___fladd@bexp& (0+255),b
 18431                           
 18432                           ; BSR set to: 0
 18433  00310C  0100               	movlb	0	; () banked
 18434  00310E  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 18435  003110  D002               	goto	l2991
 18436                           
 18437                           ; BSR set to: 0
 18438  003112  0100               	movlb	0	; () banked
 18439  003114  8172               	bsf	___fladd@bexp& (0+255),0,b
 18440  003116                     l2991:
 18441                           
 18442                           ; BSR set to: 0
 18443  003116  0100               	movlb	0	; () banked
 18444  003118  5172               	movf	___fladd@bexp& (0+255),w,b
 18445  00311A  0100               	movlb	0	; () banked
 18446  00311C  B4D8               	btfsc	status,2,c
 18447  00311E  D012               	goto	l3001
 18448                           
 18449                           ; BSR set to: 0
 18450  003120  0100               	movlb	0	; () banked
 18451  003122  2972               	incf	___fladd@bexp& (0+255),w,b
 18452  003124  A4D8               	btfss	status,2,c
 18453  003126  D009               	goto	l2997
 18454                           
 18455                           ; BSR set to: 0
 18456  003128  0E00               	movlw	0
 18457  00312A  0100               	movlb	0	; () banked
 18458  00312C  6F60               	movwf	___fladd@b& (0+255),b
 18459  00312E  0E00               	movlw	0
 18460  003130  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18461  003132  0E00               	movlw	0
 18462  003134  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18463  003136  0E00               	movlw	0
 18464  003138  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18465  00313A                     l2997:
 18466                           
 18467                           ; BSR set to: 0
 18468  00313A  0100               	movlb	0	; () banked
 18469  00313C  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 18470                           
 18471                           ; BSR set to: 0
 18472  00313E  0E00               	movlw	0
 18473  003140  0100               	movlb	0	; () banked
 18474  003142  D008               	goto	L11
 18475  003144                     l3001:
 18476                           
 18477                           ; BSR set to: 0
 18478  003144  0E00               	movlw	0
 18479  003146  0100               	movlb	0	; () banked
 18480  003148  6F60               	movwf	___fladd@b& (0+255),b
 18481  00314A  0E00               	movlw	0
 18482  00314C  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18483  00314E  0E00               	movlw	0
 18484  003150  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18485  003152  0E00               	movlw	0
 18486  003154                     L11:
 18487  003154  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18488                           
 18489                           ; BSR set to: 0
 18490                           
 18491                           ; BSR set to: 0
 18492  003156  0100               	movlb	0	; () banked
 18493  003158  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18494  00315A  0B80               	andlw	128
 18495  00315C  0100               	movlb	0	; () banked
 18496  00315E  6F71               	movwf	___fladd@aexp& (0+255),b
 18497                           
 18498                           ; BSR set to: 0
 18499  003160  0100               	movlb	0	; () banked
 18500  003162  5170               	movf	___fladd@signs& (0+255),w,b
 18501  003164  0100               	movlb	0	; () banked
 18502  003166  1971               	xorwf	___fladd@aexp& (0+255),w,b
 18503  003168  B4D8               	btfsc	status,2,c
 18504  00316A  D002               	goto	l3009
 18505                           
 18506                           ; BSR set to: 0
 18507  00316C  0100               	movlb	0	; () banked
 18508  00316E  8D70               	bsf	___fladd@signs& (0+255),6,b
 18509  003170                     l3009:
 18510                           
 18511                           ; BSR set to: 0
 18512  003170  0100               	movlb	0	; () banked
 18513  003172  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18514  003174  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 18515  003176  0100               	movlb	0	; () banked
 18516  003178  6F71               	movwf	___fladd@aexp& (0+255),b
 18517                           
 18518                           ; BSR set to: 0
 18519  00317A  0100               	movlb	0	; () banked
 18520  00317C  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
 18521  00317E  D002               	goto	l3015
 18522                           
 18523                           ; BSR set to: 0
 18524  003180  0100               	movlb	0	; () banked
 18525  003182  8171               	bsf	___fladd@aexp& (0+255),0,b
 18526  003184                     l3015:
 18527                           
 18528                           ; BSR set to: 0
 18529  003184  0100               	movlb	0	; () banked
 18530  003186  5171               	movf	___fladd@aexp& (0+255),w,b
 18531  003188  0100               	movlb	0	; () banked
 18532  00318A  B4D8               	btfsc	status,2,c
 18533  00318C  D012               	goto	l3025
 18534                           
 18535                           ; BSR set to: 0
 18536  00318E  0100               	movlb	0	; () banked
 18537  003190  2971               	incf	___fladd@aexp& (0+255),w,b
 18538  003192  A4D8               	btfss	status,2,c
 18539  003194  D009               	goto	l3021
 18540                           
 18541                           ; BSR set to: 0
 18542  003196  0E00               	movlw	0
 18543  003198  0100               	movlb	0	; () banked
 18544  00319A  6F64               	movwf	___fladd@a& (0+255),b
 18545  00319C  0E00               	movlw	0
 18546  00319E  6F65               	movwf	(___fladd@a+1)& (0+255),b
 18547  0031A0  0E00               	movlw	0
 18548  0031A2  6F66               	movwf	(___fladd@a+2)& (0+255),b
 18549  0031A4  0E00               	movlw	0
 18550  0031A6  6F67               	movwf	(___fladd@a+3)& (0+255),b
 18551  0031A8                     l3021:
 18552                           
 18553                           ; BSR set to: 0
 18554  0031A8  0100               	movlb	0	; () banked
 18555  0031AA  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 18556                           
 18557                           ; BSR set to: 0
 18558  0031AC  0E00               	movlw	0
 18559  0031AE  0100               	movlb	0	; () banked
 18560  0031B0  D008               	goto	L12
 18561  0031B2                     l3025:
 18562                           
 18563                           ; BSR set to: 0
 18564  0031B2  0E00               	movlw	0
 18565  0031B4  0100               	movlb	0	; () banked
 18566  0031B6  6F64               	movwf	___fladd@a& (0+255),b
 18567  0031B8  0E00               	movlw	0
 18568  0031BA  6F65               	movwf	(___fladd@a+1)& (0+255),b
 18569  0031BC  0E00               	movlw	0
 18570  0031BE  6F66               	movwf	(___fladd@a+2)& (0+255),b
 18571  0031C0  0E00               	movlw	0
 18572  0031C2                     L12:
 18573  0031C2  6F67               	movwf	(___fladd@a+3)& (0+255),b
 18574                           
 18575                           ; BSR set to: 0
 18576                           
 18577                           ; BSR set to: 0
 18578  0031C4  0100               	movlb	0	; () banked
 18579  0031C6  5172               	movf	___fladd@bexp& (0+255),w,b
 18580  0031C8  0100               	movlb	0	; () banked
 18581  0031CA  5D71               	subwf	___fladd@aexp& (0+255),w,b
 18582  0031CC  B0D8               	btfsc	status,0,c
 18583  0031CE  D024               	goto	l3063
 18584                           
 18585                           ; BSR set to: 0
 18586  0031D0  0100               	movlb	0	; () banked
 18587  0031D2  AD70               	btfss	___fladd@signs& (0+255),6,b
 18588  0031D4  D003               	goto	l3033
 18589                           
 18590                           ; BSR set to: 0
 18591  0031D6  0E80               	movlw	128
 18592  0031D8  0100               	movlb	0	; () banked
 18593  0031DA  1B70               	xorwf	___fladd@signs& (0+255),f,b
 18594  0031DC                     l3033:
 18595                           
 18596                           ; BSR set to: 0
 18597  0031DC  C072  F073         	movff	___fladd@bexp,___fladd@grs
 18598                           
 18599                           ; BSR set to: 0
 18600  0031E0  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 18601                           
 18602                           ; BSR set to: 0
 18603  0031E4  C073  F071         	movff	___fladd@grs,___fladd@aexp
 18604                           
 18605                           ; BSR set to: 0
 18606  0031E8  C060  F073         	movff	___fladd@b,___fladd@grs
 18607                           
 18608                           ; BSR set to: 0
 18609  0031EC  C064  F060         	movff	___fladd@a,___fladd@b
 18610                           
 18611                           ; BSR set to: 0
 18612  0031F0  C073  F064         	movff	___fladd@grs,___fladd@a
 18613                           
 18614                           ; BSR set to: 0
 18615  0031F4  C061  F073         	movff	___fladd@b+1,___fladd@grs
 18616                           
 18617                           ; BSR set to: 0
 18618  0031F8  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 18619                           
 18620                           ; BSR set to: 0
 18621  0031FC  C073  F065         	movff	___fladd@grs,___fladd@a+1
 18622                           
 18623                           ; BSR set to: 0
 18624  003200  C062  F073         	movff	___fladd@b+2,___fladd@grs
 18625                           
 18626                           ; BSR set to: 0
 18627  003204  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 18628                           
 18629                           ; BSR set to: 0
 18630  003208  C073  F066         	movff	___fladd@grs,___fladd@a+2
 18631                           
 18632                           ; BSR set to: 0
 18633  00320C  C063  F073         	movff	___fladd@b+3,___fladd@grs
 18634                           
 18635                           ; BSR set to: 0
 18636  003210  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 18637                           
 18638                           ; BSR set to: 0
 18639  003214  C073  F067         	movff	___fladd@grs,___fladd@a+3
 18640  003218                     l3063:
 18641                           
 18642                           ; BSR set to: 0
 18643  003218  0E00               	movlw	0
 18644  00321A  0100               	movlb	0	; () banked
 18645  00321C  6F73               	movwf	___fladd@grs& (0+255),b
 18646                           
 18647                           ; BSR set to: 0
 18648  00321E  0100               	movlb	0	; () banked
 18649  003220  5172               	movf	___fladd@bexp& (0+255),w,b
 18650  003222  0100               	movlb	0	; () banked
 18651  003224  6F68               	movwf	??___fladd& (0+255),b
 18652  003226  6B69               	clrf	(??___fladd+1)& (0+255),b
 18653  003228  0100               	movlb	0	; () banked
 18654  00322A  1F68               	comf	??___fladd& (0+255),f,b
 18655  00322C  1F69               	comf	(??___fladd+1)& (0+255),f,b
 18656  00322E  4B68               	infsnz	??___fladd& (0+255),f,b
 18657  003230  2B69               	incf	(??___fladd+1)& (0+255),f,b
 18658  003232  0100               	movlb	0	; () banked
 18659  003234  5171               	movf	___fladd@aexp& (0+255),w,b
 18660  003236  0100               	movlb	0	; () banked
 18661  003238  6F6A               	movwf	(??___fladd+2)& (0+255),b
 18662  00323A  6B6B               	clrf	(??___fladd+3)& (0+255),b
 18663  00323C  0100               	movlb	0	; () banked
 18664  00323E  5168               	movf	??___fladd& (0+255),w,b
 18665  003240  0100               	movlb	0	; () banked
 18666  003242  276A               	addwf	(??___fladd+2)& (0+255),f,b
 18667  003244  0100               	movlb	0	; () banked
 18668  003246  5169               	movf	(??___fladd+1)& (0+255),w,b
 18669  003248  0100               	movlb	0	; () banked
 18670  00324A  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 18671  00324C  0100               	movlb	0	; () banked
 18672  00324E  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 18673  003250  D03D               	goto	l900
 18674  003252  0100               	movlb	0	; () banked
 18675  003254  516B               	movf	(??___fladd+3)& (0+255),w,b
 18676  003256  E105               	bnz	u3020
 18677  003258  0E1A               	movlw	26
 18678  00325A  0100               	movlb	0	; () banked
 18679  00325C  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 18680  00325E  A0D8               	btfss	status,0,c
 18681  003260  D035               	goto	l900
 18682  003262                     u3020:
 18683                           
 18684                           ; BSR set to: 0
 18685  003262  0100               	movlb	0	; () banked
 18686  003264  5160               	movf	___fladd@b& (0+255),w,b
 18687  003266  0100               	movlb	0	; () banked
 18688  003268  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 18689  00326A  0100               	movlb	0	; () banked
 18690  00326C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 18691  00326E  0100               	movlb	0	; () banked
 18692  003270  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 18693  003272  B4D8               	btfsc	status,2,c
 18694  003274  D002               	goto	u3030
 18695  003276  0E01               	movlw	1
 18696  003278  D001               	goto	u3040
 18697  00327A                     u3030:
 18698  00327A  0E00               	movlw	0
 18699  00327C                     u3040:
 18700  00327C  0100               	movlb	0	; () banked
 18701  00327E  6F73               	movwf	___fladd@grs& (0+255),b
 18702                           
 18703                           ; BSR set to: 0
 18704  003280  0E00               	movlw	0
 18705  003282  0100               	movlb	0	; () banked
 18706  003284  6F60               	movwf	___fladd@b& (0+255),b
 18707  003286  0E00               	movlw	0
 18708  003288  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18709  00328A  0E00               	movlw	0
 18710  00328C  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18711  00328E  0E00               	movlw	0
 18712  003290  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18713                           
 18714                           ; BSR set to: 0
 18715  003292  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 18716  003296  D020               	goto	l899
 18717  003298                     l901:
 18718                           
 18719                           ; BSR set to: 0
 18720  003298  0100               	movlb	0	; () banked
 18721  00329A  A173               	btfss	___fladd@grs& (0+255),0,b
 18722  00329C  D007               	goto	l3075
 18723                           
 18724                           ; BSR set to: 0
 18725  00329E  0100               	movlb	0	; () banked
 18726  0032A0  90D8               	bcf	status,0,c
 18727  0032A2  3173               	rrcf	___fladd@grs& (0+255),w,b
 18728  0032A4  0901               	iorlw	1
 18729  0032A6  0100               	movlb	0	; () banked
 18730  0032A8  6F73               	movwf	___fladd@grs& (0+255),b
 18731  0032AA  D003               	goto	l3077
 18732  0032AC                     l3075:
 18733                           
 18734                           ; BSR set to: 0
 18735  0032AC  0100               	movlb	0	; () banked
 18736  0032AE  90D8               	bcf	status,0,c
 18737  0032B0  3373               	rrcf	___fladd@grs& (0+255),f,b
 18738  0032B2                     l3077:
 18739                           
 18740                           ; BSR set to: 0
 18741  0032B2  0100               	movlb	0	; () banked
 18742  0032B4  A160               	btfss	___fladd@b& (0+255),0,b
 18743  0032B6  D002               	goto	l3081
 18744                           
 18745                           ; BSR set to: 0
 18746  0032B8  0100               	movlb	0	; () banked
 18747  0032BA  8F73               	bsf	___fladd@grs& (0+255),7,b
 18748  0032BC                     l3081:
 18749                           
 18750                           ; BSR set to: 0
 18751  0032BC  0100               	movlb	0	; () banked
 18752  0032BE  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 18753  0032C0  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 18754  0032C2  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 18755  0032C4  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 18756  0032C6  3360               	rrcf	___fladd@b& (0+255),f,b
 18757                           
 18758                           ; BSR set to: 0
 18759  0032C8  0100               	movlb	0	; () banked
 18760  0032CA  2B72               	incf	___fladd@bexp& (0+255),f,b
 18761  0032CC                     l900:
 18762                           
 18763                           ; BSR set to: 0
 18764  0032CC  0100               	movlb	0	; () banked
 18765  0032CE  5171               	movf	___fladd@aexp& (0+255),w,b
 18766  0032D0  0100               	movlb	0	; () banked
 18767  0032D2  5D72               	subwf	___fladd@bexp& (0+255),w,b
 18768  0032D4  A0D8               	btfss	status,0,c
 18769  0032D6  D7E0               	goto	l901
 18770  0032D8                     l899:
 18771                           
 18772                           ; BSR set to: 0
 18773  0032D8  0100               	movlb	0	; () banked
 18774  0032DA  BD70               	btfsc	___fladd@signs& (0+255),6,b
 18775  0032DC  D03F               	goto	l3109
 18776                           
 18777                           ; BSR set to: 0
 18778  0032DE  0100               	movlb	0	; () banked
 18779  0032E0  5172               	movf	___fladd@bexp& (0+255),w,b
 18780  0032E2  0100               	movlb	0	; () banked
 18781  0032E4  A4D8               	btfss	status,2,c
 18782  0032E6  D00A               	goto	l3091
 18783                           
 18784                           ; BSR set to: 0
 18785  0032E8  0E00               	movlw	0
 18786  0032EA  0100               	movlb	0	; () banked
 18787  0032EC  6F60               	movwf	?___fladd& (0+255),b
 18788  0032EE  0E00               	movlw	0
 18789  0032F0  6F61               	movwf	(?___fladd+1)& (0+255),b
 18790  0032F2  0E00               	movlw	0
 18791  0032F4  6F62               	movwf	(?___fladd+2)& (0+255),b
 18792  0032F6  0E00               	movlw	0
 18793  0032F8  6F63               	movwf	(?___fladd+3)& (0+255),b
 18794                           
 18795                           ; BSR set to: 0
 18796  0032FA  0012               	return	
 18797  0032FC                     l3091:
 18798                           
 18799                           ; BSR set to: 0
 18800  0032FC  0100               	movlb	0	; () banked
 18801  0032FE  5164               	movf	___fladd@a& (0+255),w,b
 18802  003300  0100               	movlb	0	; () banked
 18803  003302  2760               	addwf	___fladd@b& (0+255),f,b
 18804  003304  0100               	movlb	0	; () banked
 18805  003306  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18806  003308  0100               	movlb	0	; () banked
 18807  00330A  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 18808  00330C  0100               	movlb	0	; () banked
 18809  00330E  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18810  003310  0100               	movlb	0	; () banked
 18811  003312  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 18812  003314  0100               	movlb	0	; () banked
 18813  003316  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18814  003318  0100               	movlb	0	; () banked
 18815  00331A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 18816                           
 18817                           ; BSR set to: 0
 18818  00331C  0100               	movlb	0	; () banked
 18819  00331E  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 18820  003320  D0CC               	goto	l3145
 18821                           
 18822                           ; BSR set to: 0
 18823  003322  0100               	movlb	0	; () banked
 18824  003324  A173               	btfss	___fladd@grs& (0+255),0,b
 18825  003326  D009               	goto	l3099
 18826                           
 18827                           ; BSR set to: 0
 18828  003328  0100               	movlb	0	; () banked
 18829  00332A  90D8               	bcf	status,0,c
 18830  00332C  3373               	rrcf	___fladd@grs& (0+255),f,b
 18831  00332E  0100               	movlb	0	; () banked
 18832  003330  5173               	movf	___fladd@grs& (0+255),w,b
 18833  003332  0901               	iorlw	1
 18834  003334  0100               	movlb	0	; () banked
 18835  003336  6F73               	movwf	___fladd@grs& (0+255),b
 18836  003338  D003               	goto	l3101
 18837  00333A                     l3099:
 18838                           
 18839                           ; BSR set to: 0
 18840  00333A  0100               	movlb	0	; () banked
 18841  00333C  90D8               	bcf	status,0,c
 18842  00333E  3373               	rrcf	___fladd@grs& (0+255),f,b
 18843  003340                     l3101:
 18844                           
 18845                           ; BSR set to: 0
 18846  003340  0100               	movlb	0	; () banked
 18847  003342  A160               	btfss	___fladd@b& (0+255),0,b
 18848  003344  D002               	goto	l3105
 18849                           
 18850                           ; BSR set to: 0
 18851  003346  0100               	movlb	0	; () banked
 18852  003348  8F73               	bsf	___fladd@grs& (0+255),7,b
 18853  00334A                     l3105:
 18854                           
 18855                           ; BSR set to: 0
 18856  00334A  0100               	movlb	0	; () banked
 18857  00334C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 18858  00334E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 18859  003350  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 18860  003352  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 18861  003354  3360               	rrcf	___fladd@b& (0+255),f,b
 18862                           
 18863                           ; BSR set to: 0
 18864  003356  0100               	movlb	0	; () banked
 18865  003358  2B72               	incf	___fladd@bexp& (0+255),f,b
 18866                           
 18867                           ; BSR set to: 0
 18868  00335A  D0AF               	goto	l3145
 18869  00335C                     l3109:
 18870                           
 18871                           ; BSR set to: 0
 18872  00335C  0100               	movlb	0	; () banked
 18873  00335E  5164               	movf	___fladd@a& (0+255),w,b
 18874  003360  0100               	movlb	0	; () banked
 18875  003362  5D60               	subwf	___fladd@b& (0+255),w,b
 18876  003364  0100               	movlb	0	; () banked
 18877  003366  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18878  003368  0100               	movlb	0	; () banked
 18879  00336A  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 18880  00336C  0100               	movlb	0	; () banked
 18881  00336E  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18882  003370  0100               	movlb	0	; () banked
 18883  003372  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 18884  003374  0100               	movlb	0	; () banked
 18885  003376  5163               	movf	(___fladd@b+3)& (0+255),w,b
 18886  003378  0A80               	xorlw	128
 18887  00337A  0100               	movlb	0	; () banked
 18888  00337C  6F68               	movwf	??___fladd& (0+255),b
 18889  00337E  0100               	movlb	0	; () banked
 18890  003380  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18891  003382  0A80               	xorlw	128
 18892  003384  0100               	movlb	0	; () banked
 18893  003386  5968               	subwfb	??___fladd& (0+255),w,b
 18894  003388  B0D8               	btfsc	status,0,c
 18895  00338A  D050               	goto	l3119
 18896                           
 18897                           ; BSR set to: 0
 18898  00338C  C060  F068         	movff	___fladd@b,??___fladd
 18899  003390  C061  F069         	movff	___fladd@b+1,??___fladd+1
 18900  003394  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 18901  003398  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 18902  00339C  0100               	movlb	0	; () banked
 18903  00339E  1F68               	comf	??___fladd& (0+255),f,b
 18904  0033A0  1F69               	comf	(??___fladd+1)& (0+255),f,b
 18905  0033A2  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 18906  0033A4  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 18907  0033A6  2B68               	incf	??___fladd& (0+255),f,b
 18908  0033A8  0E00               	movlw	0
 18909  0033AA  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 18910  0033AC  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 18911  0033AE  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 18912  0033B0  0100               	movlb	0	; () banked
 18913  0033B2  5164               	movf	___fladd@a& (0+255),w,b
 18914  0033B4  0100               	movlb	0	; () banked
 18915  0033B6  2568               	addwf	??___fladd& (0+255),w,b
 18916  0033B8  0100               	movlb	0	; () banked
 18917  0033BA  6F6C               	movwf	(??___fladd+4)& (0+255),b
 18918  0033BC  0100               	movlb	0	; () banked
 18919  0033BE  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18920  0033C0  0100               	movlb	0	; () banked
 18921  0033C2  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 18922  0033C4  0100               	movlb	0	; () banked
 18923  0033C6  6F6D               	movwf	(??___fladd+5)& (0+255),b
 18924  0033C8  0100               	movlb	0	; () banked
 18925  0033CA  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18926  0033CC  0100               	movlb	0	; () banked
 18927  0033CE  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 18928  0033D0  0100               	movlb	0	; () banked
 18929  0033D2  6F6E               	movwf	(??___fladd+6)& (0+255),b
 18930  0033D4  0100               	movlb	0	; () banked
 18931  0033D6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18932  0033D8  0100               	movlb	0	; () banked
 18933  0033DA  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 18934  0033DC  0100               	movlb	0	; () banked
 18935  0033DE  6F6F               	movwf	(??___fladd+7)& (0+255),b
 18936  0033E0  0EFF               	movlw	255
 18937  0033E2  0100               	movlb	0	; () banked
 18938  0033E4  256C               	addwf	(??___fladd+4)& (0+255),w,b
 18939  0033E6  0100               	movlb	0	; () banked
 18940  0033E8  6F60               	movwf	___fladd@b& (0+255),b
 18941  0033EA  0EFF               	movlw	255
 18942  0033EC  0100               	movlb	0	; () banked
 18943  0033EE  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 18944  0033F0  0100               	movlb	0	; () banked
 18945  0033F2  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18946  0033F4  0EFF               	movlw	255
 18947  0033F6  0100               	movlb	0	; () banked
 18948  0033F8  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 18949  0033FA  0100               	movlb	0	; () banked
 18950  0033FC  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18951  0033FE  0EFF               	movlw	255
 18952  003400  0100               	movlb	0	; () banked
 18953  003402  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 18954  003404  0100               	movlb	0	; () banked
 18955  003406  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18956  003408  0E80               	movlw	128
 18957  00340A  0100               	movlb	0	; () banked
 18958  00340C  1B70               	xorwf	___fladd@signs& (0+255),f,b
 18959                           
 18960                           ; BSR set to: 0
 18961  00340E  0100               	movlb	0	; () banked
 18962  003410  6D73               	negf	___fladd@grs& (0+255),b
 18963                           
 18964                           ; BSR set to: 0
 18965  003412  0100               	movlb	0	; () banked
 18966  003414  5173               	movf	___fladd@grs& (0+255),w,b
 18967  003416  0100               	movlb	0	; () banked
 18968  003418  A4D8               	btfss	status,2,c
 18969  00341A  D018               	goto	l916
 18970                           
 18971                           ; BSR set to: 0
 18972  00341C  0E01               	movlw	1
 18973  00341E  0100               	movlb	0	; () banked
 18974  003420  2760               	addwf	___fladd@b& (0+255),f,b
 18975  003422  0E00               	movlw	0
 18976  003424  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 18977  003426  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 18978  003428  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 18979                           
 18980                           ; BSR set to: 0
 18981  00342A  D010               	goto	l916
 18982  00342C                     l3119:
 18983                           
 18984                           ; BSR set to: 0
 18985  00342C  0100               	movlb	0	; () banked
 18986  00342E  5164               	movf	___fladd@a& (0+255),w,b
 18987  003430  0100               	movlb	0	; () banked
 18988  003432  5F60               	subwf	___fladd@b& (0+255),f,b
 18989  003434  0100               	movlb	0	; () banked
 18990  003436  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18991  003438  0100               	movlb	0	; () banked
 18992  00343A  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 18993  00343C  0100               	movlb	0	; () banked
 18994  00343E  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18995  003440  0100               	movlb	0	; () banked
 18996  003442  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 18997  003444  0100               	movlb	0	; () banked
 18998  003446  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18999  003448  0100               	movlb	0	; () banked
 19000  00344A  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 19001  00344C                     l916:
 19002                           
 19003                           ; BSR set to: 0
 19004  00344C  0100               	movlb	0	; () banked
 19005  00344E  5160               	movf	___fladd@b& (0+255),w,b
 19006  003450  0100               	movlb	0	; () banked
 19007  003452  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 19008  003454  0100               	movlb	0	; () banked
 19009  003456  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 19010  003458  0100               	movlb	0	; () banked
 19011  00345A  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 19012  00345C  A4D8               	btfss	status,2,c
 19013  00345E  D02A               	goto	l3143
 19014                           
 19015                           ; BSR set to: 0
 19016  003460  0100               	movlb	0	; () banked
 19017  003462  5173               	movf	___fladd@grs& (0+255),w,b
 19018  003464  0100               	movlb	0	; () banked
 19019  003466  A4D8               	btfss	status,2,c
 19020  003468  D025               	goto	l3143
 19021                           
 19022                           ; BSR set to: 0
 19023  00346A  0E00               	movlw	0
 19024  00346C  0100               	movlb	0	; () banked
 19025  00346E  6F60               	movwf	?___fladd& (0+255),b
 19026  003470  0E00               	movlw	0
 19027  003472  6F61               	movwf	(?___fladd+1)& (0+255),b
 19028  003474  0E00               	movlw	0
 19029  003476  6F62               	movwf	(?___fladd+2)& (0+255),b
 19030  003478  0E00               	movlw	0
 19031  00347A  6F63               	movwf	(?___fladd+3)& (0+255),b
 19032                           
 19033                           ; BSR set to: 0
 19034  00347C  0012               	return	
 19035  00347E                     l3127:
 19036                           
 19037                           ; BSR set to: 0
 19038  00347E  0100               	movlb	0	; () banked
 19039  003480  90D8               	bcf	status,0,c
 19040  003482  3760               	rlcf	___fladd@b& (0+255),f,b
 19041  003484  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 19042  003486  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 19043  003488  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 19044                           
 19045                           ; BSR set to: 0
 19046  00348A  0100               	movlb	0	; () banked
 19047  00348C  AF73               	btfss	___fladd@grs& (0+255),7,b
 19048  00348E  D002               	goto	l3133
 19049                           
 19050                           ; BSR set to: 0
 19051  003490  0100               	movlb	0	; () banked
 19052  003492  8160               	bsf	___fladd@b& (0+255),0,b
 19053  003494                     l3133:
 19054                           
 19055                           ; BSR set to: 0
 19056  003494  0100               	movlb	0	; () banked
 19057  003496  A173               	btfss	___fladd@grs& (0+255),0,b
 19058  003498  D003               	goto	l3137
 19059                           
 19060                           ; BSR set to: 0
 19061  00349A  80D8               	bsf	status,0,c
 19062  00349C  0100               	movlb	0	; () banked
 19063  00349E  D002               	goto	L13
 19064  0034A0                     l3137:
 19065                           
 19066                           ; BSR set to: 0
 19067  0034A0  0100               	movlb	0	; () banked
 19068  0034A2  90D8               	bcf	status,0,c
 19069  0034A4                     L13:
 19070  0034A4  3773               	rlcf	___fladd@grs& (0+255),f,b
 19071                           
 19072                           ; BSR set to: 0
 19073                           
 19074                           ; BSR set to: 0
 19075  0034A6  0100               	movlb	0	; () banked
 19076  0034A8  5172               	movf	___fladd@bexp& (0+255),w,b
 19077  0034AA  0100               	movlb	0	; () banked
 19078  0034AC  B4D8               	btfsc	status,2,c
 19079  0034AE  D002               	goto	l3143
 19080                           
 19081                           ; BSR set to: 0
 19082  0034B0  0100               	movlb	0	; () banked
 19083  0034B2  0772               	decf	___fladd@bexp& (0+255),f,b
 19084  0034B4                     l3143:
 19085                           
 19086                           ; BSR set to: 0
 19087  0034B4  0100               	movlb	0	; () banked
 19088  0034B6  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 19089  0034B8  D7E2               	goto	l3127
 19090  0034BA                     l3145:
 19091                           
 19092                           ; BSR set to: 0
 19093  0034BA  0E00               	movlw	0
 19094  0034BC  0100               	movlb	0	; () banked
 19095  0034BE  6F71               	movwf	___fladd@aexp& (0+255),b
 19096                           
 19097                           ; BSR set to: 0
 19098  0034C0  0100               	movlb	0	; () banked
 19099  0034C2  AF73               	btfss	___fladd@grs& (0+255),7,b
 19100  0034C4  D00D               	goto	l925
 19101                           
 19102                           ; BSR set to: 0
 19103  0034C6  C073  F068         	movff	___fladd@grs,??___fladd
 19104  0034CA  0E7F               	movlw	127
 19105  0034CC  0100               	movlb	0	; () banked
 19106  0034CE  1768               	andwf	??___fladd& (0+255),f,b
 19107  0034D0  A4D8               	btfss	status,2,c
 19108  0034D2  D003               	goto	l3153
 19109                           
 19110                           ; BSR set to: 0
 19111                           
 19112                           ; BSR set to: 0
 19113  0034D4  0100               	movlb	0	; () banked
 19114  0034D6  A160               	btfss	___fladd@b& (0+255),0,b
 19115  0034D8  D003               	goto	l925
 19116  0034DA                     l3153:
 19117                           
 19118                           ; BSR set to: 0
 19119  0034DA  0E01               	movlw	1
 19120  0034DC  0100               	movlb	0	; () banked
 19121  0034DE  6F71               	movwf	___fladd@aexp& (0+255),b
 19122  0034E0                     l925:
 19123                           
 19124                           ; BSR set to: 0
 19125  0034E0  0100               	movlb	0	; () banked
 19126  0034E2  5171               	movf	___fladd@aexp& (0+255),w,b
 19127  0034E4  0100               	movlb	0	; () banked
 19128  0034E6  B4D8               	btfsc	status,2,c
 19129  0034E8  D026               	goto	l3163
 19130                           
 19131                           ; BSR set to: 0
 19132  0034EA  0E01               	movlw	1
 19133  0034EC  0100               	movlb	0	; () banked
 19134  0034EE  2760               	addwf	___fladd@b& (0+255),f,b
 19135  0034F0  0E00               	movlw	0
 19136  0034F2  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 19137  0034F4  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 19138  0034F6  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 19139                           
 19140                           ; BSR set to: 0
 19141  0034F8  0100               	movlb	0	; () banked
 19142  0034FA  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 19143  0034FC  D01C               	goto	l3163
 19144                           
 19145                           ; BSR set to: 0
 19146  0034FE  C060  F068         	movff	___fladd@b,??___fladd
 19147  003502  C061  F069         	movff	___fladd@b+1,??___fladd+1
 19148  003506  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 19149  00350A  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 19150  00350E  0100               	movlb	0	; () banked
 19151  003510  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 19152  003512  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 19153  003514  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 19154  003516  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 19155  003518  3368               	rrcf	??___fladd& (0+255),f,b
 19156  00351A  C068  F060         	movff	??___fladd,___fladd@b
 19157  00351E  C069  F061         	movff	??___fladd+1,___fladd@b+1
 19158  003522  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 19159  003526  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 19160  00352A  0100               	movlb	0	; () banked
 19161  00352C  2972               	incf	___fladd@bexp& (0+255),w,b
 19162  00352E  B4D8               	btfsc	status,2,c
 19163  003530  D002               	goto	l3163
 19164                           
 19165                           ; BSR set to: 0
 19166  003532  0100               	movlb	0	; () banked
 19167  003534  2B72               	incf	___fladd@bexp& (0+255),f,b
 19168  003536                     l3163:
 19169                           
 19170                           ; BSR set to: 0
 19171  003536  0100               	movlb	0	; () banked
 19172  003538  2972               	incf	___fladd@bexp& (0+255),w,b
 19173  00353A  B4D8               	btfsc	status,2,c
 19174  00353C  D005               	goto	l3167
 19175                           
 19176                           ; BSR set to: 0
 19177  00353E  0100               	movlb	0	; () banked
 19178  003540  5172               	movf	___fladd@bexp& (0+255),w,b
 19179  003542  0100               	movlb	0	; () banked
 19180  003544  A4D8               	btfss	status,2,c
 19181  003546  D011               	goto	l3171
 19182  003548                     l3167:
 19183                           
 19184                           ; BSR set to: 0
 19185  003548  0E00               	movlw	0
 19186  00354A  0100               	movlb	0	; () banked
 19187  00354C  6F60               	movwf	___fladd@b& (0+255),b
 19188  00354E  0E00               	movlw	0
 19189  003550  6F61               	movwf	(___fladd@b+1)& (0+255),b
 19190  003552  0E00               	movlw	0
 19191  003554  6F62               	movwf	(___fladd@b+2)& (0+255),b
 19192  003556  0E00               	movlw	0
 19193  003558  6F63               	movwf	(___fladd@b+3)& (0+255),b
 19194  00355A  0100               	movlb	0	; () banked
 19195  00355C  5172               	movf	___fladd@bexp& (0+255),w,b
 19196  00355E  0100               	movlb	0	; () banked
 19197  003560  A4D8               	btfss	status,2,c
 19198  003562  D003               	goto	l3171
 19199                           
 19200                           ; BSR set to: 0
 19201  003564  0E00               	movlw	0
 19202  003566  0100               	movlb	0	; () banked
 19203  003568  6F70               	movwf	___fladd@signs& (0+255),b
 19204  00356A                     l3171:
 19205                           
 19206                           ; BSR set to: 0
 19207  00356A  0100               	movlb	0	; () banked
 19208  00356C  A172               	btfss	___fladd@bexp& (0+255),0,b
 19209  00356E  D003               	goto	l3175
 19210                           
 19211                           ; BSR set to: 0
 19212  003570  0100               	movlb	0	; () banked
 19213  003572  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 19214  003574  D002               	goto	l3177
 19215  003576                     l3175:
 19216                           
 19217                           ; BSR set to: 0
 19218  003576  0100               	movlb	0	; () banked
 19219  003578  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 19220  00357A                     l3177:
 19221                           
 19222                           ; BSR set to: 0
 19223  00357A  0100               	movlb	0	; () banked
 19224  00357C  90D8               	bcf	status,0,c
 19225  00357E  3172               	rrcf	___fladd@bexp& (0+255),w,b
 19226  003580  0100               	movlb	0	; () banked
 19227  003582  6F63               	movwf	(___fladd@b+3)& (0+255),b
 19228                           
 19229                           ; BSR set to: 0
 19230  003584  0100               	movlb	0	; () banked
 19231  003586  AF70               	btfss	___fladd@signs& (0+255),7,b
 19232  003588  D002               	goto	l3183
 19233                           
 19234                           ; BSR set to: 0
 19235  00358A  0100               	movlb	0	; () banked
 19236  00358C  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 19237  00358E                     l3183:
 19238                           
 19239                           ; BSR set to: 0
 19240  00358E  C060  F060         	movff	___fladd@b,?___fladd
 19241  003592  C061  F061         	movff	___fladd@b+1,?___fladd+1
 19242  003596  C062  F062         	movff	___fladd@b+2,?___fladd+2
 19243  00359A  C063  F063         	movff	___fladd@b+3,?___fladd+3
 19244  00359E  0012               	return	
 19245  0035A0                     __end_of___fladd:
 19246                           	opt stack 0
 19247                           tblptru	equ	0xFF8
 19248                           tblptrh	equ	0xFF7
 19249                           tblptrl	equ	0xFF6
 19250                           tablat	equ	0xFF5
 19251                           prodh	equ	0xFF4
 19252                           prodl	equ	0xFF3
 19253                           postinc0	equ	0xFEE
 19254                           wreg	equ	0xFE8
 19255                           indf2	equ	0xFDF
 19256                           postinc2	equ	0xFDE
 19257                           postdec2	equ	0xFDD
 19258                           fsr2h	equ	0xFDA
 19259                           fsr2l	equ	0xFD9
 19260                           status	equ	0xFD8
 19261                           
 19262 ;; *************** function ___flneg *****************
 19263 ;; Defined at:
 19264 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
 19265 ;; Parameters:    Size  Location     Type
 19266 ;;  f1              4    0[COMRAM] unsigned char 
 19267 ;; Auto vars:     Size  Location     Type
 19268 ;;		None
 19269 ;; Return value:  Size  Location     Type
 19270 ;;                  4    0[COMRAM] unsigned char 
 19271 ;; Registers used:
 19272 ;;		wreg, status,2, status,0
 19273 ;; Tracked objects:
 19274 ;;		On entry : 0/0
 19275 ;;		On exit  : 0/0
 19276 ;;		Unchanged: 0/0
 19277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19278 ;;      Params:         4       0       0       0       0       0       0       0       0
 19279 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19280 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19281 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19282 ;;Total ram usage:        4 bytes
 19283 ;; Hardware stack levels used:    1
 19284 ;; This function calls:
 19285 ;;		Nothing
 19286 ;; This function is called by:
 19287 ;;		_calculateProbability
 19288 ;;		_printf
 19289 ;;		_exp
 19290 ;;		_pow
 19291 ;; This function uses a non-reentrant model
 19292 ;;
 19293                           
 19294                           	psect	text37
 19295  00030E                     __ptext37:
 19296                           	opt stack 0
 19297  00030E                     ___flneg:
 19298                           	opt stack 29
 19299                           
 19300                           ; BSR set to: 0
 19301                           ;incstack = 0
 19302  00030E  5001               	movf	___flneg@f1,w,c
 19303  000310  1002               	iorwf	___flneg@f1+1,w,c
 19304  000312  1003               	iorwf	___flneg@f1+2,w,c
 19305  000314  1004               	iorwf	___flneg@f1+3,w,c
 19306  000316  B4D8               	btfsc	status,2,c
 19307  000318  D008               	goto	l3657
 19308  00031A  0E00               	movlw	0
 19309  00031C  1A01               	xorwf	___flneg@f1,f,c
 19310  00031E  0E00               	movlw	0
 19311  000320  1A02               	xorwf	___flneg@f1+1,f,c
 19312  000322  0E00               	movlw	0
 19313  000324  1A03               	xorwf	___flneg@f1+2,f,c
 19314  000326  0E80               	movlw	128
 19315  000328  1A04               	xorwf	___flneg@f1+3,f,c
 19316  00032A                     l3657:
 19317  00032A  C001  F001         	movff	___flneg@f1,?___flneg
 19318  00032E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 19319  000332  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 19320  000336  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 19321  00033A  0012               	return	
 19322  00033C                     __end_of___flneg:
 19323                           	opt stack 0
 19324                           tblptru	equ	0xFF8
 19325                           tblptrh	equ	0xFF7
 19326                           tblptrl	equ	0xFF6
 19327                           tablat	equ	0xFF5
 19328                           prodh	equ	0xFF4
 19329                           prodl	equ	0xFF3
 19330                           postinc0	equ	0xFEE
 19331                           wreg	equ	0xFE8
 19332                           indf2	equ	0xFDF
 19333                           postinc2	equ	0xFDE
 19334                           postdec2	equ	0xFDD
 19335                           fsr2h	equ	0xFDA
 19336                           fsr2l	equ	0xFD9
 19337                           status	equ	0xFD8
 19338                           
 19339 ;; *************** function ___fldiv *****************
 19340 ;; Defined at:
 19341 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
 19342 ;; Parameters:    Size  Location     Type
 19343 ;;  b               4   29[COMRAM] unsigned char 
 19344 ;;  a               4   33[COMRAM] unsigned char 
 19345 ;; Auto vars:     Size  Location     Type
 19346 ;;  grs             4   48[COMRAM] unsigned long 
 19347 ;;  rem             4   42[COMRAM] unsigned long 
 19348 ;;  new_exp         2   46[COMRAM] int 
 19349 ;;  aexp            1   53[COMRAM] unsigned char 
 19350 ;;  bexp            1   52[COMRAM] unsigned char 
 19351 ;;  sign            1   41[COMRAM] unsigned char 
 19352 ;; Return value:  Size  Location     Type
 19353 ;;                  4   29[COMRAM] unsigned char 
 19354 ;; Registers used:
 19355 ;;		wreg, status,2, status,0
 19356 ;; Tracked objects:
 19357 ;;		On entry : 0/0
 19358 ;;		On exit  : 0/0
 19359 ;;		Unchanged: 0/0
 19360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19361 ;;      Params:         8       0       0       0       0       0       0       0       0
 19362 ;;      Locals:        13       0       0       0       0       0       0       0       0
 19363 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19364 ;;      Totals:        25       0       0       0       0       0       0       0       0
 19365 ;;Total ram usage:       25 bytes
 19366 ;; Hardware stack levels used:    1
 19367 ;; This function calls:
 19368 ;;		Nothing
 19369 ;; This function is called by:
 19370 ;;		_calculateProbability
 19371 ;;		_getAccuracy
 19372 ;;		_getRecall
 19373 ;;		_getPrecision
 19374 ;;		_exp
 19375 ;;		_getCrossAccuracy
 19376 ;; This function uses a non-reentrant model
 19377 ;;
 19378                           
 19379                           	psect	text38
 19380  002418                     __ptext38:
 19381                           	opt stack 0
 19382  002418                     ___fldiv:
 19383                           	opt stack 28
 19384                           
 19385                           ;incstack = 0
 19386  002418  5021               	movf	___fldiv@b+3,w,c
 19387  00241A  0B80               	andlw	128
 19388  00241C  6E2A               	movwf	___fldiv@sign,c
 19389  00241E  5021               	movf	___fldiv@b+3,w,c
 19390  002420  2421               	addwf	___fldiv@b+3,w,c
 19391  002422  6E35               	movwf	___fldiv@bexp,c
 19392  002424  BE20               	btfsc	___fldiv@b+2,7,c
 19393  002426  8035               	bsf	___fldiv@bexp,0,c
 19394  002428  5035               	movf	___fldiv@bexp,w,c
 19395  00242A  B4D8               	btfsc	status,2,c
 19396  00242C  D00D               	goto	l3461
 19397  00242E  2835               	incf	___fldiv@bexp,w,c
 19398  002430  A4D8               	btfss	status,2,c
 19399  002432  D008               	goto	l3457
 19400  002434  0E00               	movlw	0
 19401  002436  6E1E               	movwf	___fldiv@b,c
 19402  002438  0E00               	movlw	0
 19403  00243A  6E1F               	movwf	___fldiv@b+1,c
 19404  00243C  0E00               	movlw	0
 19405  00243E  6E20               	movwf	___fldiv@b+2,c
 19406  002440  0E00               	movlw	0
 19407  002442  6E21               	movwf	___fldiv@b+3,c
 19408  002444                     l3457:
 19409  002444  8E20               	bsf	___fldiv@b+2,7,c
 19410  002446  D006               	goto	L14
 19411  002448                     l3461:
 19412  002448  0E00               	movlw	0
 19413  00244A  6E1E               	movwf	___fldiv@b,c
 19414  00244C  0E00               	movlw	0
 19415  00244E  6E1F               	movwf	___fldiv@b+1,c
 19416  002450  0E00               	movlw	0
 19417  002452  6E20               	movwf	___fldiv@b+2,c
 19418  002454                     L14:
 19419  002454  0E00               	movlw	0
 19420  002456  6E21               	movwf	___fldiv@b+3,c
 19421  002458  5025               	movf	___fldiv@a+3,w,c
 19422  00245A  0B80               	andlw	128
 19423  00245C  1A2A               	xorwf	___fldiv@sign,f,c
 19424  00245E  5025               	movf	___fldiv@a+3,w,c
 19425  002460  2425               	addwf	___fldiv@a+3,w,c
 19426  002462  6E36               	movwf	___fldiv@aexp,c
 19427  002464  BE24               	btfsc	___fldiv@a+2,7,c
 19428  002466  8036               	bsf	___fldiv@aexp,0,c
 19429  002468  5036               	movf	___fldiv@aexp,w,c
 19430  00246A  B4D8               	btfsc	status,2,c
 19431  00246C  D00D               	goto	l3481
 19432  00246E  2836               	incf	___fldiv@aexp,w,c
 19433  002470  A4D8               	btfss	status,2,c
 19434  002472  D008               	goto	l3477
 19435  002474  0E00               	movlw	0
 19436  002476  6E22               	movwf	___fldiv@a,c
 19437  002478  0E00               	movlw	0
 19438  00247A  6E23               	movwf	___fldiv@a+1,c
 19439  00247C  0E00               	movlw	0
 19440  00247E  6E24               	movwf	___fldiv@a+2,c
 19441  002480  0E00               	movlw	0
 19442  002482  6E25               	movwf	___fldiv@a+3,c
 19443  002484                     l3477:
 19444  002484  8E24               	bsf	___fldiv@a+2,7,c
 19445  002486  D006               	goto	L15
 19446  002488                     l3481:
 19447  002488  0E00               	movlw	0
 19448  00248A  6E22               	movwf	___fldiv@a,c
 19449  00248C  0E00               	movlw	0
 19450  00248E  6E23               	movwf	___fldiv@a+1,c
 19451  002490  0E00               	movlw	0
 19452  002492  6E24               	movwf	___fldiv@a+2,c
 19453  002494                     L15:
 19454  002494  0E00               	movlw	0
 19455  002496  6E25               	movwf	___fldiv@a+3,c
 19456  002498  5022               	movf	___fldiv@a,w,c
 19457  00249A  1023               	iorwf	___fldiv@a+1,w,c
 19458  00249C  1024               	iorwf	___fldiv@a+2,w,c
 19459  00249E  1025               	iorwf	___fldiv@a+3,w,c
 19460  0024A0  A4D8               	btfss	status,2,c
 19461  0024A2  D015               	goto	l3493
 19462  0024A4  0E00               	movlw	0
 19463  0024A6  6E1E               	movwf	___fldiv@b,c
 19464  0024A8  0E00               	movlw	0
 19465  0024AA  6E1F               	movwf	___fldiv@b+1,c
 19466  0024AC  0E00               	movlw	0
 19467  0024AE  6E20               	movwf	___fldiv@b+2,c
 19468  0024B0  0E00               	movlw	0
 19469  0024B2  6E21               	movwf	___fldiv@b+3,c
 19470  0024B4  0E80               	movlw	128
 19471  0024B6  1220               	iorwf	___fldiv@b+2,f,c
 19472  0024B8  0E7F               	movlw	127
 19473  0024BA  1221               	iorwf	___fldiv@b+3,f,c
 19474  0024BC  C01E  F01E         	movff	___fldiv@b,?___fldiv
 19475  0024C0  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
 19476  0024C4  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
 19477  0024C8  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
 19478  0024CC  0012               	return	
 19479  0024CE                     l3493:
 19480  0024CE  5035               	movf	___fldiv@bexp,w,c
 19481  0024D0  A4D8               	btfss	status,2,c
 19482  0024D2  D011               	goto	l3501
 19483  0024D4  0E00               	movlw	0
 19484  0024D6  6E1E               	movwf	___fldiv@b,c
 19485  0024D8  0E00               	movlw	0
 19486  0024DA  6E1F               	movwf	___fldiv@b+1,c
 19487  0024DC  0E00               	movlw	0
 19488  0024DE  6E20               	movwf	___fldiv@b+2,c
 19489  0024E0  0E00               	movlw	0
 19490  0024E2  6E21               	movwf	___fldiv@b+3,c
 19491  0024E4  C01E  F01E         	movff	___fldiv@b,?___fldiv
 19492  0024E8  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
 19493  0024EC  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
 19494  0024F0  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
 19495  0024F4  0012               	return	
 19496  0024F6                     l3501:
 19497  0024F6  5036               	movf	___fldiv@aexp,w,c
 19498  0024F8  6E26               	movwf	??___fldiv& (0+255),c
 19499  0024FA  6A27               	clrf	(??___fldiv+1)& (0+255),c
 19500  0024FC  1E26               	comf	??___fldiv,f,c
 19501  0024FE  1E27               	comf	??___fldiv+1,f,c
 19502  002500  4A26               	infsnz	??___fldiv,f,c
 19503  002502  2A27               	incf	??___fldiv+1,f,c
 19504  002504  5035               	movf	___fldiv@bexp,w,c
 19505  002506  6E28               	movwf	(??___fldiv+2)& (0+255),c
 19506  002508  6A29               	clrf	(??___fldiv+3)& (0+255),c
 19507  00250A  5026               	movf	??___fldiv,w,c
 19508  00250C  2628               	addwf	??___fldiv+2,f,c
 19509  00250E  5027               	movf	??___fldiv+1,w,c
 19510  002510  2229               	addwfc	??___fldiv+3,f,c
 19511  002512  0E7F               	movlw	127
 19512  002514  2428               	addwf	??___fldiv+2,w,c
 19513  002516  6E2F               	movwf	___fldiv@new_exp,c
 19514  002518  0E00               	movlw	0
 19515  00251A  2029               	addwfc	??___fldiv+3,w,c
 19516  00251C  6E30               	movwf	___fldiv@new_exp+1,c
 19517  00251E  C01E  F02B         	movff	___fldiv@b,___fldiv@rem
 19518  002522  C01F  F02C         	movff	___fldiv@b+1,___fldiv@rem+1
 19519  002526  C020  F02D         	movff	___fldiv@b+2,___fldiv@rem+2
 19520  00252A  C021  F02E         	movff	___fldiv@b+3,___fldiv@rem+3
 19521  00252E  0E00               	movlw	0
 19522  002530  6E1E               	movwf	___fldiv@b,c
 19523  002532  0E00               	movlw	0
 19524  002534  6E1F               	movwf	___fldiv@b+1,c
 19525  002536  0E00               	movlw	0
 19526  002538  6E20               	movwf	___fldiv@b+2,c
 19527  00253A  0E00               	movlw	0
 19528  00253C  6E21               	movwf	___fldiv@b+3,c
 19529  00253E  0E00               	movlw	0
 19530  002540  6E31               	movwf	___fldiv@grs,c
 19531  002542  0E00               	movlw	0
 19532  002544  6E32               	movwf	___fldiv@grs+1,c
 19533  002546  0E00               	movlw	0
 19534  002548  6E33               	movwf	___fldiv@grs+2,c
 19535  00254A  0E00               	movlw	0
 19536  00254C  6E34               	movwf	___fldiv@grs+3,c
 19537  00254E  0E00               	movlw	0
 19538  002550  6E36               	movwf	___fldiv@aexp,c
 19539  002552  D028               	goto	l955
 19540  002554                     l3511:
 19541  002554  5036               	movf	___fldiv@aexp,w,c
 19542  002556  B4D8               	btfsc	status,2,c
 19543  002558  D011               	goto	l3519
 19544  00255A  90D8               	bcf	status,0,c
 19545  00255C  362B               	rlcf	___fldiv@rem,f,c
 19546  00255E  362C               	rlcf	___fldiv@rem+1,f,c
 19547  002560  362D               	rlcf	___fldiv@rem+2,f,c
 19548  002562  362E               	rlcf	___fldiv@rem+3,f,c
 19549  002564  90D8               	bcf	status,0,c
 19550  002566  361E               	rlcf	___fldiv@b,f,c
 19551  002568  361F               	rlcf	___fldiv@b+1,f,c
 19552  00256A  3620               	rlcf	___fldiv@b+2,f,c
 19553  00256C  3621               	rlcf	___fldiv@b+3,f,c
 19554  00256E  BE34               	btfsc	___fldiv@grs+3,7,c
 19555  002570  801E               	bsf	___fldiv@b,0,c
 19556  002572  90D8               	bcf	status,0,c
 19557  002574  3631               	rlcf	___fldiv@grs,f,c
 19558  002576  3632               	rlcf	___fldiv@grs+1,f,c
 19559  002578  3633               	rlcf	___fldiv@grs+2,f,c
 19560  00257A  3634               	rlcf	___fldiv@grs+3,f,c
 19561  00257C                     l3519:
 19562  00257C  5022               	movf	___fldiv@a,w,c
 19563  00257E  5C2B               	subwf	___fldiv@rem,w,c
 19564  002580  5023               	movf	___fldiv@a+1,w,c
 19565  002582  582C               	subwfb	___fldiv@rem+1,w,c
 19566  002584  5024               	movf	___fldiv@a+2,w,c
 19567  002586  582D               	subwfb	___fldiv@rem+2,w,c
 19568  002588  5025               	movf	___fldiv@a+3,w,c
 19569  00258A  582E               	subwfb	___fldiv@rem+3,w,c
 19570  00258C  A0D8               	btfss	status,0,c
 19571  00258E  D009               	goto	l3525
 19572  002590  8C34               	bsf	___fldiv@grs+3,6,c
 19573  002592  5022               	movf	___fldiv@a,w,c
 19574  002594  5E2B               	subwf	___fldiv@rem,f,c
 19575  002596  5023               	movf	___fldiv@a+1,w,c
 19576  002598  5A2C               	subwfb	___fldiv@rem+1,f,c
 19577  00259A  5024               	movf	___fldiv@a+2,w,c
 19578  00259C  5A2D               	subwfb	___fldiv@rem+2,f,c
 19579  00259E  5025               	movf	___fldiv@a+3,w,c
 19580  0025A0  5A2E               	subwfb	___fldiv@rem+3,f,c
 19581  0025A2                     l3525:
 19582  0025A2  2A36               	incf	___fldiv@aexp,f,c
 19583  0025A4                     l955:
 19584  0025A4  0E19               	movlw	25
 19585  0025A6  6436               	cpfsgt	___fldiv@aexp,c
 19586  0025A8  D7D5               	goto	l3511
 19587  0025AA  502B               	movf	___fldiv@rem,w,c
 19588  0025AC  102C               	iorwf	___fldiv@rem+1,w,c
 19589  0025AE  102D               	iorwf	___fldiv@rem+2,w,c
 19590  0025B0  102E               	iorwf	___fldiv@rem+3,w,c
 19591  0025B2  B4D8               	btfsc	status,2,c
 19592  0025B4  D011               	goto	l3537
 19593  0025B6  8031               	bsf	___fldiv@grs,0,c
 19594  0025B8  D00F               	goto	l3537
 19595  0025BA                     l3531:
 19596  0025BA  90D8               	bcf	status,0,c
 19597  0025BC  361E               	rlcf	___fldiv@b,f,c
 19598  0025BE  361F               	rlcf	___fldiv@b+1,f,c
 19599  0025C0  3620               	rlcf	___fldiv@b+2,f,c
 19600  0025C2  3621               	rlcf	___fldiv@b+3,f,c
 19601  0025C4  BE34               	btfsc	___fldiv@grs+3,7,c
 19602  0025C6  801E               	bsf	___fldiv@b,0,c
 19603  0025C8  90D8               	bcf	status,0,c
 19604  0025CA  3631               	rlcf	___fldiv@grs,f,c
 19605  0025CC  3632               	rlcf	___fldiv@grs+1,f,c
 19606  0025CE  3633               	rlcf	___fldiv@grs+2,f,c
 19607  0025D0  3634               	rlcf	___fldiv@grs+3,f,c
 19608  0025D2  062F               	decf	___fldiv@new_exp,f,c
 19609  0025D4  A0D8               	btfss	status,0,c
 19610  0025D6  0630               	decf	___fldiv@new_exp+1,f,c
 19611  0025D8                     l3537:
 19612  0025D8  AE20               	btfss	___fldiv@b+2,7,c
 19613  0025DA  D7EF               	goto	l3531
 19614  0025DC  0E00               	movlw	0
 19615  0025DE  6E36               	movwf	___fldiv@aexp,c
 19616  0025E0  AE34               	btfss	___fldiv@grs+3,7,c
 19617  0025E2  D016               	goto	l966
 19618  0025E4  0EFF               	movlw	255
 19619  0025E6  1431               	andwf	___fldiv@grs,w,c
 19620  0025E8  6E26               	movwf	??___fldiv& (0+255),c
 19621  0025EA  0EFF               	movlw	255
 19622  0025EC  1432               	andwf	___fldiv@grs+1,w,c
 19623  0025EE  6E27               	movwf	(??___fldiv+1)& (0+255),c
 19624  0025F0  0EFF               	movlw	255
 19625  0025F2  1433               	andwf	___fldiv@grs+2,w,c
 19626  0025F4  6E28               	movwf	(??___fldiv+2)& (0+255),c
 19627  0025F6  0E7F               	movlw	127
 19628  0025F8  1434               	andwf	___fldiv@grs+3,w,c
 19629  0025FA  6E29               	movwf	(??___fldiv+3)& (0+255),c
 19630  0025FC  5026               	movf	??___fldiv,w,c
 19631  0025FE  1027               	iorwf	??___fldiv+1,w,c
 19632  002600  1028               	iorwf	??___fldiv+2,w,c
 19633  002602  1029               	iorwf	??___fldiv+3,w,c
 19634  002604  A4D8               	btfss	status,2,c
 19635  002606  D002               	goto	l3547
 19636  002608  A01E               	btfss	___fldiv@b,0,c
 19637  00260A  D002               	goto	l966
 19638  00260C                     l3547:
 19639  00260C  0E01               	movlw	1
 19640  00260E  6E36               	movwf	___fldiv@aexp,c
 19641  002610                     l966:
 19642  002610  5036               	movf	___fldiv@aexp,w,c
 19643  002612  B4D8               	btfsc	status,2,c
 19644  002614  D01F               	goto	l3557
 19645  002616  0E01               	movlw	1
 19646  002618  261E               	addwf	___fldiv@b,f,c
 19647  00261A  0E00               	movlw	0
 19648  00261C  221F               	addwfc	___fldiv@b+1,f,c
 19649  00261E  2220               	addwfc	___fldiv@b+2,f,c
 19650  002620  2221               	addwfc	___fldiv@b+3,f,c
 19651  002622  A021               	btfss	___fldiv@b+3,0,c
 19652  002624  D017               	goto	l3557
 19653  002626  C01E  F026         	movff	___fldiv@b,??___fldiv
 19654  00262A  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
 19655  00262E  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
 19656  002632  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
 19657  002636  3429               	rlcf	??___fldiv+3,w,c
 19658  002638  3229               	rrcf	??___fldiv+3,f,c
 19659  00263A  3228               	rrcf	??___fldiv+2,f,c
 19660  00263C  3227               	rrcf	??___fldiv+1,f,c
 19661  00263E  3226               	rrcf	??___fldiv,f,c
 19662  002640  C026  F01E         	movff	??___fldiv,___fldiv@b
 19663  002644  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
 19664  002648  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
 19665  00264C  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
 19666  002650  4A2F               	infsnz	___fldiv@new_exp,f,c
 19667  002652  2A30               	incf	___fldiv@new_exp+1,f,c
 19668  002654                     l3557:
 19669  002654  BE30               	btfsc	___fldiv@new_exp+1,7,c
 19670  002656  D010               	goto	l3561
 19671  002658  5030               	movf	___fldiv@new_exp+1,w,c
 19672  00265A  E103               	bnz	u3950
 19673  00265C  282F               	incf	___fldiv@new_exp,w,c
 19674  00265E  A0D8               	btfss	status,0,c
 19675  002660  D00B               	goto	l3561
 19676  002662                     u3950:
 19677  002662  0E00               	movlw	0
 19678  002664  6E30               	movwf	___fldiv@new_exp+1,c
 19679  002666  682F               	setf	___fldiv@new_exp,c
 19680  002668  0E00               	movlw	0
 19681  00266A  6E1E               	movwf	___fldiv@b,c
 19682  00266C  0E00               	movlw	0
 19683  00266E  6E1F               	movwf	___fldiv@b+1,c
 19684  002670  0E00               	movlw	0
 19685  002672  6E20               	movwf	___fldiv@b+2,c
 19686  002674  0E00               	movlw	0
 19687  002676  6E21               	movwf	___fldiv@b+3,c
 19688  002678                     l3561:
 19689  002678  BE30               	btfsc	___fldiv@new_exp+1,7,c
 19690  00267A  D005               	goto	l3563
 19691  00267C  5030               	movf	___fldiv@new_exp+1,w,c
 19692  00267E  E111               	bnz	l3565
 19693  002680  042F               	decf	___fldiv@new_exp,w,c
 19694  002682  B0D8               	btfsc	status,0,c
 19695  002684  D00E               	goto	l3565
 19696  002686                     l3563:
 19697  002686  0E00               	movlw	0
 19698  002688  6E30               	movwf	___fldiv@new_exp+1,c
 19699  00268A  0E00               	movlw	0
 19700  00268C  6E2F               	movwf	___fldiv@new_exp,c
 19701  00268E  0E00               	movlw	0
 19702  002690  6E1E               	movwf	___fldiv@b,c
 19703  002692  0E00               	movlw	0
 19704  002694  6E1F               	movwf	___fldiv@b+1,c
 19705  002696  0E00               	movlw	0
 19706  002698  6E20               	movwf	___fldiv@b+2,c
 19707  00269A  0E00               	movlw	0
 19708  00269C  6E21               	movwf	___fldiv@b+3,c
 19709  00269E  0E00               	movlw	0
 19710  0026A0  6E2A               	movwf	___fldiv@sign,c
 19711  0026A2                     l3565:
 19712  0026A2  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
 19713  0026A6  A035               	btfss	___fldiv@bexp,0,c
 19714  0026A8  D002               	goto	l3571
 19715  0026AA  8E20               	bsf	___fldiv@b+2,7,c
 19716  0026AC  D001               	goto	l3573
 19717  0026AE                     l3571:
 19718  0026AE  9E20               	bcf	___fldiv@b+2,7,c
 19719  0026B0                     l3573:
 19720  0026B0  90D8               	bcf	status,0,c
 19721  0026B2  3035               	rrcf	___fldiv@bexp,w,c
 19722  0026B4  6E21               	movwf	___fldiv@b+3,c
 19723  0026B6  502A               	movf	___fldiv@sign,w,c
 19724  0026B8  1221               	iorwf	___fldiv@b+3,f,c
 19725  0026BA  C01E  F01E         	movff	___fldiv@b,?___fldiv
 19726  0026BE  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
 19727  0026C2  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
 19728  0026C6  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
 19729  0026CA  0012               	return	
 19730  0026CC                     __end_of___fldiv:
 19731                           	opt stack 0
 19732                           tblptru	equ	0xFF8
 19733                           tblptrh	equ	0xFF7
 19734                           tblptrl	equ	0xFF6
 19735                           tablat	equ	0xFF5
 19736                           prodh	equ	0xFF4
 19737                           prodl	equ	0xFF3
 19738                           postinc0	equ	0xFEE
 19739                           wreg	equ	0xFE8
 19740                           indf2	equ	0xFDF
 19741                           postinc2	equ	0xFDE
 19742                           postdec2	equ	0xFDD
 19743                           fsr2h	equ	0xFDA
 19744                           fsr2l	equ	0xFD9
 19745                           status	equ	0xFD8
 19746                           
 19747 ;; *************** function ___wmul *****************
 19748 ;; Defined at:
 19749 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 19750 ;; Parameters:    Size  Location     Type
 19751 ;;  multiplier      2    0[COMRAM] unsigned int 
 19752 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19753 ;; Auto vars:     Size  Location     Type
 19754 ;;  product         2    4[COMRAM] unsigned int 
 19755 ;; Return value:  Size  Location     Type
 19756 ;;                  2    0[COMRAM] unsigned int 
 19757 ;; Registers used:
 19758 ;;		wreg, status,2, status,0, prodl, prodh
 19759 ;; Tracked objects:
 19760 ;;		On entry : 0/0
 19761 ;;		On exit  : 0/0
 19762 ;;		Unchanged: 0/0
 19763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19764 ;;      Params:         4       0       0       0       0       0       0       0       0
 19765 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19766 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19767 ;;      Totals:         6       0       0       0       0       0       0       0       0
 19768 ;;Total ram usage:        6 bytes
 19769 ;; Hardware stack levels used:    1
 19770 ;; This function calls:
 19771 ;;		Nothing
 19772 ;; This function is called by:
 19773 ;;		_calculateClassProbability
 19774 ;;		_calculateMetrics
 19775 ;;		_getAccuracy
 19776 ;;		_getRecall
 19777 ;;		_getPrecision
 19778 ;;		_printConfusionMatrix
 19779 ;;		_printf
 19780 ;;		_printTestset
 19781 ;;		_printSummaries
 19782 ;;		_printTestSetLine
 19783 ;;		_showOff
 19784 ;; This function uses a non-reentrant model
 19785 ;;
 19786                           
 19787                           	psect	text39
 19788  0002E8                     __ptext39:
 19789                           	opt stack 0
 19790  0002E8                     ___wmul:
 19791                           	opt stack 29
 19792                           
 19793                           ;incstack = 0
 19794  0002E8  5001               	movf	___wmul@multiplier,w,c
 19795  0002EA  0203               	mulwf	___wmul@multiplicand,c
 19796  0002EC  CFF3 F005          	movff	prodl,___wmul@product
 19797  0002F0  CFF4 F006          	movff	prodh,___wmul@product+1
 19798  0002F4  5001               	movf	___wmul@multiplier,w,c
 19799  0002F6  0204               	mulwf	___wmul@multiplicand+1,c
 19800  0002F8  50F3               	movf	prodl,w,c
 19801  0002FA  2606               	addwf	___wmul@product+1,f,c
 19802  0002FC  5002               	movf	___wmul@multiplier+1,w,c
 19803  0002FE  0203               	mulwf	___wmul@multiplicand,c
 19804  000300  50F3               	movf	prodl,w,c
 19805  000302  2606               	addwf	___wmul@product+1,f,c
 19806  000304  C005  F001         	movff	___wmul@product,?___wmul
 19807  000308  C006  F002         	movff	___wmul@product+1,?___wmul+1
 19808  00030C  0012               	return	
 19809  00030E                     __end_of___wmul:
 19810                           	opt stack 0
 19811                           tblptru	equ	0xFF8
 19812                           tblptrh	equ	0xFF7
 19813                           tblptrl	equ	0xFF6
 19814                           tablat	equ	0xFF5
 19815                           prodh	equ	0xFF4
 19816                           prodl	equ	0xFF3
 19817                           postinc0	equ	0xFEE
 19818                           wreg	equ	0xFE8
 19819                           indf2	equ	0xFDF
 19820                           postinc2	equ	0xFDE
 19821                           postdec2	equ	0xFDD
 19822                           fsr2h	equ	0xFDA
 19823                           fsr2l	equ	0xFD9
 19824                           status	equ	0xFD8
 19825                           tblptru	equ	0xFF8
 19826                           tblptrh	equ	0xFF7
 19827                           tblptrl	equ	0xFF6
 19828                           tablat	equ	0xFF5
 19829                           prodh	equ	0xFF4
 19830                           prodl	equ	0xFF3
 19831                           postinc0	equ	0xFEE
 19832                           wreg	equ	0xFE8
 19833                           indf2	equ	0xFDF
 19834                           postinc2	equ	0xFDE
 19835                           postdec2	equ	0xFDD
 19836                           fsr2h	equ	0xFDA
 19837                           fsr2l	equ	0xFD9
 19838                           status	equ	0xFD8
 19839                           
 19840                           	psect	rparam
 19841  0000                     tblptru	equ	0xFF8
 19842                           tblptrh	equ	0xFF7
 19843                           tblptrl	equ	0xFF6
 19844                           tablat	equ	0xFF5
 19845                           prodh	equ	0xFF4
 19846                           prodl	equ	0xFF3
 19847                           postinc0	equ	0xFEE
 19848                           wreg	equ	0xFE8
 19849                           indf2	equ	0xFDF
 19850                           postinc2	equ	0xFDE
 19851                           postdec2	equ	0xFDD
 19852                           fsr2h	equ	0xFDA
 19853                           fsr2l	equ	0xFD9
 19854                           status	equ	0xFD8


Data Sizes:
    Strings     571
    Constant    15420
    Data        0
    BSS         202
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    160     160
    BANK1           256     61      64
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    getAccuracy$1384	PTR float  size(2) Largest target is 9120
		 -> testSet(CODE[9120]), 

    calculateMetrics$1382	PTR float  size(2) Largest target is 9120
		 -> testSet(CODE[9120]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(BANK0[2]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_29(CODE[7]), STR_28(CODE[16]), STR_27(CODE[15]), STR_26(CODE[21]), 
		 -> STR_25(CODE[58]), STR_24(CODE[75]), STR_23(CODE[8]), STR_22(CODE[2]), 
		 -> STR_21(CODE[8]), STR_20(CODE[11]), STR_19(CODE[2]), STR_18(CODE[8]), 
		 -> STR_17(CODE[11]), STR_16(CODE[68]), STR_15(CODE[2]), STR_14(CODE[18]), 
		 -> STR_13(CODE[12]), STR_12(CODE[2]), STR_11(CODE[3]), STR_10(CODE[3]), 
		 -> STR_9(CODE[51]), STR_8(CODE[2]), STR_7(CODE[14]), STR_6(CODE[17]), 
		 -> STR_5(CODE[22]), STR_4(CODE[69]), STR_3(CODE[18]), STR_2(CODE[27]), 
		 -> STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    predict@inputVector	PTR float  size(2) Largest target is 9120
		 -> testSet(CODE[9120]), 

    calculateClassProbability@inputVector	PTR float  size(2) Largest target is 9120
		 -> testSet(CODE[9120]), 


Critical Paths under _main in COMRAM

    _getRecall->___fldiv
    _getPrecision->___fldiv
    _getAccuracy->___fltol
    _printf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___llmod->___lldiv
    _init_uart->_OpenUSART
    _calculateMetrics->___fltol
    _calculateProbability->_log
    _pow->___fltol
    _pow->_log
    _exp->___fltol
    _exp->_ldexp
    _exp->_log
    _floor->___fltol
    ___xxtofl->___wmul
    ___fltol->_scale
    ___flmul->___fldiv
    ___fladd->_fround
    ___fldiv->_sqrt

Critical Paths under _main in BANK0

    _printMetrics->_getAccuracy
    _getAccuracy->_predict
    _printf->_getAccuracy
    _calculateMetrics->_predict
    _predict->_calculateClassProbability
    _calculateClassProbability->_calculateProbability
    _calculateProbability->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fladd
    _eval_poly->___fladd
    ___flsub->___fladd

Critical Paths under _main in BANK1

    _main->_printConfusionMatrix
    _printMetrics->_printf
    _printConfusionMatrix->_printf
    _printf->_getAccuracy

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  408213
                   _calculateMetrics
                          _init_uart
               _printConfusionMatrix
                       _printMetrics
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printMetrics                                         2     2      0  191396
                                             53 BANK1      2     2      0
                        _getAccuracy
                       _getPrecision
                          _getRecall
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getRecall                                           12     8      4    6296
                                             54 COMRAM    12     8      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _getPrecision                                        12     8      4    6296
                                             54 COMRAM    12     8      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _getAccuracy                                         14    10      4  136497
                                            154 BANK0      6     2      4
                                              0 BANK1      8     8      0
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                            _predict
 ---------------------------------------------------------------------------------
 (1) _printConfusionMatrix                                 8     8      0   45419
                                             53 BANK1      8     8      0
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              46    36     10   42195
                                              8 BANK1     45    35     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                        _getAccuracy (ARG)
                       _getPrecision (ARG)
                          _getRecall (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               13     9      4    8131
                                             79 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    13      4    7933
                                             79 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     431
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     431
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     546
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0     284
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _calculateMetrics                                    12    12      0  128919
                                            154 BANK0      2     2      0
                                              0 BANK1     10    10      0
                            ___fltol
                             ___wmul
                            _predict
 ---------------------------------------------------------------------------------
 (3) _predict                                             14    12      2  124908
                                            140 BANK0     14    12      2
                             ___flge
          _calculateClassProbability
 ---------------------------------------------------------------------------------
 (4) _calculateClassProbability                           26    22      4  123283
                                            114 BANK0     26    22      4
                            ___fladd
                             ___wmul
               _calculateProbability
 ---------------------------------------------------------------------------------
 (5) _calculateProbability                                40    28     12  116695
                                             74 BANK0     40    28     12
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul (ARG)
                                _exp
                                _log
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (6) _sqrt                                                29    25      4     945
                                              0 COMRAM    29    25      4
 ---------------------------------------------------------------------------------
 (6) _pow                                                 21    13      8   56782
                                             53 BANK0     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (7) _log                                                  6     2      4   18116
                                             92 COMRAM     2     2      0
                                             36 BANK0      4     0      4
                            ___fladd
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (7) _exp                                                 11     7      4   30035
                                             42 BANK0     11     7      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (8) _ldexp                                                8     2      6     376
                                             92 COMRAM     2     2      0
                                             36 BANK0      6     0      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (8) _floor                                               10     6      4    7006
                                             20 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (8) _frexp                                                8     2      6     480
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1026
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     741
                                             88 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1206
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) _eval_poly                                           16     8      8    8414
                                             20 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4614
                                             54 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3641
                                             20 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3238
                                              0 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     429
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2073
                                             29 COMRAM    25    17      8
                            ___flneg (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2975
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculateMetrics
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
     ___wmul
     _predict
       ___flge
       _calculateClassProbability
         ___fladd
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
         ___wmul
         _calculateProbability
           ___fladd
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
           ___fldiv
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
           ___flneg
           ___wmul (ARG)
           _exp (ARG)
             ___fldiv
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
             ___xxtofl
               ___wmul (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
             _floor
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___flge
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _frexp
             _ldexp
               _eval_poly (ARG)
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
             _log (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _eval_poly
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
               _frexp
           _log (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
             ___xxtofl
               ___wmul (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
             _frexp
           _pow (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
             ___flneg
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
             ___xxtofl
               ___wmul (ARG)
             _exp
               ___fldiv
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flge
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _eval_poly
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
               _floor
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flge
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _frexp
               _ldexp
                 _eval_poly (ARG)
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               _log (ARG)
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _frexp
             _log
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _eval_poly
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
               _frexp
           _sqrt (ARG)
   _init_uart
     _OpenUSART
   _printConfusionMatrix
     ___wmul
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
       _getAccuracy (ARG)
         ___fldiv
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
         _predict
           ___flge
           _calculateClassProbability
             ___fladd
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
             ___wmul
             _calculateProbability
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___fldiv
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg
               ___wmul (ARG)
               _exp (ARG)
                 ___fldiv
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flge
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _floor
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flge
                   ___fltol
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _frexp
                 _ldexp
                   _eval_poly (ARG)
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 _log (ARG)
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _eval_poly
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                   _frexp
               _log (ARG)
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _frexp
               _pow (ARG)
                 ___flge
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _exp
                   ___fldiv
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flge
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                   ___fltol
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _eval_poly
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                   _floor
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flge
                     ___fltol
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___xxtofl
                       ___wmul (ARG)
                     _frexp
                   _ldexp
                     _eval_poly (ARG)
                       ___fladd
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _fround (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___fldiv (ARG)
                               ___flneg (ARG)
                               ___wmul (ARG)
                               ___xxtofl (ARG)
                                 ___wmul (ARG)
                               _sqrt (ARG)
                             ___flneg (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _frexp (ARG)
                             _sqrt (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   _log (ARG)
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___xxtofl
                       ___wmul (ARG)
                     _eval_poly
                       ___fladd
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _fround (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___fldiv (ARG)
                               ___flneg (ARG)
                               ___wmul (ARG)
                               ___xxtofl (ARG)
                                 ___wmul (ARG)
                               _sqrt (ARG)
                             ___flneg (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _frexp (ARG)
                             _sqrt (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                     _frexp
                 _log
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _eval_poly
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                   _frexp
               _sqrt (ARG)
       _getPrecision (ARG)
         ___fldiv
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
       _getRecall (ARG)
         ___fldiv
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
   _printMetrics
     _getAccuracy
       ___fldiv
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _sqrt (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       _predict
         ___flge
         _calculateClassProbability
           ___fladd
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
           ___wmul
           _calculateProbability
             ___fladd
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
             ___fldiv
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
             ___flneg
             ___wmul (ARG)
             _exp (ARG)
               ___fldiv
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flge
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _eval_poly
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
               _floor
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flge
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _frexp
               _ldexp
                 _eval_poly (ARG)
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               _log (ARG)
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _frexp
             _log (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _eval_poly
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
               _frexp
             _pow (ARG)
               ___flge
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _exp
                 ___fldiv
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flge
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _floor
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flge
                   ___fltol
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _frexp
                 _ldexp
                   _eval_poly (ARG)
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 _log (ARG)
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _eval_poly
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                   _frexp
               _log
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _frexp
             _sqrt (ARG)
     _getPrecision
       ___fldiv
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _sqrt (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
     _getRecall
       ___fldiv
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _sqrt (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
       _getAccuracy (ARG)
         ___fldiv
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
         _predict
           ___flge
           _calculateClassProbability
             ___fladd
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
             ___wmul
             _calculateProbability
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___fldiv
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg
               ___wmul (ARG)
               _exp (ARG)
                 ___fldiv
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flge
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _floor
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flge
                   ___fltol
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _frexp
                 _ldexp
                   _eval_poly (ARG)
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 _log (ARG)
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _eval_poly
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                   _frexp
               _log (ARG)
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _frexp
               _pow (ARG)
                 ___flge
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _exp
                   ___fldiv
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flge
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                   ___fltol
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _eval_poly
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                   _floor
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flge
                     ___fltol
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___xxtofl
                       ___wmul (ARG)
                     _frexp
                   _ldexp
                     _eval_poly (ARG)
                       ___fladd
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _fround (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___fldiv (ARG)
                               ___flneg (ARG)
                               ___wmul (ARG)
                               ___xxtofl (ARG)
                                 ___wmul (ARG)
                               _sqrt (ARG)
                             ___flneg (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _frexp (ARG)
                             _sqrt (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   _log (ARG)
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___xxtofl
                       ___wmul (ARG)
                     _eval_poly
                       ___fladd
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _fround (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___fldiv (ARG)
                               ___flneg (ARG)
                               ___wmul (ARG)
                               ___xxtofl (ARG)
                                 ___wmul (ARG)
                               _sqrt (ARG)
                             ___flneg (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _frexp (ARG)
                             _sqrt (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                     _frexp
                 _log
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _eval_poly
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                   _frexp
               _sqrt (ARG)
       _getPrecision (ARG)
         ___fldiv
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
       _getRecall (ARG)
         ___fldiv
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
   _printf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___fldiv (ARG)
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _sqrt (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)
       ___flneg (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _frexp (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _sqrt (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _frexp (ARG)
       _sqrt (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)
     _getAccuracy (ARG)
       ___fldiv
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _sqrt (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _sqrt (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _frexp (ARG)
           _sqrt (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _sqrt (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       _predict
         ___flge
         _calculateClassProbability
           ___fladd
             ___fldiv (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
             ___flneg (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
           ___wmul
           _calculateProbability
             ___fladd
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
             ___fldiv
               ___flneg (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _sqrt (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
               _sqrt (ARG)
             ___flneg
             ___wmul (ARG)
             _exp (ARG)
               ___fldiv
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _sqrt (ARG)
               ___flge
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _eval_poly
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
               _floor
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flge
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _frexp
               _ldexp
                 _eval_poly (ARG)
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               _log (ARG)
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _frexp
             _log (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _eval_poly
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
               _frexp
             _pow (ARG)
               ___flge
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flneg (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
                 _sqrt (ARG)
               ___flneg
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
               ___xxtofl
                 ___wmul (ARG)
               _exp
                 ___fldiv
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _sqrt (ARG)
                 ___flge
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___fltol
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _floor
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flge
                   ___fltol
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _frexp
                 _ldexp
                   _eval_poly (ARG)
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 _log (ARG)
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___xxtofl
                     ___wmul (ARG)
                   _eval_poly
                     ___fladd
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _fround (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                             ___flneg (ARG)
                             ___wmul (ARG)
                             ___xxtofl (ARG)
                               ___wmul (ARG)
                             _sqrt (ARG)
                           ___flneg (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _frexp (ARG)
                           _sqrt (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                   _frexp
               _log
                 ___fladd
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _sqrt (ARG)
                   ___flneg (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                   _sqrt (ARG)
                 ___xxtofl
                   ___wmul (ARG)
                 _eval_poly
                   ___fladd
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                         ___flneg (ARG)
                         ___wmul (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _sqrt (ARG)
                       ___flneg (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _fround (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                           ___flneg (ARG)
                           ___wmul (ARG)
                           ___xxtofl (ARG)
                             ___wmul (ARG)
                           _sqrt (ARG)
                         ___flneg (ARG)
                         ___xxtofl (ARG)
                           ___wmul (ARG)
                         _frexp (ARG)
                         _sqrt (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                       ___flneg (ARG)
                       ___wmul (ARG)
                       ___xxtofl (ARG)
                         ___wmul (ARG)
                       _sqrt (ARG)
                     ___flneg (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                     _sqrt (ARG)
                 _frexp
             _sqrt (ARG)
     _getPrecision (ARG)
       ___fldiv
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _sqrt (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
     _getRecall (ARG)
       ___fldiv
         ___flneg (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _sqrt (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___flneg (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _sqrt (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _frexp (ARG)
         _sqrt (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3D      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     207      20        0.0%
DATA                 0      0     207       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Sep 02 23:39:43 2016

                             ___fldiv@aexp 0036                               ___fldiv@bexp 0035  
                             ___fldiv@sign 002A                                         l33 0288  
                                       l42 037C                                         l72 1ADA  
                                       l80 072E                                         l90 190E  
                                       l77 075A                                         l95 12B0  
                             ___awdiv@sign 000C                        ___wmul@multiplicand 0003  
                              __CFG_BORV$3 000000               calculateProbability@exponent 00B6  
                                      l145 15D8                                        l332 03E8  
                                      l336 03FC                                        l337 03FE  
                                      l338 0408                                        l339 040A  
                                      l613 0E56                                        l277 3D28  
                                      l570 109E                                        l900 32CC  
                                      l580 0F4C                                        l556 2406  
                                      l901 3298                                        l916 344C  
                                      l692 1142                                        l925 34E0  
                                      l693 116A                                        l774 056C  
                                      l880 1CCE                                        l784 047A  
                                      l955 25A4                                        l875 1B38  
                                      l699 11D0                                        l966 2610  
                                      l985 2A10                                        l994 2C26  
                                      l899 32D8                                        _exp 218C  
                                      _log 15DA                                        _pow 1AEC  
                             ___awmod@sign 0006                                        wreg 000FE8  
     calculateClassProbability@inputVector 00D4                               __CFG_FOSC$HS 000000  
                             ___flmul@aexp 0048                               ___flmul@bexp 0049  
                             ___flmul@sign 0043                               ___flmul@temp 004E  
                             ___flmul@prod 004A                               __CFG_LVP$OFF 000000  
               ?_calculateClassProbability 00D2                               ___fltol@exp1 005E  
                             __CFG_WDT$OFF 000000                                       l1002 2CAC  
                                     l1041 1422                                       l1042 1436  
                                     l1034 13E6                                       l1027 1368  
                                     l3001 3144                                       l3101 3340  
                                     l3021 31A8                                       l3015 3184  
                                     l3105 334A                                       l3033 31DC  
                                     l3025 31B2                                       l3009 3170  
                                     l3201 29C0                                       l3203 29D0  
                                     l4011 0746                                       l3133 3494  
                                     l3109 335C                                       l3301 2C96  
                                     l4005 06D4                                       l3127 347E  
                                     l3143 34B4                                       l3119 342C  
                                     l3063 3218                                       l3311 2CCA  
                                     l3223 2A1C                                       l3153 34DA  
                                     l3137 34A0                                       l3145 34BA  
                                     l3081 32BC                                       l3217 29FC  
                                     l3321 0E9C                                       l4201 1098  
                                     l4033 213E                                       l4025 2072  
                                     l3171 356A                                       l3163 3536  
                                     l3091 32FC                                       l3075 32AC  
                                     l3227 2A2E                                       l3219 2A00  
                                     l4211 052A                                       l3501 24F6  
                                     l3077 32B2                                       l3325 0ED0  
                                     l3421 13CE                                       l4221 055E  
                                     l4213 052E                                       l4141 11CA  
                                     l4133 11A6                                       l4053 2EC6  
                                     l3511 2554                                       l3183 358E  
                                     l3175 3576                                       l3167 3548  
                                     l3335 0F84                                       l3415 1396  
                                     l4231 0444                                       l4071 30CE  
                                     l4047 2E22                                       l4303 35F8  
                                     l4311 366C                                       l3177 357A  
                                     l3329 0F0E                                       l3441 1468  
                                     l3417 139C                                       l3409 1378  
                                     l3601 0D9A                                       l4209 051E  
                                     l4233 0448                                       l4129 1196  
                                     l4065 302A                                       l4057 2EF0  
                                     l4321 36D0                                       l3531 25BA  
                                     l3099 333A                                       l3275 2BEE  
                                     l3427 140C                                       l3419 13A8  
                                     l3347 0630                                       l4251 03DC  
                                     l4155 0FC4                                       l4139 11BE  
                                     l4083 02E0                                       l4403 3984  
                                     l4323 36E6                                       l3525 25A2  
                                     l3461 2448                                       l3285 2C22  
                                     l3269 2BD0                                       l3613 0C8C  
                                     l3381 07E2                                       l3365 0782  
                                     l3429 1418                                       l3605 0DBC  
                                     l4237 046C                                       l4229 0438  
                                     l4149 0FA6                                       l4093 10DC  
                                     l4501 3E9A                                       l4405 399A  
                                     l4341 3756                                       l4317 3694  
                                     l3519 257C                                       l3295 2C6A  
                                     l3199 29BC                                       l3615 0D2C  
                                     l3391 080A                                       l3631 0BB0  
                                     l3623 0B58                                       l3703 23D0  
                                     l4415 3A36                                       l4407 39D6  
                                     l4351 37A2                                       l4343 375C  
                                     l4335 3724                                       l4327 36F6  
                                     l3561 2678                                       l3537 25D8  
                                     l3481 2488                                       l3457 2444  
                                     l3393 0816                                       l3385 07F2  
                                     l3713 15FE                                       l4193 1074  
                                     l4177 1036                                       l4169 1006  
                                     l4505 3EA8                                       l4433 3B46  
                                     l4409 39EC                                       l4345 3774  
                                     l4329 36FC                                       l3571 26AE  
                                     l3563 2686                                       l3547 260C  
                                     l3299 2C88                                       l3395 081C  
                                     l3643 0BE0                                       l4259 03EA  
                                     l4099 1108                                       l4523 3F20  
                                     l4451 3BE2                                       l4435 3B4C  
                                     l4419 3A64                                       l4507 3EB6  
                                     l4339 374A                                       l3573 26B0  
                                     l3565 26A2                                       l3557 2654  
                                     l3493 24CE                                       l3477 2484  
                                     l4189 1064                                       l4541 3F94  
                                     l4525 3F26                                       l4517 3EFA  
                                     l4461 3C26                                       l4429 3ACE  
                                     l4365 3804                                       l4349 3788  
                                     l4357 37BA                                       l4293 35B0  
                                     l4701 150E                                       l4621 093C  
                                     l4605 0A3E                                       l3399 0832  
                                     l3647 0BF2                                       l3719 1630  
                                     l3831 2844                                       l3815 279A  
                                     l3807 2770                                       l4199 108C  
                                     l4551 3FF8                                       l4471 3CDA  
                                     l4455 3C04                                       l4447 3B92  
                                     l4391 38D6                                       l4375 3856  
                                     l4359 37EA                                       l4631 0990  
                                     l4615 0A92                                       l3657 032A  
                                     l3673 21FA                                       l3753 1BF4  
                                     l3745 1B74                                       l3833 286C  
                                     l3825 27F8                                       l3905 1946  
                                     l3921 0592                                       l4545 3FC4  
                                     l4537 3F6C                                       l4473 3CE8  
                                     l4465 3C4E                                       l4457 3C0A  
                                     l4297 35C6                                       l4705 1530  
                                     l4625 094C                                       l4609 0A4E  
                                     l3667 21B4                                       l3739 1B4C  
                                     l3851 2956                                       l3827 27FE  
                                     l4643 1762                                       l4571 40A2  
                                     l4563 4072                                       l4483 3D2C  
                                     l4459 3C12                                       l4731 0874  
                                     l3597 0D86                                       l3685 227E  
                                     l3757 1C22                                       l4653 1798  
                                     l3933 05B8                                       l4565 407C  
                                     l4557 4030                                       l4493 3DB2  
                                     l4477 3CF6                                       l4581 4166  
                                     l4717 15B4                                       l4709 1546  
                                     l2991 3116                                       l3679 2240  
                                     l3839 28A2                                       l4663 17F6  
                                     l4647 1778                                       l3935 05C0  
                                     l3927 05A2                                       l4575 40CA  
                                     l4567 4088                                       l4559 403A  
                                     l4479 3D0A                                       l4399 3956  
                                     l4727 085E                                       l4649 1782  
                                     l3953 05F8                                       l3945 05E0  
                                     l3937 05C4                                       l4489 3D50  
                                     l4585 11F6                                       l4737 08FC  
                                     l3795 2736                                       l3787 270C  
                                     l4659 17EE                                       l4579 4150  
                                     l4499 3E8C                                       l4683 14A4  
                                     ?_exp 008A                                       l2997 313A  
                                     l3789 271C                                       l4669 181A  
                                     l3949 05EA                                       l3981 04DA  
                                     l3973 04BA                                       l3965 04A0  
                                     l4693 14DA                                       l4589 120C  
                                     ?_log 0084                                       l3975 04C2  
                                     l4687 14BA                                       l4599 12B8  
                                     l3889 1EEC                                       l3977 04C6  
                                     l3985 04E4                                       l3969 04AC  
                                     l3989 04F2                                       ?_pow 0095  
                                     STR_1 7F4A                                       STR_2 7F04  
                                     STR_3 7F71                                       STR_4 7E0E  
                                     STR_5 7F1F                                       STR_6 7F83  
                                     STR_7 7FB3                                       STR_8 7ECF  
                                     STR_9 7ED1                                       u3020 3262  
                                     u3030 327A                                       u3040 327C  
                                     u4000 0DAA                                       u3400 2B92  
                                     u4040 0B80                                       u4120 224A  
                                     u4130 224C                                       u3405 2B88  
                                     u4230 1BD6                                       u4048 0B82  
                             printf@tmpval 0122                                       u3480 2C78  
                                     u3570 0658                                       u4370 1944  
                                     u4530 0706                                       u4380 1ADA  
                                     u3590 07A2                                       u4550 075A  
                                     u3578 065A                                       u5290 3D20  
                                     u3595 0796                                       u4651 10C0  
                                     u5620 1818                                       u3950 2662  
                                     u4671 10EC                                       u5660 150C  
                                     _baud 013F                            _confusionMatrix 0200  
                                     _main 033C                     ??_printConfusionMatrix 0135  
                                     fsr2h 000FDA                                       indf2 000FDF  
                                     fsr2l 000FD9                                       _sqrt 26CC  
                                     exp@x 008A                                       log@x 0084  
                                     pow@x 0095                                       pow@y 0099  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0000                              __CFG_IESO$OFF 000000  
                            printMetrics@i 0135                            ___fldiv@new_exp 002F  
                             ___param_bank 000010                           _getAccuracy$1384 0102  
                                    ??_exp 005F                                      ??_log 005D  
                                    ??_pow 005F                              ___fltol@sign1 005D  
                          __end_of___fladd 35A0                                      ?_main 0001  
                          __end_of___fldiv 26CC                            __end_of___awdiv 0602  
                          __end_of___flneg 033C                                      STR_10 7FFB  
                                    STR_20 7FD8                                      STR_21 7FE3  
                                    STR_13 7FC1                                      STR_22 7ECF  
                                    STR_14 7F5F                                      STR_23 7FF3  
                                    STR_16 7E53                                      STR_24 7DC3  
                                    STR_17 7FCD                                      STR_25 7E97  
                                    STR_18 7FEB                                      STR_26 7F35  
                                    STR_19 7ECF                                      STR_27 7FA4  
                                    STR_28 7F94                            __end_of___awmod 04FC  
                          __end_of___flmul 2CE0                            __end_of___flsub 03C6  
                          __end_of___fltol 0844                            __end_of___lldiv 057E  
                                    ?_sqrt 0001                            ___awdiv@divisor 0009  
                          __end_of___llmod 048C                            ___awdiv@counter 000B  
                                    _RCSTA 000FAB                                      _SPBRG 000FAF  
                                    _TXREG 000FAD                                      _TXSTA 000FAC  
                            __CFG_PWRT$OFF 000000                            __end_of_dpowers 59D7  
                                    _means 4187                                      _floor 0D4A  
                                    _ldexp 0B30                                      _frexp 0602  
                                    _errno 013D                                      _scale 2CE0  
                          __end_of_isdigit 02E8                                      _putch 0286  
                          __end_of_predict 0764                                      tablat 000FF5  
                          __end_of_testSet 7D77                                      pow@yi 00A6  
                                    sqrt@a 0001                                      sqrt@i 000A  
                                    sqrt@p 000F                                      status 000FD8  
            __size_of_calculateProbability 0232                                exp@exponent 0092  
                _printConfusionMatrix$1388 0137                                ldexp@newexp 0088  
                           __CFG_MCLRE$OFF 000000                            __initialization 02AE  
                     __size_of_getAccuracy 0148                                log@exponent 005D  
                             __end_of_main 037E                               __end_of_sqrt 2990  
                                   ??_main 005F                                     ??_sqrt 0005  
                            __activetblptr 000002                          ?_calculateMetrics 0001  
                     __size_of__tdiv_to_l_ 0132                         ??_calculateMetrics 00FA  
                     __end_of_getPrecision 0A2E                                     ?_floor 0074  
                                   ?_ldexp 0084                                     ?_frexp 0001  
                         ___llmod@dividend 000E                                     ?_scale 0050  
                         ___awdiv@dividend 0007                                     ?_putch 0001  
                                   _SPBRGH 000FB0                           __end_of___xxtofl 147A  
                         __end_of__powers_ 59AF                         __size_of_OpenUSART 0060  
                                   ___flge 0E68                                  ??___fladd 0068  
                                   ___wmul 02E8                                  ??___fldiv 0026  
                                ??___awdiv 000B                                  ??___flneg 0005  
                           __CFG_STVREN$ON 000000                                  ??___awmod 0005  
                                ??___flmul 003F                                  ??___flsub 005D  
                                ??___fltol 0060                                  ??___lldiv 0009  
                                ??___llmod 0016                                     _fround 1F12  
                                   clear_0 02B4                           ___awdiv@quotient 000D  
                          ___awmod@divisor 0003                            ___awmod@counter 0005  
                                   _printf 35A0                                     _stdevs 4D67  
                                   floor@i 0078                                     floor@x 0074  
                                ??_isdigit 0001                               __mediumconst 4186  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                  ??_predict 005F  
                               ___flge@ff1 0001                                 ___flge@ff2 0005  
                             ___xxtofl@arg 0011                           __end_ofexp@coeff 7D9F  
                             ___xxtofl@exp 0010                               ___xxtofl@val 0007  
                         __end_oflog@coeff 7DC3                                 __accesstop 0060  
                  __end_of__initialization 02C0  calculateClassProbability@classProbability 00E6  
                          __CFG_PBADEN$OFF 000000                                 ___flneg@f1 0001  
                             eval_poly@res 0080                              ___rparam_used 000001  
                               ___fltol@f1 0059                             __pcstackCOMRAM 0001  
                            __end_of_means 4D67                              __end_of_floor 0E68  
                            __end_of_ldexp 0C3A                              __end_of_frexp 069C  
                            __end_of_scale 30F8                              __end_of_putch 0292  
                               __div_to_l_ 0F88                         __size_of_getRecall 0102  
                        __end_of_OpenUSART 0426                            __div_to_l_@exp1 000E  
                                  ??_floor 005F                                    ??_ldexp 005D  
                          __div_to_l_@cntr 000D                                    ??_frexp 0007  
                                  ??_scale 0054                            __div_to_l_@quot 0009  
              ??_calculateClassProbability 00D6                                    ??_putch 0001  
                               __pbssBANK1 013D                                 __pbssBANK2 0200  
                       __size_of_eval_poly 0110                                 __pnvCOMRAM 005F  
                            __div_to_l_@f1 0001                              __div_to_l_@f2 0005  
                       __size_of_init_uart 001C                                    ?___flge 0001  
                                  ?___wmul 0001                                    ?_fround 0050  
                                  ?_printf 0108                      __size_of_getPrecision 0102  
                        getPrecision@class 0037                                  ?___xxtofl 0007  
                        __end_of_getRecall 0B30              __size_of_printConfusionMatrix 0160  
                        __end_of__npowers_ 597B                                    __Hparam 0000  
                               _scale$1393 0054                                    __Lparam 0000  
                          __size_of___flge 0120                                    ___fladd 30F8  
                _calculateClassProbability 1910                                    ___fldiv 2418  
                                  ___awdiv 057E                                    ___flneg 030E  
                             _getPrecision 092C                                    ___awmod 048C  
                                  ___flmul 2990                                    ___flsub 037E  
                                  ___fltol 0764                                    ___lldiv 04FC  
                          __size_of___wmul 0026                                    ___llmod 0426  
                                  __pcinit 02AE                          __end_of_eval_poly 0D4A  
                          __size_of_fround 027A                                    __ramtop 0800  
                       getAccuracy@correct 0104                      getAccuracy@prediction 0100  
             __end_of_calculateProbability 1F12                                    __ptext0 033C  
                                  __ptext1 0844                                    __ptext2 0A2E  
                                  __ptext3 092C                                    __ptext4 11E2  
                                  __ptext5 147A                                    __ptext6 35A0  
                                  __ptext7 2CE0                                    __ptext8 0286  
                                  __ptext9 02CA                            __size_of_printf 0BE6  
           _calculateClassProbability$1381 00E2                                ?__div_to_l_ 0001  
                                  _dpowers 59AF                               __size_of_exp 028C  
                             __size_of_log 017E                                    _isdigit 02CA  
                             __size_of_pow 01F4                                 ??___xxtofl 000B  
                        __end_of_init_uart 02AE                           ___awmod@dividend 0001  
                                  _predict 069C                                    _testSet 59D7  
                _calculateProbability$1380 00CA                  _calculateProbability$1376 00BA  
                _calculateProbability$1377 00BE                  _calculateProbability$1378 00C2  
                _calculateProbability$1379 00C6                       end_of_initialization 02C0  
                                  exp@sign 0094                              __Lmediumconst 4186  
                __size_of_calculateMetrics 01B8                              ??_getAccuracy 00FE  
                          ___lldiv@divisor 0005                         predict@inputVector 00EC  
                                  pow@sign 00A5                            ___lldiv@counter 000D  
                                _RCSTAbits 000FAB                                    printf@c 0134  
                                  printf@f 0108                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc2 000FDE  
                               getRecall@i 0041                                    sqrt@grs 0010  
                                  sqrt@exp 0014                             __tdiv_to_l_@f1 0001  
                           __tdiv_to_l_@f2 0005                              ?_printMetrics 0001  
                            ??__tdiv_to_l_ 0009                                ___fladd@grs 0073  
                            ___xxtofl@sign 000F                                  _TRISCbits 000F94  
                    calculateProbability@x 00AA                                ___fldiv@grs 0031  
                              ___fldiv@rem 002B                                ___flmul@grs 0044  
                              printf@width 012C                                  _TXSTAbits 000FAC  
                      __size_of__div_to_l_ 0128                 calculateClassProbability@i 00EA  
                      __end_of_getAccuracy 132A                             ??_printMetrics 005F  
                           __end_of___flge 0F88                             __end_of___wmul 030E  
                           __end_of_fround 218C                                 floor@expon 007C  
                           __end_of_printf 4186                             __end_of_stdevs 5947  
                      start_initialization 02AE                                 eval_poly@d 0078  
                               eval_poly@n 007A                                 eval_poly@x 0074  
                               ldexp@value 0084                        __end_of__tdiv_to_l_ 11E2  
                              __end_of_exp 2418                                __end_of_log 1758  
                              __end_of_pow 1CE0                                 frexp@value 0001  
                                _OpenUSART 03C6                  calculateProbability@stdev 00B2  
                    printConfusionMatrix@i 013B                      printConfusionMatrix@j 0139  
                          ___llmod@divisor 0012                       _calculateProbability 1CE0  
                          ___llmod@counter 0016                            getPrecision@sum 003F  
                           getRecall@class 0037                                   ??___flge 0009  
                                 ??___wmul 0005                           __CFG_LPT1OSC$OFF 000000  
                                 ??_fround 0054                                   ??_printf 0112  
                                ___fladd@a 0064                                  ___fladd@b 0060  
                               fround@prec 005C                                  ___fldiv@a 0022  
                                ___fldiv@b 001E         __size_of_calculateClassProbability 01DC  
                                ___flmul@a 003B                                  ___flmul@b 0037  
                                ___flsub@a 0078                                  ___flsub@b 0074  
                            __pcstackBANK0 0060                              __pcstackBANK1 0100  
                        __size_of___xxtofl 0150                                 ?_OpenUSART 0001  
                    ?_calculateProbability 00AA                           _calculateMetrics 1758  
                                __pnvBANK1 013F                                _getAccuracy 11E2  
                            __pmediumconst 4186                                   ?___fladd 0060  
                                _getRecall 0A2E                                   ?___fldiv 001E  
                                 ?___awdiv 0007                                   ?___flneg 0001  
                                 ?___awmod 0001                                   ?___flmul 0037  
                                 ?___flsub 0074                                   ?___fltol 0059  
                                 ?___lldiv 0001                                   ?___llmod 000E  
                                __npowers_ 5947                                __tdiv_to_l_ 10B0  
                             ??__div_to_l_ 0009               __end_of_printConfusionMatrix 15DA  
                                 ?_isdigit 0001                                  _eval_poly 0C3A  
                                 ?_predict 00EC          __end_of_calculateClassProbability 1AEC  
                           __size_of_floor 011E                             __size_of_ldexp 010A  
                           __size_of_frexp 009A                                  _init_uart 0292  
                           __size_of_scale 0418                             __size_of_putch 000C  
                     __end_of_printMetrics 092C                             ___wmul@product 0005  
                                 _PIE1bits 000F9D                                   _PIR1bits 000F9E  
                       __end_of__div_to_l_ 10B0                           __CFG_WDTPS$32768 000000  
                               ?_getRecall 0037                          ___wmul@multiplier 0001  
                               printf@flag 0120                                 printf@fval 012E  
                               printf@prec 0132                                 ?_eval_poly 0074  
                             getAccuracy@i 0106                                 ?_init_uart 0001  
                   ??_calculateProbability 005F                                ??_OpenUSART 0003  
                          OpenUSART@config 0003                                  frexp@eptr 0005  
                                 __Hrparam 0000                                   __Lrparam 0000  
                         predict@bestLabel 00F6                           __size_of___fladd 04A8  
                         __size_of___fldiv 02B4                           __size_of___awdiv 0084  
                         __size_of___flneg 002E                           __size_of___awmod 0070  
                         __size_of___flmul 0350                           __size_of___flsub 0048  
                         __size_of___fltol 00E0                           __size_of___lldiv 0082  
                         __size_of___llmod 0066                                _fround$1391 0058  
                              _fround$1392 0054                           predict@classProb 00F2  
                              _isdigit$959 0002                                   _exp$1395 008E  
                                 ___xxtofl 132A                           __size_of_isdigit 001E  
                                 __ptext10 1F12                                   __ptext11 048C  
                                 __ptext20 069C                                   __ptext12 057E  
                                 __ptext21 1910                                   __ptext13 10B0  
                                 __ptext30 132A                                   __ptext22 1CE0  
                                 __ptext14 0F88                                   __ptext31 0764  
                                 __ptext23 26CC                                   __ptext15 0426  
                                 __ptext32 0E68                                   __ptext24 1AEC  
                                 __ptext16 04FC                                   __ptext33 0C3A  
                                 __ptext25 15DA                                   __ptext17 0292  
                                 __ptext34 2990                                   __ptext26 218C  
                                 __ptext18 03C6                                   __ptext35 037E  
                                 __ptext27 0B30                                   __ptext19 1758  
                                 __ptext36 30F8                                   __ptext28 0D4A  
                                 __ptext37 030E                                   __ptext29 0602  
                                 __ptext38 2418                                   __ptext39 02E8  
                         __size_of_predict 00C8                                   __powers_ 597B  
     calculateClassProbability@classNumber 00D2                                   _pow$1397 009D  
                                 _pow$1398 00A1                              __size_of_main 0042  
                            __size_of_sqrt 02C4                       _printConfusionMatrix 147A  
                              ??_getRecall 003B                                _UART1Config 005F  
                                printf@len 011E                                  printf@exp 012A  
                                printf@val 0126                                   exp@coeff 7D77  
                                 log@coeff 7D9F                   __end_of_calculateMetrics 1910  
                                putch@data 0001                                ??_eval_poly 007C  
                            getPrecision@i 0041                             OpenUSART@spbrg 0001  
                    __size_of_printMetrics 00E8                               getRecall@sum 003F  
                                 isdigit@c 0003                                   scale@scl 0058  
                          predict@bestProb 00EE                                ??_init_uart 0004  
                                sqrt@tfrac 000B                           __tdiv_to_l_@exp1 0011  
                         __tdiv_to_l_@cntr 0010                           __tdiv_to_l_@quot 000C  
                         ___lldiv@dividend 0001                               ?_getAccuracy 00FA  
                    ?_printConfusionMatrix 0001                                   predict@i 00F8  
                            ?_getPrecision 0037                                   printf@ap 011C  
                                 printf@cp 011A                          calculateMetrics@i 0108  
                        calculateMetrics@j 0106                               _printMetrics 0844  
                             ?__tdiv_to_l_ 0001                                   sqrt@frac 001A  
                                 sqrt@sign 0009                                   sqrt@root 0016  
                              _printf$1394 0116                      _calculateMetrics$1382 0102  
                    _calculateMetrics$1383 0104                           ___lldiv@quotient 0009  
                            ___fladd@signs 0070                               ___fladd@aexp 0071  
                             ___fladd@bexp 0072                   calculateProbability@mean 00AE  
                  calculateProbability@res 00CE                 calculateMetrics@prediction 0100  
                           ??_getPrecision 003B  
